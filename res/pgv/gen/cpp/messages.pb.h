// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages.proto

#ifndef PROTOBUF_messages_2eproto__INCLUDED
#define PROTOBUF_messages_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "validate/validate.pb.h"
// @@protoc_insertion_point(includes)
namespace pgv {
class MessageB;
class MessageBDefaultTypeInternal;
extern MessageBDefaultTypeInternal _MessageB_default_instance_;
class MessageC;
class MessageCDefaultTypeInternal;
extern MessageCDefaultTypeInternal _MessageC_default_instance_;
class MessageD;
class MessageDDefaultTypeInternal;
extern MessageDDefaultTypeInternal _MessageD_default_instance_;
class MessageE;
class MessageEDefaultTypeInternal;
extern MessageEDefaultTypeInternal _MessageE_default_instance_;
class MessageF;
class MessageFDefaultTypeInternal;
extern MessageFDefaultTypeInternal _MessageF_default_instance_;
}  // namespace pgv

namespace pgv {

namespace protobuf_messages_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_messages_2eproto

// ===================================================================

class MessageB : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pgv.MessageB) */ {
 public:
  MessageB();
  virtual ~MessageB();

  MessageB(const MessageB& from);

  inline MessageB& operator=(const MessageB& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MessageB(MessageB&& from) noexcept
    : MessageB() {
    *this = ::std::move(from);
  }

  inline MessageB& operator=(MessageB&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageB& default_instance();

  static inline const MessageB* internal_default_instance() {
    return reinterpret_cast<const MessageB*>(
               &_MessageB_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(MessageB* other);
  friend void swap(MessageB& a, MessageB& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MessageB* New() const PROTOBUF_FINAL { return New(NULL); }

  MessageB* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MessageB& from);
  void MergeFrom(const MessageB& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MessageB* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .pgv.MessageE field4 = 4;
  bool has_field4() const;
  void clear_field4();
  static const int kField4FieldNumber = 4;
  const ::pgv::MessageE& field4() const;
  ::pgv::MessageE* mutable_field4();
  ::pgv::MessageE* release_field4();
  void set_allocated_field4(::pgv::MessageE* field4);

  // .pgv.MessageF field5 = 5;
  bool has_field5() const;
  void clear_field5();
  static const int kField5FieldNumber = 5;
  const ::pgv::MessageF& field5() const;
  ::pgv::MessageF* mutable_field5();
  ::pgv::MessageF* release_field5();
  void set_allocated_field5(::pgv::MessageF* field5);

  // uint32 field1 = 1 [(.validate.rules) = {
  void clear_field1();
  static const int kField1FieldNumber = 1;
  ::google::protobuf::uint32 field1() const;
  void set_field1(::google::protobuf::uint32 value);

  // uint32 field2 = 2 [(.validate.rules) = {
  void clear_field2();
  static const int kField2FieldNumber = 2;
  ::google::protobuf::uint32 field2() const;
  void set_field2(::google::protobuf::uint32 value);

  // uint32 field3 = 3 [(.validate.rules) = {
  void clear_field3();
  static const int kField3FieldNumber = 3;
  ::google::protobuf::uint32 field3() const;
  void set_field3(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pgv.MessageB)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::pgv::MessageE* field4_;
  ::pgv::MessageF* field5_;
  ::google::protobuf::uint32 field1_;
  ::google::protobuf::uint32 field2_;
  ::google::protobuf::uint32 field3_;
  mutable int _cached_size_;
  friend struct protobuf_messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MessageC : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pgv.MessageC) */ {
 public:
  MessageC();
  virtual ~MessageC();

  MessageC(const MessageC& from);

  inline MessageC& operator=(const MessageC& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MessageC(MessageC&& from) noexcept
    : MessageC() {
    *this = ::std::move(from);
  }

  inline MessageC& operator=(MessageC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageC& default_instance();

  static inline const MessageC* internal_default_instance() {
    return reinterpret_cast<const MessageC*>(
               &_MessageC_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(MessageC* other);
  friend void swap(MessageC& a, MessageC& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MessageC* New() const PROTOBUF_FINAL { return New(NULL); }

  MessageC* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MessageC& from);
  void MergeFrom(const MessageC& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MessageC* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .pgv.MessageE field4 = 4;
  bool has_field4() const;
  void clear_field4();
  static const int kField4FieldNumber = 4;
  const ::pgv::MessageE& field4() const;
  ::pgv::MessageE* mutable_field4();
  ::pgv::MessageE* release_field4();
  void set_allocated_field4(::pgv::MessageE* field4);

  // .pgv.MessageF field5 = 5;
  bool has_field5() const;
  void clear_field5();
  static const int kField5FieldNumber = 5;
  const ::pgv::MessageF& field5() const;
  ::pgv::MessageF* mutable_field5();
  ::pgv::MessageF* release_field5();
  void set_allocated_field5(::pgv::MessageF* field5);

  // uint32 field1 = 1 [(.validate.rules) = {
  void clear_field1();
  static const int kField1FieldNumber = 1;
  ::google::protobuf::uint32 field1() const;
  void set_field1(::google::protobuf::uint32 value);

  // uint32 field2 = 2 [(.validate.rules) = {
  void clear_field2();
  static const int kField2FieldNumber = 2;
  ::google::protobuf::uint32 field2() const;
  void set_field2(::google::protobuf::uint32 value);

  // uint32 field3 = 3 [(.validate.rules) = {
  void clear_field3();
  static const int kField3FieldNumber = 3;
  ::google::protobuf::uint32 field3() const;
  void set_field3(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pgv.MessageC)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::pgv::MessageE* field4_;
  ::pgv::MessageF* field5_;
  ::google::protobuf::uint32 field1_;
  ::google::protobuf::uint32 field2_;
  ::google::protobuf::uint32 field3_;
  mutable int _cached_size_;
  friend struct protobuf_messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MessageD : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pgv.MessageD) */ {
 public:
  MessageD();
  virtual ~MessageD();

  MessageD(const MessageD& from);

  inline MessageD& operator=(const MessageD& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MessageD(MessageD&& from) noexcept
    : MessageD() {
    *this = ::std::move(from);
  }

  inline MessageD& operator=(MessageD&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageD& default_instance();

  static inline const MessageD* internal_default_instance() {
    return reinterpret_cast<const MessageD*>(
               &_MessageD_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(MessageD* other);
  friend void swap(MessageD& a, MessageD& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MessageD* New() const PROTOBUF_FINAL { return New(NULL); }

  MessageD* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MessageD& from);
  void MergeFrom(const MessageD& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MessageD* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .pgv.MessageE field4 = 4;
  bool has_field4() const;
  void clear_field4();
  static const int kField4FieldNumber = 4;
  const ::pgv::MessageE& field4() const;
  ::pgv::MessageE* mutable_field4();
  ::pgv::MessageE* release_field4();
  void set_allocated_field4(::pgv::MessageE* field4);

  // .pgv.MessageF field5 = 5;
  bool has_field5() const;
  void clear_field5();
  static const int kField5FieldNumber = 5;
  const ::pgv::MessageF& field5() const;
  ::pgv::MessageF* mutable_field5();
  ::pgv::MessageF* release_field5();
  void set_allocated_field5(::pgv::MessageF* field5);

  // uint32 field1 = 1 [(.validate.rules) = {
  void clear_field1();
  static const int kField1FieldNumber = 1;
  ::google::protobuf::uint32 field1() const;
  void set_field1(::google::protobuf::uint32 value);

  // uint32 field2 = 2 [(.validate.rules) = {
  void clear_field2();
  static const int kField2FieldNumber = 2;
  ::google::protobuf::uint32 field2() const;
  void set_field2(::google::protobuf::uint32 value);

  // uint32 field3 = 3 [(.validate.rules) = {
  void clear_field3();
  static const int kField3FieldNumber = 3;
  ::google::protobuf::uint32 field3() const;
  void set_field3(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pgv.MessageD)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::pgv::MessageE* field4_;
  ::pgv::MessageF* field5_;
  ::google::protobuf::uint32 field1_;
  ::google::protobuf::uint32 field2_;
  ::google::protobuf::uint32 field3_;
  mutable int _cached_size_;
  friend struct protobuf_messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MessageE : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pgv.MessageE) */ {
 public:
  MessageE();
  virtual ~MessageE();

  MessageE(const MessageE& from);

  inline MessageE& operator=(const MessageE& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MessageE(MessageE&& from) noexcept
    : MessageE() {
    *this = ::std::move(from);
  }

  inline MessageE& operator=(MessageE&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageE& default_instance();

  static inline const MessageE* internal_default_instance() {
    return reinterpret_cast<const MessageE*>(
               &_MessageE_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(MessageE* other);
  friend void swap(MessageE& a, MessageE& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MessageE* New() const PROTOBUF_FINAL { return New(NULL); }

  MessageE* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MessageE& from);
  void MergeFrom(const MessageE& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MessageE* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .pgv.MessageF field5 = 5;
  bool has_field5() const;
  void clear_field5();
  static const int kField5FieldNumber = 5;
  const ::pgv::MessageF& field5() const;
  ::pgv::MessageF* mutable_field5();
  ::pgv::MessageF* release_field5();
  void set_allocated_field5(::pgv::MessageF* field5);

  // uint32 field1 = 1 [(.validate.rules) = {
  void clear_field1();
  static const int kField1FieldNumber = 1;
  ::google::protobuf::uint32 field1() const;
  void set_field1(::google::protobuf::uint32 value);

  // uint32 field2 = 2 [(.validate.rules) = {
  void clear_field2();
  static const int kField2FieldNumber = 2;
  ::google::protobuf::uint32 field2() const;
  void set_field2(::google::protobuf::uint32 value);

  // uint32 field3 = 3 [(.validate.rules) = {
  void clear_field3();
  static const int kField3FieldNumber = 3;
  ::google::protobuf::uint32 field3() const;
  void set_field3(::google::protobuf::uint32 value);

  // uint32 field4 = 4 [(.validate.rules) = {
  void clear_field4();
  static const int kField4FieldNumber = 4;
  ::google::protobuf::uint32 field4() const;
  void set_field4(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pgv.MessageE)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::pgv::MessageF* field5_;
  ::google::protobuf::uint32 field1_;
  ::google::protobuf::uint32 field2_;
  ::google::protobuf::uint32 field3_;
  ::google::protobuf::uint32 field4_;
  mutable int _cached_size_;
  friend struct protobuf_messages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MessageF : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pgv.MessageF) */ {
 public:
  MessageF();
  virtual ~MessageF();

  MessageF(const MessageF& from);

  inline MessageF& operator=(const MessageF& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MessageF(MessageF&& from) noexcept
    : MessageF() {
    *this = ::std::move(from);
  }

  inline MessageF& operator=(MessageF&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageF& default_instance();

  static inline const MessageF* internal_default_instance() {
    return reinterpret_cast<const MessageF*>(
               &_MessageF_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(MessageF* other);
  friend void swap(MessageF& a, MessageF& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MessageF* New() const PROTOBUF_FINAL { return New(NULL); }

  MessageF* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MessageF& from);
  void MergeFrom(const MessageF& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MessageF* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 field1 = 1 [(.validate.rules) = {
  void clear_field1();
  static const int kField1FieldNumber = 1;
  ::google::protobuf::uint32 field1() const;
  void set_field1(::google::protobuf::uint32 value);

  // uint32 field2 = 2 [(.validate.rules) = {
  void clear_field2();
  static const int kField2FieldNumber = 2;
  ::google::protobuf::uint32 field2() const;
  void set_field2(::google::protobuf::uint32 value);

  // uint32 field3 = 3 [(.validate.rules) = {
  void clear_field3();
  static const int kField3FieldNumber = 3;
  ::google::protobuf::uint32 field3() const;
  void set_field3(::google::protobuf::uint32 value);

  // uint32 field4 = 4 [(.validate.rules) = {
  void clear_field4();
  static const int kField4FieldNumber = 4;
  ::google::protobuf::uint32 field4() const;
  void set_field4(::google::protobuf::uint32 value);

  // uint32 field5 = 5 [(.validate.rules) = {
  void clear_field5();
  static const int kField5FieldNumber = 5;
  ::google::protobuf::uint32 field5() const;
  void set_field5(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pgv.MessageF)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 field1_;
  ::google::protobuf::uint32 field2_;
  ::google::protobuf::uint32 field3_;
  ::google::protobuf::uint32 field4_;
  ::google::protobuf::uint32 field5_;
  mutable int _cached_size_;
  friend struct protobuf_messages_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MessageB

// uint32 field1 = 1 [(.validate.rules) = {
inline void MessageB::clear_field1() {
  field1_ = 0u;
}
inline ::google::protobuf::uint32 MessageB::field1() const {
  // @@protoc_insertion_point(field_get:pgv.MessageB.field1)
  return field1_;
}
inline void MessageB::set_field1(::google::protobuf::uint32 value) {
  
  field1_ = value;
  // @@protoc_insertion_point(field_set:pgv.MessageB.field1)
}

// uint32 field2 = 2 [(.validate.rules) = {
inline void MessageB::clear_field2() {
  field2_ = 0u;
}
inline ::google::protobuf::uint32 MessageB::field2() const {
  // @@protoc_insertion_point(field_get:pgv.MessageB.field2)
  return field2_;
}
inline void MessageB::set_field2(::google::protobuf::uint32 value) {
  
  field2_ = value;
  // @@protoc_insertion_point(field_set:pgv.MessageB.field2)
}

// uint32 field3 = 3 [(.validate.rules) = {
inline void MessageB::clear_field3() {
  field3_ = 0u;
}
inline ::google::protobuf::uint32 MessageB::field3() const {
  // @@protoc_insertion_point(field_get:pgv.MessageB.field3)
  return field3_;
}
inline void MessageB::set_field3(::google::protobuf::uint32 value) {
  
  field3_ = value;
  // @@protoc_insertion_point(field_set:pgv.MessageB.field3)
}

// .pgv.MessageE field4 = 4;
inline bool MessageB::has_field4() const {
  return this != internal_default_instance() && field4_ != NULL;
}
inline void MessageB::clear_field4() {
  if (GetArenaNoVirtual() == NULL && field4_ != NULL) delete field4_;
  field4_ = NULL;
}
inline const ::pgv::MessageE& MessageB::field4() const {
  const ::pgv::MessageE* p = field4_;
  // @@protoc_insertion_point(field_get:pgv.MessageB.field4)
  return p != NULL ? *p : *reinterpret_cast<const ::pgv::MessageE*>(
      &::pgv::_MessageE_default_instance_);
}
inline ::pgv::MessageE* MessageB::mutable_field4() {
  
  if (field4_ == NULL) {
    field4_ = new ::pgv::MessageE;
  }
  // @@protoc_insertion_point(field_mutable:pgv.MessageB.field4)
  return field4_;
}
inline ::pgv::MessageE* MessageB::release_field4() {
  // @@protoc_insertion_point(field_release:pgv.MessageB.field4)
  
  ::pgv::MessageE* temp = field4_;
  field4_ = NULL;
  return temp;
}
inline void MessageB::set_allocated_field4(::pgv::MessageE* field4) {
  delete field4_;
  field4_ = field4;
  if (field4) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pgv.MessageB.field4)
}

// .pgv.MessageF field5 = 5;
inline bool MessageB::has_field5() const {
  return this != internal_default_instance() && field5_ != NULL;
}
inline void MessageB::clear_field5() {
  if (GetArenaNoVirtual() == NULL && field5_ != NULL) delete field5_;
  field5_ = NULL;
}
inline const ::pgv::MessageF& MessageB::field5() const {
  const ::pgv::MessageF* p = field5_;
  // @@protoc_insertion_point(field_get:pgv.MessageB.field5)
  return p != NULL ? *p : *reinterpret_cast<const ::pgv::MessageF*>(
      &::pgv::_MessageF_default_instance_);
}
inline ::pgv::MessageF* MessageB::mutable_field5() {
  
  if (field5_ == NULL) {
    field5_ = new ::pgv::MessageF;
  }
  // @@protoc_insertion_point(field_mutable:pgv.MessageB.field5)
  return field5_;
}
inline ::pgv::MessageF* MessageB::release_field5() {
  // @@protoc_insertion_point(field_release:pgv.MessageB.field5)
  
  ::pgv::MessageF* temp = field5_;
  field5_ = NULL;
  return temp;
}
inline void MessageB::set_allocated_field5(::pgv::MessageF* field5) {
  delete field5_;
  field5_ = field5;
  if (field5) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pgv.MessageB.field5)
}

// -------------------------------------------------------------------

// MessageC

// uint32 field1 = 1 [(.validate.rules) = {
inline void MessageC::clear_field1() {
  field1_ = 0u;
}
inline ::google::protobuf::uint32 MessageC::field1() const {
  // @@protoc_insertion_point(field_get:pgv.MessageC.field1)
  return field1_;
}
inline void MessageC::set_field1(::google::protobuf::uint32 value) {
  
  field1_ = value;
  // @@protoc_insertion_point(field_set:pgv.MessageC.field1)
}

// uint32 field2 = 2 [(.validate.rules) = {
inline void MessageC::clear_field2() {
  field2_ = 0u;
}
inline ::google::protobuf::uint32 MessageC::field2() const {
  // @@protoc_insertion_point(field_get:pgv.MessageC.field2)
  return field2_;
}
inline void MessageC::set_field2(::google::protobuf::uint32 value) {
  
  field2_ = value;
  // @@protoc_insertion_point(field_set:pgv.MessageC.field2)
}

// uint32 field3 = 3 [(.validate.rules) = {
inline void MessageC::clear_field3() {
  field3_ = 0u;
}
inline ::google::protobuf::uint32 MessageC::field3() const {
  // @@protoc_insertion_point(field_get:pgv.MessageC.field3)
  return field3_;
}
inline void MessageC::set_field3(::google::protobuf::uint32 value) {
  
  field3_ = value;
  // @@protoc_insertion_point(field_set:pgv.MessageC.field3)
}

// .pgv.MessageE field4 = 4;
inline bool MessageC::has_field4() const {
  return this != internal_default_instance() && field4_ != NULL;
}
inline void MessageC::clear_field4() {
  if (GetArenaNoVirtual() == NULL && field4_ != NULL) delete field4_;
  field4_ = NULL;
}
inline const ::pgv::MessageE& MessageC::field4() const {
  const ::pgv::MessageE* p = field4_;
  // @@protoc_insertion_point(field_get:pgv.MessageC.field4)
  return p != NULL ? *p : *reinterpret_cast<const ::pgv::MessageE*>(
      &::pgv::_MessageE_default_instance_);
}
inline ::pgv::MessageE* MessageC::mutable_field4() {
  
  if (field4_ == NULL) {
    field4_ = new ::pgv::MessageE;
  }
  // @@protoc_insertion_point(field_mutable:pgv.MessageC.field4)
  return field4_;
}
inline ::pgv::MessageE* MessageC::release_field4() {
  // @@protoc_insertion_point(field_release:pgv.MessageC.field4)
  
  ::pgv::MessageE* temp = field4_;
  field4_ = NULL;
  return temp;
}
inline void MessageC::set_allocated_field4(::pgv::MessageE* field4) {
  delete field4_;
  field4_ = field4;
  if (field4) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pgv.MessageC.field4)
}

// .pgv.MessageF field5 = 5;
inline bool MessageC::has_field5() const {
  return this != internal_default_instance() && field5_ != NULL;
}
inline void MessageC::clear_field5() {
  if (GetArenaNoVirtual() == NULL && field5_ != NULL) delete field5_;
  field5_ = NULL;
}
inline const ::pgv::MessageF& MessageC::field5() const {
  const ::pgv::MessageF* p = field5_;
  // @@protoc_insertion_point(field_get:pgv.MessageC.field5)
  return p != NULL ? *p : *reinterpret_cast<const ::pgv::MessageF*>(
      &::pgv::_MessageF_default_instance_);
}
inline ::pgv::MessageF* MessageC::mutable_field5() {
  
  if (field5_ == NULL) {
    field5_ = new ::pgv::MessageF;
  }
  // @@protoc_insertion_point(field_mutable:pgv.MessageC.field5)
  return field5_;
}
inline ::pgv::MessageF* MessageC::release_field5() {
  // @@protoc_insertion_point(field_release:pgv.MessageC.field5)
  
  ::pgv::MessageF* temp = field5_;
  field5_ = NULL;
  return temp;
}
inline void MessageC::set_allocated_field5(::pgv::MessageF* field5) {
  delete field5_;
  field5_ = field5;
  if (field5) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pgv.MessageC.field5)
}

// -------------------------------------------------------------------

// MessageD

// uint32 field1 = 1 [(.validate.rules) = {
inline void MessageD::clear_field1() {
  field1_ = 0u;
}
inline ::google::protobuf::uint32 MessageD::field1() const {
  // @@protoc_insertion_point(field_get:pgv.MessageD.field1)
  return field1_;
}
inline void MessageD::set_field1(::google::protobuf::uint32 value) {
  
  field1_ = value;
  // @@protoc_insertion_point(field_set:pgv.MessageD.field1)
}

// uint32 field2 = 2 [(.validate.rules) = {
inline void MessageD::clear_field2() {
  field2_ = 0u;
}
inline ::google::protobuf::uint32 MessageD::field2() const {
  // @@protoc_insertion_point(field_get:pgv.MessageD.field2)
  return field2_;
}
inline void MessageD::set_field2(::google::protobuf::uint32 value) {
  
  field2_ = value;
  // @@protoc_insertion_point(field_set:pgv.MessageD.field2)
}

// uint32 field3 = 3 [(.validate.rules) = {
inline void MessageD::clear_field3() {
  field3_ = 0u;
}
inline ::google::protobuf::uint32 MessageD::field3() const {
  // @@protoc_insertion_point(field_get:pgv.MessageD.field3)
  return field3_;
}
inline void MessageD::set_field3(::google::protobuf::uint32 value) {
  
  field3_ = value;
  // @@protoc_insertion_point(field_set:pgv.MessageD.field3)
}

// .pgv.MessageE field4 = 4;
inline bool MessageD::has_field4() const {
  return this != internal_default_instance() && field4_ != NULL;
}
inline void MessageD::clear_field4() {
  if (GetArenaNoVirtual() == NULL && field4_ != NULL) delete field4_;
  field4_ = NULL;
}
inline const ::pgv::MessageE& MessageD::field4() const {
  const ::pgv::MessageE* p = field4_;
  // @@protoc_insertion_point(field_get:pgv.MessageD.field4)
  return p != NULL ? *p : *reinterpret_cast<const ::pgv::MessageE*>(
      &::pgv::_MessageE_default_instance_);
}
inline ::pgv::MessageE* MessageD::mutable_field4() {
  
  if (field4_ == NULL) {
    field4_ = new ::pgv::MessageE;
  }
  // @@protoc_insertion_point(field_mutable:pgv.MessageD.field4)
  return field4_;
}
inline ::pgv::MessageE* MessageD::release_field4() {
  // @@protoc_insertion_point(field_release:pgv.MessageD.field4)
  
  ::pgv::MessageE* temp = field4_;
  field4_ = NULL;
  return temp;
}
inline void MessageD::set_allocated_field4(::pgv::MessageE* field4) {
  delete field4_;
  field4_ = field4;
  if (field4) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pgv.MessageD.field4)
}

// .pgv.MessageF field5 = 5;
inline bool MessageD::has_field5() const {
  return this != internal_default_instance() && field5_ != NULL;
}
inline void MessageD::clear_field5() {
  if (GetArenaNoVirtual() == NULL && field5_ != NULL) delete field5_;
  field5_ = NULL;
}
inline const ::pgv::MessageF& MessageD::field5() const {
  const ::pgv::MessageF* p = field5_;
  // @@protoc_insertion_point(field_get:pgv.MessageD.field5)
  return p != NULL ? *p : *reinterpret_cast<const ::pgv::MessageF*>(
      &::pgv::_MessageF_default_instance_);
}
inline ::pgv::MessageF* MessageD::mutable_field5() {
  
  if (field5_ == NULL) {
    field5_ = new ::pgv::MessageF;
  }
  // @@protoc_insertion_point(field_mutable:pgv.MessageD.field5)
  return field5_;
}
inline ::pgv::MessageF* MessageD::release_field5() {
  // @@protoc_insertion_point(field_release:pgv.MessageD.field5)
  
  ::pgv::MessageF* temp = field5_;
  field5_ = NULL;
  return temp;
}
inline void MessageD::set_allocated_field5(::pgv::MessageF* field5) {
  delete field5_;
  field5_ = field5;
  if (field5) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pgv.MessageD.field5)
}

// -------------------------------------------------------------------

// MessageE

// uint32 field1 = 1 [(.validate.rules) = {
inline void MessageE::clear_field1() {
  field1_ = 0u;
}
inline ::google::protobuf::uint32 MessageE::field1() const {
  // @@protoc_insertion_point(field_get:pgv.MessageE.field1)
  return field1_;
}
inline void MessageE::set_field1(::google::protobuf::uint32 value) {
  
  field1_ = value;
  // @@protoc_insertion_point(field_set:pgv.MessageE.field1)
}

// uint32 field2 = 2 [(.validate.rules) = {
inline void MessageE::clear_field2() {
  field2_ = 0u;
}
inline ::google::protobuf::uint32 MessageE::field2() const {
  // @@protoc_insertion_point(field_get:pgv.MessageE.field2)
  return field2_;
}
inline void MessageE::set_field2(::google::protobuf::uint32 value) {
  
  field2_ = value;
  // @@protoc_insertion_point(field_set:pgv.MessageE.field2)
}

// uint32 field3 = 3 [(.validate.rules) = {
inline void MessageE::clear_field3() {
  field3_ = 0u;
}
inline ::google::protobuf::uint32 MessageE::field3() const {
  // @@protoc_insertion_point(field_get:pgv.MessageE.field3)
  return field3_;
}
inline void MessageE::set_field3(::google::protobuf::uint32 value) {
  
  field3_ = value;
  // @@protoc_insertion_point(field_set:pgv.MessageE.field3)
}

// uint32 field4 = 4 [(.validate.rules) = {
inline void MessageE::clear_field4() {
  field4_ = 0u;
}
inline ::google::protobuf::uint32 MessageE::field4() const {
  // @@protoc_insertion_point(field_get:pgv.MessageE.field4)
  return field4_;
}
inline void MessageE::set_field4(::google::protobuf::uint32 value) {
  
  field4_ = value;
  // @@protoc_insertion_point(field_set:pgv.MessageE.field4)
}

// .pgv.MessageF field5 = 5;
inline bool MessageE::has_field5() const {
  return this != internal_default_instance() && field5_ != NULL;
}
inline void MessageE::clear_field5() {
  if (GetArenaNoVirtual() == NULL && field5_ != NULL) delete field5_;
  field5_ = NULL;
}
inline const ::pgv::MessageF& MessageE::field5() const {
  const ::pgv::MessageF* p = field5_;
  // @@protoc_insertion_point(field_get:pgv.MessageE.field5)
  return p != NULL ? *p : *reinterpret_cast<const ::pgv::MessageF*>(
      &::pgv::_MessageF_default_instance_);
}
inline ::pgv::MessageF* MessageE::mutable_field5() {
  
  if (field5_ == NULL) {
    field5_ = new ::pgv::MessageF;
  }
  // @@protoc_insertion_point(field_mutable:pgv.MessageE.field5)
  return field5_;
}
inline ::pgv::MessageF* MessageE::release_field5() {
  // @@protoc_insertion_point(field_release:pgv.MessageE.field5)
  
  ::pgv::MessageF* temp = field5_;
  field5_ = NULL;
  return temp;
}
inline void MessageE::set_allocated_field5(::pgv::MessageF* field5) {
  delete field5_;
  field5_ = field5;
  if (field5) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pgv.MessageE.field5)
}

// -------------------------------------------------------------------

// MessageF

// uint32 field1 = 1 [(.validate.rules) = {
inline void MessageF::clear_field1() {
  field1_ = 0u;
}
inline ::google::protobuf::uint32 MessageF::field1() const {
  // @@protoc_insertion_point(field_get:pgv.MessageF.field1)
  return field1_;
}
inline void MessageF::set_field1(::google::protobuf::uint32 value) {
  
  field1_ = value;
  // @@protoc_insertion_point(field_set:pgv.MessageF.field1)
}

// uint32 field2 = 2 [(.validate.rules) = {
inline void MessageF::clear_field2() {
  field2_ = 0u;
}
inline ::google::protobuf::uint32 MessageF::field2() const {
  // @@protoc_insertion_point(field_get:pgv.MessageF.field2)
  return field2_;
}
inline void MessageF::set_field2(::google::protobuf::uint32 value) {
  
  field2_ = value;
  // @@protoc_insertion_point(field_set:pgv.MessageF.field2)
}

// uint32 field3 = 3 [(.validate.rules) = {
inline void MessageF::clear_field3() {
  field3_ = 0u;
}
inline ::google::protobuf::uint32 MessageF::field3() const {
  // @@protoc_insertion_point(field_get:pgv.MessageF.field3)
  return field3_;
}
inline void MessageF::set_field3(::google::protobuf::uint32 value) {
  
  field3_ = value;
  // @@protoc_insertion_point(field_set:pgv.MessageF.field3)
}

// uint32 field4 = 4 [(.validate.rules) = {
inline void MessageF::clear_field4() {
  field4_ = 0u;
}
inline ::google::protobuf::uint32 MessageF::field4() const {
  // @@protoc_insertion_point(field_get:pgv.MessageF.field4)
  return field4_;
}
inline void MessageF::set_field4(::google::protobuf::uint32 value) {
  
  field4_ = value;
  // @@protoc_insertion_point(field_set:pgv.MessageF.field4)
}

// uint32 field5 = 5 [(.validate.rules) = {
inline void MessageF::clear_field5() {
  field5_ = 0u;
}
inline ::google::protobuf::uint32 MessageF::field5() const {
  // @@protoc_insertion_point(field_get:pgv.MessageF.field5)
  return field5_;
}
inline void MessageF::set_field5(::google::protobuf::uint32 value) {
  
  field5_ = value;
  // @@protoc_insertion_point(field_set:pgv.MessageF.field5)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace pgv

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_messages_2eproto__INCLUDED
