// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: small.proto

#ifndef PROTOBUF_small_2eproto__INCLUDED
#define PROTOBUF_small_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "validate/validate.pb.h"
// @@protoc_insertion_point(includes)
namespace pgv {
class Small;
class SmallDefaultTypeInternal;
extern SmallDefaultTypeInternal _Small_default_instance_;
class Small_MessageB;
class Small_MessageBDefaultTypeInternal;
extern Small_MessageBDefaultTypeInternal _Small_MessageB_default_instance_;
class Small_MessageC;
class Small_MessageCDefaultTypeInternal;
extern Small_MessageCDefaultTypeInternal _Small_MessageC_default_instance_;
class Small_MessageD;
class Small_MessageDDefaultTypeInternal;
extern Small_MessageDDefaultTypeInternal _Small_MessageD_default_instance_;
class Small_MessageE;
class Small_MessageEDefaultTypeInternal;
extern Small_MessageEDefaultTypeInternal _Small_MessageE_default_instance_;
class Small_MessageF;
class Small_MessageFDefaultTypeInternal;
extern Small_MessageFDefaultTypeInternal _Small_MessageF_default_instance_;
}  // namespace pgv

namespace pgv {

namespace protobuf_small_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_small_2eproto

// ===================================================================

class Small_MessageB : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pgv.Small.MessageB) */ {
 public:
  Small_MessageB();
  virtual ~Small_MessageB();

  Small_MessageB(const Small_MessageB& from);

  inline Small_MessageB& operator=(const Small_MessageB& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Small_MessageB(Small_MessageB&& from) noexcept
    : Small_MessageB() {
    *this = ::std::move(from);
  }

  inline Small_MessageB& operator=(Small_MessageB&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Small_MessageB& default_instance();

  static inline const Small_MessageB* internal_default_instance() {
    return reinterpret_cast<const Small_MessageB*>(
               &_Small_MessageB_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Small_MessageB* other);
  friend void swap(Small_MessageB& a, Small_MessageB& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Small_MessageB* New() const PROTOBUF_FINAL { return New(NULL); }

  Small_MessageB* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Small_MessageB& from);
  void MergeFrom(const Small_MessageB& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Small_MessageB* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .pgv.Small.MessageE field4 = 4;
  bool has_field4() const;
  void clear_field4();
  static const int kField4FieldNumber = 4;
  const ::pgv::Small_MessageE& field4() const;
  ::pgv::Small_MessageE* mutable_field4();
  ::pgv::Small_MessageE* release_field4();
  void set_allocated_field4(::pgv::Small_MessageE* field4);

  // .pgv.Small.MessageF field5 = 5;
  bool has_field5() const;
  void clear_field5();
  static const int kField5FieldNumber = 5;
  const ::pgv::Small_MessageF& field5() const;
  ::pgv::Small_MessageF* mutable_field5();
  ::pgv::Small_MessageF* release_field5();
  void set_allocated_field5(::pgv::Small_MessageF* field5);

  // uint32 field1 = 1 [(.validate.rules) = {
  void clear_field1();
  static const int kField1FieldNumber = 1;
  ::google::protobuf::uint32 field1() const;
  void set_field1(::google::protobuf::uint32 value);

  // uint32 field2 = 2 [(.validate.rules) = {
  void clear_field2();
  static const int kField2FieldNumber = 2;
  ::google::protobuf::uint32 field2() const;
  void set_field2(::google::protobuf::uint32 value);

  // uint32 field3 = 3 [(.validate.rules) = {
  void clear_field3();
  static const int kField3FieldNumber = 3;
  ::google::protobuf::uint32 field3() const;
  void set_field3(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pgv.Small.MessageB)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::pgv::Small_MessageE* field4_;
  ::pgv::Small_MessageF* field5_;
  ::google::protobuf::uint32 field1_;
  ::google::protobuf::uint32 field2_;
  ::google::protobuf::uint32 field3_;
  mutable int _cached_size_;
  friend struct protobuf_small_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Small_MessageC : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pgv.Small.MessageC) */ {
 public:
  Small_MessageC();
  virtual ~Small_MessageC();

  Small_MessageC(const Small_MessageC& from);

  inline Small_MessageC& operator=(const Small_MessageC& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Small_MessageC(Small_MessageC&& from) noexcept
    : Small_MessageC() {
    *this = ::std::move(from);
  }

  inline Small_MessageC& operator=(Small_MessageC&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Small_MessageC& default_instance();

  static inline const Small_MessageC* internal_default_instance() {
    return reinterpret_cast<const Small_MessageC*>(
               &_Small_MessageC_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Small_MessageC* other);
  friend void swap(Small_MessageC& a, Small_MessageC& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Small_MessageC* New() const PROTOBUF_FINAL { return New(NULL); }

  Small_MessageC* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Small_MessageC& from);
  void MergeFrom(const Small_MessageC& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Small_MessageC* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .pgv.Small.MessageE field4 = 4;
  bool has_field4() const;
  void clear_field4();
  static const int kField4FieldNumber = 4;
  const ::pgv::Small_MessageE& field4() const;
  ::pgv::Small_MessageE* mutable_field4();
  ::pgv::Small_MessageE* release_field4();
  void set_allocated_field4(::pgv::Small_MessageE* field4);

  // .pgv.Small.MessageF field5 = 5;
  bool has_field5() const;
  void clear_field5();
  static const int kField5FieldNumber = 5;
  const ::pgv::Small_MessageF& field5() const;
  ::pgv::Small_MessageF* mutable_field5();
  ::pgv::Small_MessageF* release_field5();
  void set_allocated_field5(::pgv::Small_MessageF* field5);

  // uint32 field1 = 1 [(.validate.rules) = {
  void clear_field1();
  static const int kField1FieldNumber = 1;
  ::google::protobuf::uint32 field1() const;
  void set_field1(::google::protobuf::uint32 value);

  // uint32 field2 = 2 [(.validate.rules) = {
  void clear_field2();
  static const int kField2FieldNumber = 2;
  ::google::protobuf::uint32 field2() const;
  void set_field2(::google::protobuf::uint32 value);

  // uint32 field3 = 3 [(.validate.rules) = {
  void clear_field3();
  static const int kField3FieldNumber = 3;
  ::google::protobuf::uint32 field3() const;
  void set_field3(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pgv.Small.MessageC)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::pgv::Small_MessageE* field4_;
  ::pgv::Small_MessageF* field5_;
  ::google::protobuf::uint32 field1_;
  ::google::protobuf::uint32 field2_;
  ::google::protobuf::uint32 field3_;
  mutable int _cached_size_;
  friend struct protobuf_small_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Small_MessageD : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pgv.Small.MessageD) */ {
 public:
  Small_MessageD();
  virtual ~Small_MessageD();

  Small_MessageD(const Small_MessageD& from);

  inline Small_MessageD& operator=(const Small_MessageD& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Small_MessageD(Small_MessageD&& from) noexcept
    : Small_MessageD() {
    *this = ::std::move(from);
  }

  inline Small_MessageD& operator=(Small_MessageD&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Small_MessageD& default_instance();

  static inline const Small_MessageD* internal_default_instance() {
    return reinterpret_cast<const Small_MessageD*>(
               &_Small_MessageD_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(Small_MessageD* other);
  friend void swap(Small_MessageD& a, Small_MessageD& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Small_MessageD* New() const PROTOBUF_FINAL { return New(NULL); }

  Small_MessageD* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Small_MessageD& from);
  void MergeFrom(const Small_MessageD& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Small_MessageD* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .pgv.Small.MessageE field4 = 4;
  bool has_field4() const;
  void clear_field4();
  static const int kField4FieldNumber = 4;
  const ::pgv::Small_MessageE& field4() const;
  ::pgv::Small_MessageE* mutable_field4();
  ::pgv::Small_MessageE* release_field4();
  void set_allocated_field4(::pgv::Small_MessageE* field4);

  // .pgv.Small.MessageF field5 = 5;
  bool has_field5() const;
  void clear_field5();
  static const int kField5FieldNumber = 5;
  const ::pgv::Small_MessageF& field5() const;
  ::pgv::Small_MessageF* mutable_field5();
  ::pgv::Small_MessageF* release_field5();
  void set_allocated_field5(::pgv::Small_MessageF* field5);

  // uint32 field1 = 1 [(.validate.rules) = {
  void clear_field1();
  static const int kField1FieldNumber = 1;
  ::google::protobuf::uint32 field1() const;
  void set_field1(::google::protobuf::uint32 value);

  // uint32 field2 = 2 [(.validate.rules) = {
  void clear_field2();
  static const int kField2FieldNumber = 2;
  ::google::protobuf::uint32 field2() const;
  void set_field2(::google::protobuf::uint32 value);

  // uint32 field3 = 3 [(.validate.rules) = {
  void clear_field3();
  static const int kField3FieldNumber = 3;
  ::google::protobuf::uint32 field3() const;
  void set_field3(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pgv.Small.MessageD)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::pgv::Small_MessageE* field4_;
  ::pgv::Small_MessageF* field5_;
  ::google::protobuf::uint32 field1_;
  ::google::protobuf::uint32 field2_;
  ::google::protobuf::uint32 field3_;
  mutable int _cached_size_;
  friend struct protobuf_small_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Small_MessageE : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pgv.Small.MessageE) */ {
 public:
  Small_MessageE();
  virtual ~Small_MessageE();

  Small_MessageE(const Small_MessageE& from);

  inline Small_MessageE& operator=(const Small_MessageE& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Small_MessageE(Small_MessageE&& from) noexcept
    : Small_MessageE() {
    *this = ::std::move(from);
  }

  inline Small_MessageE& operator=(Small_MessageE&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Small_MessageE& default_instance();

  static inline const Small_MessageE* internal_default_instance() {
    return reinterpret_cast<const Small_MessageE*>(
               &_Small_MessageE_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(Small_MessageE* other);
  friend void swap(Small_MessageE& a, Small_MessageE& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Small_MessageE* New() const PROTOBUF_FINAL { return New(NULL); }

  Small_MessageE* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Small_MessageE& from);
  void MergeFrom(const Small_MessageE& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Small_MessageE* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .pgv.Small.MessageF field5 = 5;
  bool has_field5() const;
  void clear_field5();
  static const int kField5FieldNumber = 5;
  const ::pgv::Small_MessageF& field5() const;
  ::pgv::Small_MessageF* mutable_field5();
  ::pgv::Small_MessageF* release_field5();
  void set_allocated_field5(::pgv::Small_MessageF* field5);

  // uint32 field1 = 1 [(.validate.rules) = {
  void clear_field1();
  static const int kField1FieldNumber = 1;
  ::google::protobuf::uint32 field1() const;
  void set_field1(::google::protobuf::uint32 value);

  // uint32 field2 = 2 [(.validate.rules) = {
  void clear_field2();
  static const int kField2FieldNumber = 2;
  ::google::protobuf::uint32 field2() const;
  void set_field2(::google::protobuf::uint32 value);

  // uint32 field3 = 3 [(.validate.rules) = {
  void clear_field3();
  static const int kField3FieldNumber = 3;
  ::google::protobuf::uint32 field3() const;
  void set_field3(::google::protobuf::uint32 value);

  // uint32 field4 = 4 [(.validate.rules) = {
  void clear_field4();
  static const int kField4FieldNumber = 4;
  ::google::protobuf::uint32 field4() const;
  void set_field4(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pgv.Small.MessageE)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::pgv::Small_MessageF* field5_;
  ::google::protobuf::uint32 field1_;
  ::google::protobuf::uint32 field2_;
  ::google::protobuf::uint32 field3_;
  ::google::protobuf::uint32 field4_;
  mutable int _cached_size_;
  friend struct protobuf_small_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Small_MessageF : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pgv.Small.MessageF) */ {
 public:
  Small_MessageF();
  virtual ~Small_MessageF();

  Small_MessageF(const Small_MessageF& from);

  inline Small_MessageF& operator=(const Small_MessageF& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Small_MessageF(Small_MessageF&& from) noexcept
    : Small_MessageF() {
    *this = ::std::move(from);
  }

  inline Small_MessageF& operator=(Small_MessageF&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Small_MessageF& default_instance();

  static inline const Small_MessageF* internal_default_instance() {
    return reinterpret_cast<const Small_MessageF*>(
               &_Small_MessageF_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(Small_MessageF* other);
  friend void swap(Small_MessageF& a, Small_MessageF& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Small_MessageF* New() const PROTOBUF_FINAL { return New(NULL); }

  Small_MessageF* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Small_MessageF& from);
  void MergeFrom(const Small_MessageF& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Small_MessageF* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 field1 = 1 [(.validate.rules) = {
  void clear_field1();
  static const int kField1FieldNumber = 1;
  ::google::protobuf::uint32 field1() const;
  void set_field1(::google::protobuf::uint32 value);

  // uint32 field2 = 2 [(.validate.rules) = {
  void clear_field2();
  static const int kField2FieldNumber = 2;
  ::google::protobuf::uint32 field2() const;
  void set_field2(::google::protobuf::uint32 value);

  // uint32 field3 = 3 [(.validate.rules) = {
  void clear_field3();
  static const int kField3FieldNumber = 3;
  ::google::protobuf::uint32 field3() const;
  void set_field3(::google::protobuf::uint32 value);

  // uint32 field4 = 4 [(.validate.rules) = {
  void clear_field4();
  static const int kField4FieldNumber = 4;
  ::google::protobuf::uint32 field4() const;
  void set_field4(::google::protobuf::uint32 value);

  // uint32 field5 = 5 [(.validate.rules) = {
  void clear_field5();
  static const int kField5FieldNumber = 5;
  ::google::protobuf::uint32 field5() const;
  void set_field5(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:pgv.Small.MessageF)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 field1_;
  ::google::protobuf::uint32 field2_;
  ::google::protobuf::uint32 field3_;
  ::google::protobuf::uint32 field4_;
  ::google::protobuf::uint32 field5_;
  mutable int _cached_size_;
  friend struct protobuf_small_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Small : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pgv.Small) */ {
 public:
  Small();
  virtual ~Small();

  Small(const Small& from);

  inline Small& operator=(const Small& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Small(Small&& from) noexcept
    : Small() {
    *this = ::std::move(from);
  }

  inline Small& operator=(Small&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Small& default_instance();

  static inline const Small* internal_default_instance() {
    return reinterpret_cast<const Small*>(
               &_Small_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(Small* other);
  friend void swap(Small& a, Small& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Small* New() const PROTOBUF_FINAL { return New(NULL); }

  Small* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Small& from);
  void MergeFrom(const Small& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Small* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Small_MessageB MessageB;
  typedef Small_MessageC MessageC;
  typedef Small_MessageD MessageD;
  typedef Small_MessageE MessageE;
  typedef Small_MessageF MessageF;

  // accessors -------------------------------------------------------

  // bytes field51 = 51 [(.validate.rules) = {
  void clear_field51();
  static const int kField51FieldNumber = 51;
  const ::std::string& field51() const;
  void set_field51(const ::std::string& value);
  #if LANG_CXX11
  void set_field51(::std::string&& value);
  #endif
  void set_field51(const char* value);
  void set_field51(const void* value, size_t size);
  ::std::string* mutable_field51();
  ::std::string* release_field51();
  void set_allocated_field51(::std::string* field51);

  // .pgv.Small.MessageB field41 = 41;
  bool has_field41() const;
  void clear_field41();
  static const int kField41FieldNumber = 41;
  const ::pgv::Small_MessageB& field41() const;
  ::pgv::Small_MessageB* mutable_field41();
  ::pgv::Small_MessageB* release_field41();
  void set_allocated_field41(::pgv::Small_MessageB* field41);

  // .pgv.Small.MessageC field42 = 42;
  bool has_field42() const;
  void clear_field42();
  static const int kField42FieldNumber = 42;
  const ::pgv::Small_MessageC& field42() const;
  ::pgv::Small_MessageC* mutable_field42();
  ::pgv::Small_MessageC* release_field42();
  void set_allocated_field42(::pgv::Small_MessageC* field42);

  // .pgv.Small.MessageD field43 = 43;
  bool has_field43() const;
  void clear_field43();
  static const int kField43FieldNumber = 43;
  const ::pgv::Small_MessageD& field43() const;
  ::pgv::Small_MessageD* mutable_field43();
  ::pgv::Small_MessageD* release_field43();
  void set_allocated_field43(::pgv::Small_MessageD* field43);

  // .pgv.Small.MessageE field44 = 44;
  bool has_field44() const;
  void clear_field44();
  static const int kField44FieldNumber = 44;
  const ::pgv::Small_MessageE& field44() const;
  ::pgv::Small_MessageE* mutable_field44();
  ::pgv::Small_MessageE* release_field44();
  void set_allocated_field44(::pgv::Small_MessageE* field44);

  // .pgv.Small.MessageF field45 = 45;
  bool has_field45() const;
  void clear_field45();
  static const int kField45FieldNumber = 45;
  const ::pgv::Small_MessageF& field45() const;
  ::pgv::Small_MessageF* mutable_field45();
  ::pgv::Small_MessageF* release_field45();
  void set_allocated_field45(::pgv::Small_MessageF* field45);

  // uint32 field1 = 1 [(.validate.rules) = {
  void clear_field1();
  static const int kField1FieldNumber = 1;
  ::google::protobuf::uint32 field1() const;
  void set_field1(::google::protobuf::uint32 value);

  // uint32 field2 = 2 [(.validate.rules) = {
  void clear_field2();
  static const int kField2FieldNumber = 2;
  ::google::protobuf::uint32 field2() const;
  void set_field2(::google::protobuf::uint32 value);

  // uint32 field3 = 3 [(.validate.rules) = {
  void clear_field3();
  static const int kField3FieldNumber = 3;
  ::google::protobuf::uint32 field3() const;
  void set_field3(::google::protobuf::uint32 value);

  // uint32 field4 = 4 [(.validate.rules) = {
  void clear_field4();
  static const int kField4FieldNumber = 4;
  ::google::protobuf::uint32 field4() const;
  void set_field4(::google::protobuf::uint32 value);

  // uint32 field5 = 5 [(.validate.rules) = {
  void clear_field5();
  static const int kField5FieldNumber = 5;
  ::google::protobuf::uint32 field5() const;
  void set_field5(::google::protobuf::uint32 value);

  // uint32 field6 = 6 [(.validate.rules) = {
  void clear_field6();
  static const int kField6FieldNumber = 6;
  ::google::protobuf::uint32 field6() const;
  void set_field6(::google::protobuf::uint32 value);

  // uint32 field7 = 7 [(.validate.rules) = {
  void clear_field7();
  static const int kField7FieldNumber = 7;
  ::google::protobuf::uint32 field7() const;
  void set_field7(::google::protobuf::uint32 value);

  // uint32 field8 = 8 [(.validate.rules) = {
  void clear_field8();
  static const int kField8FieldNumber = 8;
  ::google::protobuf::uint32 field8() const;
  void set_field8(::google::protobuf::uint32 value);

  // uint32 field9 = 9 [(.validate.rules) = {
  void clear_field9();
  static const int kField9FieldNumber = 9;
  ::google::protobuf::uint32 field9() const;
  void set_field9(::google::protobuf::uint32 value);

  // uint32 field10 = 10 [(.validate.rules) = {
  void clear_field10();
  static const int kField10FieldNumber = 10;
  ::google::protobuf::uint32 field10() const;
  void set_field10(::google::protobuf::uint32 value);

  // sint32 field101 = 101 [(.validate.rules) = {
  void clear_field101();
  static const int kField101FieldNumber = 101;
  ::google::protobuf::int32 field101() const;
  void set_field101(::google::protobuf::int32 value);

  // uint64 field31 = 31 [(.validate.rules) = {
  void clear_field31();
  static const int kField31FieldNumber = 31;
  ::google::protobuf::uint64 field31() const;
  void set_field31(::google::protobuf::uint64 value);

  // uint64 field32 = 32 [(.validate.rules) = {
  void clear_field32();
  static const int kField32FieldNumber = 32;
  ::google::protobuf::uint64 field32() const;
  void set_field32(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:pgv.Small)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr field51_;
  ::pgv::Small_MessageB* field41_;
  ::pgv::Small_MessageC* field42_;
  ::pgv::Small_MessageD* field43_;
  ::pgv::Small_MessageE* field44_;
  ::pgv::Small_MessageF* field45_;
  ::google::protobuf::uint32 field1_;
  ::google::protobuf::uint32 field2_;
  ::google::protobuf::uint32 field3_;
  ::google::protobuf::uint32 field4_;
  ::google::protobuf::uint32 field5_;
  ::google::protobuf::uint32 field6_;
  ::google::protobuf::uint32 field7_;
  ::google::protobuf::uint32 field8_;
  ::google::protobuf::uint32 field9_;
  ::google::protobuf::uint32 field10_;
  ::google::protobuf::int32 field101_;
  ::google::protobuf::uint64 field31_;
  ::google::protobuf::uint64 field32_;
  mutable int _cached_size_;
  friend struct protobuf_small_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Small_MessageB

// uint32 field1 = 1 [(.validate.rules) = {
inline void Small_MessageB::clear_field1() {
  field1_ = 0u;
}
inline ::google::protobuf::uint32 Small_MessageB::field1() const {
  // @@protoc_insertion_point(field_get:pgv.Small.MessageB.field1)
  return field1_;
}
inline void Small_MessageB::set_field1(::google::protobuf::uint32 value) {
  
  field1_ = value;
  // @@protoc_insertion_point(field_set:pgv.Small.MessageB.field1)
}

// uint32 field2 = 2 [(.validate.rules) = {
inline void Small_MessageB::clear_field2() {
  field2_ = 0u;
}
inline ::google::protobuf::uint32 Small_MessageB::field2() const {
  // @@protoc_insertion_point(field_get:pgv.Small.MessageB.field2)
  return field2_;
}
inline void Small_MessageB::set_field2(::google::protobuf::uint32 value) {
  
  field2_ = value;
  // @@protoc_insertion_point(field_set:pgv.Small.MessageB.field2)
}

// uint32 field3 = 3 [(.validate.rules) = {
inline void Small_MessageB::clear_field3() {
  field3_ = 0u;
}
inline ::google::protobuf::uint32 Small_MessageB::field3() const {
  // @@protoc_insertion_point(field_get:pgv.Small.MessageB.field3)
  return field3_;
}
inline void Small_MessageB::set_field3(::google::protobuf::uint32 value) {
  
  field3_ = value;
  // @@protoc_insertion_point(field_set:pgv.Small.MessageB.field3)
}

// .pgv.Small.MessageE field4 = 4;
inline bool Small_MessageB::has_field4() const {
  return this != internal_default_instance() && field4_ != NULL;
}
inline void Small_MessageB::clear_field4() {
  if (GetArenaNoVirtual() == NULL && field4_ != NULL) delete field4_;
  field4_ = NULL;
}
inline const ::pgv::Small_MessageE& Small_MessageB::field4() const {
  const ::pgv::Small_MessageE* p = field4_;
  // @@protoc_insertion_point(field_get:pgv.Small.MessageB.field4)
  return p != NULL ? *p : *reinterpret_cast<const ::pgv::Small_MessageE*>(
      &::pgv::_Small_MessageE_default_instance_);
}
inline ::pgv::Small_MessageE* Small_MessageB::mutable_field4() {
  
  if (field4_ == NULL) {
    field4_ = new ::pgv::Small_MessageE;
  }
  // @@protoc_insertion_point(field_mutable:pgv.Small.MessageB.field4)
  return field4_;
}
inline ::pgv::Small_MessageE* Small_MessageB::release_field4() {
  // @@protoc_insertion_point(field_release:pgv.Small.MessageB.field4)
  
  ::pgv::Small_MessageE* temp = field4_;
  field4_ = NULL;
  return temp;
}
inline void Small_MessageB::set_allocated_field4(::pgv::Small_MessageE* field4) {
  delete field4_;
  field4_ = field4;
  if (field4) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pgv.Small.MessageB.field4)
}

// .pgv.Small.MessageF field5 = 5;
inline bool Small_MessageB::has_field5() const {
  return this != internal_default_instance() && field5_ != NULL;
}
inline void Small_MessageB::clear_field5() {
  if (GetArenaNoVirtual() == NULL && field5_ != NULL) delete field5_;
  field5_ = NULL;
}
inline const ::pgv::Small_MessageF& Small_MessageB::field5() const {
  const ::pgv::Small_MessageF* p = field5_;
  // @@protoc_insertion_point(field_get:pgv.Small.MessageB.field5)
  return p != NULL ? *p : *reinterpret_cast<const ::pgv::Small_MessageF*>(
      &::pgv::_Small_MessageF_default_instance_);
}
inline ::pgv::Small_MessageF* Small_MessageB::mutable_field5() {
  
  if (field5_ == NULL) {
    field5_ = new ::pgv::Small_MessageF;
  }
  // @@protoc_insertion_point(field_mutable:pgv.Small.MessageB.field5)
  return field5_;
}
inline ::pgv::Small_MessageF* Small_MessageB::release_field5() {
  // @@protoc_insertion_point(field_release:pgv.Small.MessageB.field5)
  
  ::pgv::Small_MessageF* temp = field5_;
  field5_ = NULL;
  return temp;
}
inline void Small_MessageB::set_allocated_field5(::pgv::Small_MessageF* field5) {
  delete field5_;
  field5_ = field5;
  if (field5) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pgv.Small.MessageB.field5)
}

// -------------------------------------------------------------------

// Small_MessageC

// uint32 field1 = 1 [(.validate.rules) = {
inline void Small_MessageC::clear_field1() {
  field1_ = 0u;
}
inline ::google::protobuf::uint32 Small_MessageC::field1() const {
  // @@protoc_insertion_point(field_get:pgv.Small.MessageC.field1)
  return field1_;
}
inline void Small_MessageC::set_field1(::google::protobuf::uint32 value) {
  
  field1_ = value;
  // @@protoc_insertion_point(field_set:pgv.Small.MessageC.field1)
}

// uint32 field2 = 2 [(.validate.rules) = {
inline void Small_MessageC::clear_field2() {
  field2_ = 0u;
}
inline ::google::protobuf::uint32 Small_MessageC::field2() const {
  // @@protoc_insertion_point(field_get:pgv.Small.MessageC.field2)
  return field2_;
}
inline void Small_MessageC::set_field2(::google::protobuf::uint32 value) {
  
  field2_ = value;
  // @@protoc_insertion_point(field_set:pgv.Small.MessageC.field2)
}

// uint32 field3 = 3 [(.validate.rules) = {
inline void Small_MessageC::clear_field3() {
  field3_ = 0u;
}
inline ::google::protobuf::uint32 Small_MessageC::field3() const {
  // @@protoc_insertion_point(field_get:pgv.Small.MessageC.field3)
  return field3_;
}
inline void Small_MessageC::set_field3(::google::protobuf::uint32 value) {
  
  field3_ = value;
  // @@protoc_insertion_point(field_set:pgv.Small.MessageC.field3)
}

// .pgv.Small.MessageE field4 = 4;
inline bool Small_MessageC::has_field4() const {
  return this != internal_default_instance() && field4_ != NULL;
}
inline void Small_MessageC::clear_field4() {
  if (GetArenaNoVirtual() == NULL && field4_ != NULL) delete field4_;
  field4_ = NULL;
}
inline const ::pgv::Small_MessageE& Small_MessageC::field4() const {
  const ::pgv::Small_MessageE* p = field4_;
  // @@protoc_insertion_point(field_get:pgv.Small.MessageC.field4)
  return p != NULL ? *p : *reinterpret_cast<const ::pgv::Small_MessageE*>(
      &::pgv::_Small_MessageE_default_instance_);
}
inline ::pgv::Small_MessageE* Small_MessageC::mutable_field4() {
  
  if (field4_ == NULL) {
    field4_ = new ::pgv::Small_MessageE;
  }
  // @@protoc_insertion_point(field_mutable:pgv.Small.MessageC.field4)
  return field4_;
}
inline ::pgv::Small_MessageE* Small_MessageC::release_field4() {
  // @@protoc_insertion_point(field_release:pgv.Small.MessageC.field4)
  
  ::pgv::Small_MessageE* temp = field4_;
  field4_ = NULL;
  return temp;
}
inline void Small_MessageC::set_allocated_field4(::pgv::Small_MessageE* field4) {
  delete field4_;
  field4_ = field4;
  if (field4) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pgv.Small.MessageC.field4)
}

// .pgv.Small.MessageF field5 = 5;
inline bool Small_MessageC::has_field5() const {
  return this != internal_default_instance() && field5_ != NULL;
}
inline void Small_MessageC::clear_field5() {
  if (GetArenaNoVirtual() == NULL && field5_ != NULL) delete field5_;
  field5_ = NULL;
}
inline const ::pgv::Small_MessageF& Small_MessageC::field5() const {
  const ::pgv::Small_MessageF* p = field5_;
  // @@protoc_insertion_point(field_get:pgv.Small.MessageC.field5)
  return p != NULL ? *p : *reinterpret_cast<const ::pgv::Small_MessageF*>(
      &::pgv::_Small_MessageF_default_instance_);
}
inline ::pgv::Small_MessageF* Small_MessageC::mutable_field5() {
  
  if (field5_ == NULL) {
    field5_ = new ::pgv::Small_MessageF;
  }
  // @@protoc_insertion_point(field_mutable:pgv.Small.MessageC.field5)
  return field5_;
}
inline ::pgv::Small_MessageF* Small_MessageC::release_field5() {
  // @@protoc_insertion_point(field_release:pgv.Small.MessageC.field5)
  
  ::pgv::Small_MessageF* temp = field5_;
  field5_ = NULL;
  return temp;
}
inline void Small_MessageC::set_allocated_field5(::pgv::Small_MessageF* field5) {
  delete field5_;
  field5_ = field5;
  if (field5) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pgv.Small.MessageC.field5)
}

// -------------------------------------------------------------------

// Small_MessageD

// uint32 field1 = 1 [(.validate.rules) = {
inline void Small_MessageD::clear_field1() {
  field1_ = 0u;
}
inline ::google::protobuf::uint32 Small_MessageD::field1() const {
  // @@protoc_insertion_point(field_get:pgv.Small.MessageD.field1)
  return field1_;
}
inline void Small_MessageD::set_field1(::google::protobuf::uint32 value) {
  
  field1_ = value;
  // @@protoc_insertion_point(field_set:pgv.Small.MessageD.field1)
}

// uint32 field2 = 2 [(.validate.rules) = {
inline void Small_MessageD::clear_field2() {
  field2_ = 0u;
}
inline ::google::protobuf::uint32 Small_MessageD::field2() const {
  // @@protoc_insertion_point(field_get:pgv.Small.MessageD.field2)
  return field2_;
}
inline void Small_MessageD::set_field2(::google::protobuf::uint32 value) {
  
  field2_ = value;
  // @@protoc_insertion_point(field_set:pgv.Small.MessageD.field2)
}

// uint32 field3 = 3 [(.validate.rules) = {
inline void Small_MessageD::clear_field3() {
  field3_ = 0u;
}
inline ::google::protobuf::uint32 Small_MessageD::field3() const {
  // @@protoc_insertion_point(field_get:pgv.Small.MessageD.field3)
  return field3_;
}
inline void Small_MessageD::set_field3(::google::protobuf::uint32 value) {
  
  field3_ = value;
  // @@protoc_insertion_point(field_set:pgv.Small.MessageD.field3)
}

// .pgv.Small.MessageE field4 = 4;
inline bool Small_MessageD::has_field4() const {
  return this != internal_default_instance() && field4_ != NULL;
}
inline void Small_MessageD::clear_field4() {
  if (GetArenaNoVirtual() == NULL && field4_ != NULL) delete field4_;
  field4_ = NULL;
}
inline const ::pgv::Small_MessageE& Small_MessageD::field4() const {
  const ::pgv::Small_MessageE* p = field4_;
  // @@protoc_insertion_point(field_get:pgv.Small.MessageD.field4)
  return p != NULL ? *p : *reinterpret_cast<const ::pgv::Small_MessageE*>(
      &::pgv::_Small_MessageE_default_instance_);
}
inline ::pgv::Small_MessageE* Small_MessageD::mutable_field4() {
  
  if (field4_ == NULL) {
    field4_ = new ::pgv::Small_MessageE;
  }
  // @@protoc_insertion_point(field_mutable:pgv.Small.MessageD.field4)
  return field4_;
}
inline ::pgv::Small_MessageE* Small_MessageD::release_field4() {
  // @@protoc_insertion_point(field_release:pgv.Small.MessageD.field4)
  
  ::pgv::Small_MessageE* temp = field4_;
  field4_ = NULL;
  return temp;
}
inline void Small_MessageD::set_allocated_field4(::pgv::Small_MessageE* field4) {
  delete field4_;
  field4_ = field4;
  if (field4) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pgv.Small.MessageD.field4)
}

// .pgv.Small.MessageF field5 = 5;
inline bool Small_MessageD::has_field5() const {
  return this != internal_default_instance() && field5_ != NULL;
}
inline void Small_MessageD::clear_field5() {
  if (GetArenaNoVirtual() == NULL && field5_ != NULL) delete field5_;
  field5_ = NULL;
}
inline const ::pgv::Small_MessageF& Small_MessageD::field5() const {
  const ::pgv::Small_MessageF* p = field5_;
  // @@protoc_insertion_point(field_get:pgv.Small.MessageD.field5)
  return p != NULL ? *p : *reinterpret_cast<const ::pgv::Small_MessageF*>(
      &::pgv::_Small_MessageF_default_instance_);
}
inline ::pgv::Small_MessageF* Small_MessageD::mutable_field5() {
  
  if (field5_ == NULL) {
    field5_ = new ::pgv::Small_MessageF;
  }
  // @@protoc_insertion_point(field_mutable:pgv.Small.MessageD.field5)
  return field5_;
}
inline ::pgv::Small_MessageF* Small_MessageD::release_field5() {
  // @@protoc_insertion_point(field_release:pgv.Small.MessageD.field5)
  
  ::pgv::Small_MessageF* temp = field5_;
  field5_ = NULL;
  return temp;
}
inline void Small_MessageD::set_allocated_field5(::pgv::Small_MessageF* field5) {
  delete field5_;
  field5_ = field5;
  if (field5) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pgv.Small.MessageD.field5)
}

// -------------------------------------------------------------------

// Small_MessageE

// uint32 field1 = 1 [(.validate.rules) = {
inline void Small_MessageE::clear_field1() {
  field1_ = 0u;
}
inline ::google::protobuf::uint32 Small_MessageE::field1() const {
  // @@protoc_insertion_point(field_get:pgv.Small.MessageE.field1)
  return field1_;
}
inline void Small_MessageE::set_field1(::google::protobuf::uint32 value) {
  
  field1_ = value;
  // @@protoc_insertion_point(field_set:pgv.Small.MessageE.field1)
}

// uint32 field2 = 2 [(.validate.rules) = {
inline void Small_MessageE::clear_field2() {
  field2_ = 0u;
}
inline ::google::protobuf::uint32 Small_MessageE::field2() const {
  // @@protoc_insertion_point(field_get:pgv.Small.MessageE.field2)
  return field2_;
}
inline void Small_MessageE::set_field2(::google::protobuf::uint32 value) {
  
  field2_ = value;
  // @@protoc_insertion_point(field_set:pgv.Small.MessageE.field2)
}

// uint32 field3 = 3 [(.validate.rules) = {
inline void Small_MessageE::clear_field3() {
  field3_ = 0u;
}
inline ::google::protobuf::uint32 Small_MessageE::field3() const {
  // @@protoc_insertion_point(field_get:pgv.Small.MessageE.field3)
  return field3_;
}
inline void Small_MessageE::set_field3(::google::protobuf::uint32 value) {
  
  field3_ = value;
  // @@protoc_insertion_point(field_set:pgv.Small.MessageE.field3)
}

// uint32 field4 = 4 [(.validate.rules) = {
inline void Small_MessageE::clear_field4() {
  field4_ = 0u;
}
inline ::google::protobuf::uint32 Small_MessageE::field4() const {
  // @@protoc_insertion_point(field_get:pgv.Small.MessageE.field4)
  return field4_;
}
inline void Small_MessageE::set_field4(::google::protobuf::uint32 value) {
  
  field4_ = value;
  // @@protoc_insertion_point(field_set:pgv.Small.MessageE.field4)
}

// .pgv.Small.MessageF field5 = 5;
inline bool Small_MessageE::has_field5() const {
  return this != internal_default_instance() && field5_ != NULL;
}
inline void Small_MessageE::clear_field5() {
  if (GetArenaNoVirtual() == NULL && field5_ != NULL) delete field5_;
  field5_ = NULL;
}
inline const ::pgv::Small_MessageF& Small_MessageE::field5() const {
  const ::pgv::Small_MessageF* p = field5_;
  // @@protoc_insertion_point(field_get:pgv.Small.MessageE.field5)
  return p != NULL ? *p : *reinterpret_cast<const ::pgv::Small_MessageF*>(
      &::pgv::_Small_MessageF_default_instance_);
}
inline ::pgv::Small_MessageF* Small_MessageE::mutable_field5() {
  
  if (field5_ == NULL) {
    field5_ = new ::pgv::Small_MessageF;
  }
  // @@protoc_insertion_point(field_mutable:pgv.Small.MessageE.field5)
  return field5_;
}
inline ::pgv::Small_MessageF* Small_MessageE::release_field5() {
  // @@protoc_insertion_point(field_release:pgv.Small.MessageE.field5)
  
  ::pgv::Small_MessageF* temp = field5_;
  field5_ = NULL;
  return temp;
}
inline void Small_MessageE::set_allocated_field5(::pgv::Small_MessageF* field5) {
  delete field5_;
  field5_ = field5;
  if (field5) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pgv.Small.MessageE.field5)
}

// -------------------------------------------------------------------

// Small_MessageF

// uint32 field1 = 1 [(.validate.rules) = {
inline void Small_MessageF::clear_field1() {
  field1_ = 0u;
}
inline ::google::protobuf::uint32 Small_MessageF::field1() const {
  // @@protoc_insertion_point(field_get:pgv.Small.MessageF.field1)
  return field1_;
}
inline void Small_MessageF::set_field1(::google::protobuf::uint32 value) {
  
  field1_ = value;
  // @@protoc_insertion_point(field_set:pgv.Small.MessageF.field1)
}

// uint32 field2 = 2 [(.validate.rules) = {
inline void Small_MessageF::clear_field2() {
  field2_ = 0u;
}
inline ::google::protobuf::uint32 Small_MessageF::field2() const {
  // @@protoc_insertion_point(field_get:pgv.Small.MessageF.field2)
  return field2_;
}
inline void Small_MessageF::set_field2(::google::protobuf::uint32 value) {
  
  field2_ = value;
  // @@protoc_insertion_point(field_set:pgv.Small.MessageF.field2)
}

// uint32 field3 = 3 [(.validate.rules) = {
inline void Small_MessageF::clear_field3() {
  field3_ = 0u;
}
inline ::google::protobuf::uint32 Small_MessageF::field3() const {
  // @@protoc_insertion_point(field_get:pgv.Small.MessageF.field3)
  return field3_;
}
inline void Small_MessageF::set_field3(::google::protobuf::uint32 value) {
  
  field3_ = value;
  // @@protoc_insertion_point(field_set:pgv.Small.MessageF.field3)
}

// uint32 field4 = 4 [(.validate.rules) = {
inline void Small_MessageF::clear_field4() {
  field4_ = 0u;
}
inline ::google::protobuf::uint32 Small_MessageF::field4() const {
  // @@protoc_insertion_point(field_get:pgv.Small.MessageF.field4)
  return field4_;
}
inline void Small_MessageF::set_field4(::google::protobuf::uint32 value) {
  
  field4_ = value;
  // @@protoc_insertion_point(field_set:pgv.Small.MessageF.field4)
}

// uint32 field5 = 5 [(.validate.rules) = {
inline void Small_MessageF::clear_field5() {
  field5_ = 0u;
}
inline ::google::protobuf::uint32 Small_MessageF::field5() const {
  // @@protoc_insertion_point(field_get:pgv.Small.MessageF.field5)
  return field5_;
}
inline void Small_MessageF::set_field5(::google::protobuf::uint32 value) {
  
  field5_ = value;
  // @@protoc_insertion_point(field_set:pgv.Small.MessageF.field5)
}

// -------------------------------------------------------------------

// Small

// uint32 field1 = 1 [(.validate.rules) = {
inline void Small::clear_field1() {
  field1_ = 0u;
}
inline ::google::protobuf::uint32 Small::field1() const {
  // @@protoc_insertion_point(field_get:pgv.Small.field1)
  return field1_;
}
inline void Small::set_field1(::google::protobuf::uint32 value) {
  
  field1_ = value;
  // @@protoc_insertion_point(field_set:pgv.Small.field1)
}

// uint32 field2 = 2 [(.validate.rules) = {
inline void Small::clear_field2() {
  field2_ = 0u;
}
inline ::google::protobuf::uint32 Small::field2() const {
  // @@protoc_insertion_point(field_get:pgv.Small.field2)
  return field2_;
}
inline void Small::set_field2(::google::protobuf::uint32 value) {
  
  field2_ = value;
  // @@protoc_insertion_point(field_set:pgv.Small.field2)
}

// uint32 field3 = 3 [(.validate.rules) = {
inline void Small::clear_field3() {
  field3_ = 0u;
}
inline ::google::protobuf::uint32 Small::field3() const {
  // @@protoc_insertion_point(field_get:pgv.Small.field3)
  return field3_;
}
inline void Small::set_field3(::google::protobuf::uint32 value) {
  
  field3_ = value;
  // @@protoc_insertion_point(field_set:pgv.Small.field3)
}

// uint32 field4 = 4 [(.validate.rules) = {
inline void Small::clear_field4() {
  field4_ = 0u;
}
inline ::google::protobuf::uint32 Small::field4() const {
  // @@protoc_insertion_point(field_get:pgv.Small.field4)
  return field4_;
}
inline void Small::set_field4(::google::protobuf::uint32 value) {
  
  field4_ = value;
  // @@protoc_insertion_point(field_set:pgv.Small.field4)
}

// uint32 field5 = 5 [(.validate.rules) = {
inline void Small::clear_field5() {
  field5_ = 0u;
}
inline ::google::protobuf::uint32 Small::field5() const {
  // @@protoc_insertion_point(field_get:pgv.Small.field5)
  return field5_;
}
inline void Small::set_field5(::google::protobuf::uint32 value) {
  
  field5_ = value;
  // @@protoc_insertion_point(field_set:pgv.Small.field5)
}

// uint32 field6 = 6 [(.validate.rules) = {
inline void Small::clear_field6() {
  field6_ = 0u;
}
inline ::google::protobuf::uint32 Small::field6() const {
  // @@protoc_insertion_point(field_get:pgv.Small.field6)
  return field6_;
}
inline void Small::set_field6(::google::protobuf::uint32 value) {
  
  field6_ = value;
  // @@protoc_insertion_point(field_set:pgv.Small.field6)
}

// uint32 field7 = 7 [(.validate.rules) = {
inline void Small::clear_field7() {
  field7_ = 0u;
}
inline ::google::protobuf::uint32 Small::field7() const {
  // @@protoc_insertion_point(field_get:pgv.Small.field7)
  return field7_;
}
inline void Small::set_field7(::google::protobuf::uint32 value) {
  
  field7_ = value;
  // @@protoc_insertion_point(field_set:pgv.Small.field7)
}

// uint32 field8 = 8 [(.validate.rules) = {
inline void Small::clear_field8() {
  field8_ = 0u;
}
inline ::google::protobuf::uint32 Small::field8() const {
  // @@protoc_insertion_point(field_get:pgv.Small.field8)
  return field8_;
}
inline void Small::set_field8(::google::protobuf::uint32 value) {
  
  field8_ = value;
  // @@protoc_insertion_point(field_set:pgv.Small.field8)
}

// uint32 field9 = 9 [(.validate.rules) = {
inline void Small::clear_field9() {
  field9_ = 0u;
}
inline ::google::protobuf::uint32 Small::field9() const {
  // @@protoc_insertion_point(field_get:pgv.Small.field9)
  return field9_;
}
inline void Small::set_field9(::google::protobuf::uint32 value) {
  
  field9_ = value;
  // @@protoc_insertion_point(field_set:pgv.Small.field9)
}

// uint32 field10 = 10 [(.validate.rules) = {
inline void Small::clear_field10() {
  field10_ = 0u;
}
inline ::google::protobuf::uint32 Small::field10() const {
  // @@protoc_insertion_point(field_get:pgv.Small.field10)
  return field10_;
}
inline void Small::set_field10(::google::protobuf::uint32 value) {
  
  field10_ = value;
  // @@protoc_insertion_point(field_set:pgv.Small.field10)
}

// uint64 field31 = 31 [(.validate.rules) = {
inline void Small::clear_field31() {
  field31_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Small::field31() const {
  // @@protoc_insertion_point(field_get:pgv.Small.field31)
  return field31_;
}
inline void Small::set_field31(::google::protobuf::uint64 value) {
  
  field31_ = value;
  // @@protoc_insertion_point(field_set:pgv.Small.field31)
}

// uint64 field32 = 32 [(.validate.rules) = {
inline void Small::clear_field32() {
  field32_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Small::field32() const {
  // @@protoc_insertion_point(field_get:pgv.Small.field32)
  return field32_;
}
inline void Small::set_field32(::google::protobuf::uint64 value) {
  
  field32_ = value;
  // @@protoc_insertion_point(field_set:pgv.Small.field32)
}

// .pgv.Small.MessageB field41 = 41;
inline bool Small::has_field41() const {
  return this != internal_default_instance() && field41_ != NULL;
}
inline void Small::clear_field41() {
  if (GetArenaNoVirtual() == NULL && field41_ != NULL) delete field41_;
  field41_ = NULL;
}
inline const ::pgv::Small_MessageB& Small::field41() const {
  const ::pgv::Small_MessageB* p = field41_;
  // @@protoc_insertion_point(field_get:pgv.Small.field41)
  return p != NULL ? *p : *reinterpret_cast<const ::pgv::Small_MessageB*>(
      &::pgv::_Small_MessageB_default_instance_);
}
inline ::pgv::Small_MessageB* Small::mutable_field41() {
  
  if (field41_ == NULL) {
    field41_ = new ::pgv::Small_MessageB;
  }
  // @@protoc_insertion_point(field_mutable:pgv.Small.field41)
  return field41_;
}
inline ::pgv::Small_MessageB* Small::release_field41() {
  // @@protoc_insertion_point(field_release:pgv.Small.field41)
  
  ::pgv::Small_MessageB* temp = field41_;
  field41_ = NULL;
  return temp;
}
inline void Small::set_allocated_field41(::pgv::Small_MessageB* field41) {
  delete field41_;
  field41_ = field41;
  if (field41) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pgv.Small.field41)
}

// .pgv.Small.MessageC field42 = 42;
inline bool Small::has_field42() const {
  return this != internal_default_instance() && field42_ != NULL;
}
inline void Small::clear_field42() {
  if (GetArenaNoVirtual() == NULL && field42_ != NULL) delete field42_;
  field42_ = NULL;
}
inline const ::pgv::Small_MessageC& Small::field42() const {
  const ::pgv::Small_MessageC* p = field42_;
  // @@protoc_insertion_point(field_get:pgv.Small.field42)
  return p != NULL ? *p : *reinterpret_cast<const ::pgv::Small_MessageC*>(
      &::pgv::_Small_MessageC_default_instance_);
}
inline ::pgv::Small_MessageC* Small::mutable_field42() {
  
  if (field42_ == NULL) {
    field42_ = new ::pgv::Small_MessageC;
  }
  // @@protoc_insertion_point(field_mutable:pgv.Small.field42)
  return field42_;
}
inline ::pgv::Small_MessageC* Small::release_field42() {
  // @@protoc_insertion_point(field_release:pgv.Small.field42)
  
  ::pgv::Small_MessageC* temp = field42_;
  field42_ = NULL;
  return temp;
}
inline void Small::set_allocated_field42(::pgv::Small_MessageC* field42) {
  delete field42_;
  field42_ = field42;
  if (field42) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pgv.Small.field42)
}

// .pgv.Small.MessageD field43 = 43;
inline bool Small::has_field43() const {
  return this != internal_default_instance() && field43_ != NULL;
}
inline void Small::clear_field43() {
  if (GetArenaNoVirtual() == NULL && field43_ != NULL) delete field43_;
  field43_ = NULL;
}
inline const ::pgv::Small_MessageD& Small::field43() const {
  const ::pgv::Small_MessageD* p = field43_;
  // @@protoc_insertion_point(field_get:pgv.Small.field43)
  return p != NULL ? *p : *reinterpret_cast<const ::pgv::Small_MessageD*>(
      &::pgv::_Small_MessageD_default_instance_);
}
inline ::pgv::Small_MessageD* Small::mutable_field43() {
  
  if (field43_ == NULL) {
    field43_ = new ::pgv::Small_MessageD;
  }
  // @@protoc_insertion_point(field_mutable:pgv.Small.field43)
  return field43_;
}
inline ::pgv::Small_MessageD* Small::release_field43() {
  // @@protoc_insertion_point(field_release:pgv.Small.field43)
  
  ::pgv::Small_MessageD* temp = field43_;
  field43_ = NULL;
  return temp;
}
inline void Small::set_allocated_field43(::pgv::Small_MessageD* field43) {
  delete field43_;
  field43_ = field43;
  if (field43) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pgv.Small.field43)
}

// .pgv.Small.MessageE field44 = 44;
inline bool Small::has_field44() const {
  return this != internal_default_instance() && field44_ != NULL;
}
inline void Small::clear_field44() {
  if (GetArenaNoVirtual() == NULL && field44_ != NULL) delete field44_;
  field44_ = NULL;
}
inline const ::pgv::Small_MessageE& Small::field44() const {
  const ::pgv::Small_MessageE* p = field44_;
  // @@protoc_insertion_point(field_get:pgv.Small.field44)
  return p != NULL ? *p : *reinterpret_cast<const ::pgv::Small_MessageE*>(
      &::pgv::_Small_MessageE_default_instance_);
}
inline ::pgv::Small_MessageE* Small::mutable_field44() {
  
  if (field44_ == NULL) {
    field44_ = new ::pgv::Small_MessageE;
  }
  // @@protoc_insertion_point(field_mutable:pgv.Small.field44)
  return field44_;
}
inline ::pgv::Small_MessageE* Small::release_field44() {
  // @@protoc_insertion_point(field_release:pgv.Small.field44)
  
  ::pgv::Small_MessageE* temp = field44_;
  field44_ = NULL;
  return temp;
}
inline void Small::set_allocated_field44(::pgv::Small_MessageE* field44) {
  delete field44_;
  field44_ = field44;
  if (field44) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pgv.Small.field44)
}

// .pgv.Small.MessageF field45 = 45;
inline bool Small::has_field45() const {
  return this != internal_default_instance() && field45_ != NULL;
}
inline void Small::clear_field45() {
  if (GetArenaNoVirtual() == NULL && field45_ != NULL) delete field45_;
  field45_ = NULL;
}
inline const ::pgv::Small_MessageF& Small::field45() const {
  const ::pgv::Small_MessageF* p = field45_;
  // @@protoc_insertion_point(field_get:pgv.Small.field45)
  return p != NULL ? *p : *reinterpret_cast<const ::pgv::Small_MessageF*>(
      &::pgv::_Small_MessageF_default_instance_);
}
inline ::pgv::Small_MessageF* Small::mutable_field45() {
  
  if (field45_ == NULL) {
    field45_ = new ::pgv::Small_MessageF;
  }
  // @@protoc_insertion_point(field_mutable:pgv.Small.field45)
  return field45_;
}
inline ::pgv::Small_MessageF* Small::release_field45() {
  // @@protoc_insertion_point(field_release:pgv.Small.field45)
  
  ::pgv::Small_MessageF* temp = field45_;
  field45_ = NULL;
  return temp;
}
inline void Small::set_allocated_field45(::pgv::Small_MessageF* field45) {
  delete field45_;
  field45_ = field45;
  if (field45) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pgv.Small.field45)
}

// bytes field51 = 51 [(.validate.rules) = {
inline void Small::clear_field51() {
  field51_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Small::field51() const {
  // @@protoc_insertion_point(field_get:pgv.Small.field51)
  return field51_.GetNoArena();
}
inline void Small::set_field51(const ::std::string& value) {
  
  field51_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pgv.Small.field51)
}
#if LANG_CXX11
inline void Small::set_field51(::std::string&& value) {
  
  field51_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pgv.Small.field51)
}
#endif
inline void Small::set_field51(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  field51_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pgv.Small.field51)
}
inline void Small::set_field51(const void* value, size_t size) {
  
  field51_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pgv.Small.field51)
}
inline ::std::string* Small::mutable_field51() {
  
  // @@protoc_insertion_point(field_mutable:pgv.Small.field51)
  return field51_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Small::release_field51() {
  // @@protoc_insertion_point(field_release:pgv.Small.field51)
  
  return field51_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Small::set_allocated_field51(::std::string* field51) {
  if (field51 != NULL) {
    
  } else {
    
  }
  field51_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field51);
  // @@protoc_insertion_point(field_set_allocated:pgv.Small.field51)
}

// sint32 field101 = 101 [(.validate.rules) = {
inline void Small::clear_field101() {
  field101_ = 0;
}
inline ::google::protobuf::int32 Small::field101() const {
  // @@protoc_insertion_point(field_get:pgv.Small.field101)
  return field101_;
}
inline void Small::set_field101(::google::protobuf::int32 value) {
  
  field101_ = value;
  // @@protoc_insertion_point(field_set:pgv.Small.field101)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace pgv

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_small_2eproto__INCLUDED
