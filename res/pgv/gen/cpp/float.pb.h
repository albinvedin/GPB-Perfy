// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: float.proto

#ifndef PROTOBUF_float_2eproto__INCLUDED
#define PROTOBUF_float_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "validate/validate.pb.h"
// @@protoc_insertion_point(includes)
namespace pgv {
class FloatRangeConst;
class FloatRangeConstDefaultTypeInternal;
extern FloatRangeConstDefaultTypeInternal _FloatRangeConst_default_instance_;
class FloatRangeGreaterThan;
class FloatRangeGreaterThanDefaultTypeInternal;
extern FloatRangeGreaterThanDefaultTypeInternal _FloatRangeGreaterThan_default_instance_;
class FloatRangeLessThan;
class FloatRangeLessThanDefaultTypeInternal;
extern FloatRangeLessThanDefaultTypeInternal _FloatRangeLessThan_default_instance_;
}  // namespace pgv

namespace pgv {

namespace protobuf_float_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_float_2eproto

// ===================================================================

class FloatRangeGreaterThan : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pgv.FloatRangeGreaterThan) */ {
 public:
  FloatRangeGreaterThan();
  virtual ~FloatRangeGreaterThan();

  FloatRangeGreaterThan(const FloatRangeGreaterThan& from);

  inline FloatRangeGreaterThan& operator=(const FloatRangeGreaterThan& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FloatRangeGreaterThan(FloatRangeGreaterThan&& from) noexcept
    : FloatRangeGreaterThan() {
    *this = ::std::move(from);
  }

  inline FloatRangeGreaterThan& operator=(FloatRangeGreaterThan&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FloatRangeGreaterThan& default_instance();

  static inline const FloatRangeGreaterThan* internal_default_instance() {
    return reinterpret_cast<const FloatRangeGreaterThan*>(
               &_FloatRangeGreaterThan_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(FloatRangeGreaterThan* other);
  friend void swap(FloatRangeGreaterThan& a, FloatRangeGreaterThan& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FloatRangeGreaterThan* New() const PROTOBUF_FINAL { return New(NULL); }

  FloatRangeGreaterThan* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FloatRangeGreaterThan& from);
  void MergeFrom(const FloatRangeGreaterThan& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FloatRangeGreaterThan* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float content = 1 [(.validate.rules) = {
  int content_size() const;
  void clear_content();
  static const int kContentFieldNumber = 1;
  float content(int index) const;
  void set_content(int index, float value);
  void add_content(float value);
  const ::google::protobuf::RepeatedField< float >&
      content() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_content();

  // @@protoc_insertion_point(class_scope:pgv.FloatRangeGreaterThan)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< float > content_;
  mutable int _content_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_float_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FloatRangeLessThan : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pgv.FloatRangeLessThan) */ {
 public:
  FloatRangeLessThan();
  virtual ~FloatRangeLessThan();

  FloatRangeLessThan(const FloatRangeLessThan& from);

  inline FloatRangeLessThan& operator=(const FloatRangeLessThan& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FloatRangeLessThan(FloatRangeLessThan&& from) noexcept
    : FloatRangeLessThan() {
    *this = ::std::move(from);
  }

  inline FloatRangeLessThan& operator=(FloatRangeLessThan&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FloatRangeLessThan& default_instance();

  static inline const FloatRangeLessThan* internal_default_instance() {
    return reinterpret_cast<const FloatRangeLessThan*>(
               &_FloatRangeLessThan_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(FloatRangeLessThan* other);
  friend void swap(FloatRangeLessThan& a, FloatRangeLessThan& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FloatRangeLessThan* New() const PROTOBUF_FINAL { return New(NULL); }

  FloatRangeLessThan* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FloatRangeLessThan& from);
  void MergeFrom(const FloatRangeLessThan& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FloatRangeLessThan* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float content = 1 [(.validate.rules) = {
  int content_size() const;
  void clear_content();
  static const int kContentFieldNumber = 1;
  float content(int index) const;
  void set_content(int index, float value);
  void add_content(float value);
  const ::google::protobuf::RepeatedField< float >&
      content() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_content();

  // @@protoc_insertion_point(class_scope:pgv.FloatRangeLessThan)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< float > content_;
  mutable int _content_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_float_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FloatRangeConst : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pgv.FloatRangeConst) */ {
 public:
  FloatRangeConst();
  virtual ~FloatRangeConst();

  FloatRangeConst(const FloatRangeConst& from);

  inline FloatRangeConst& operator=(const FloatRangeConst& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FloatRangeConst(FloatRangeConst&& from) noexcept
    : FloatRangeConst() {
    *this = ::std::move(from);
  }

  inline FloatRangeConst& operator=(FloatRangeConst&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FloatRangeConst& default_instance();

  static inline const FloatRangeConst* internal_default_instance() {
    return reinterpret_cast<const FloatRangeConst*>(
               &_FloatRangeConst_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(FloatRangeConst* other);
  friend void swap(FloatRangeConst& a, FloatRangeConst& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FloatRangeConst* New() const PROTOBUF_FINAL { return New(NULL); }

  FloatRangeConst* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FloatRangeConst& from);
  void MergeFrom(const FloatRangeConst& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FloatRangeConst* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float content = 1 [(.validate.rules) = {
  int content_size() const;
  void clear_content();
  static const int kContentFieldNumber = 1;
  float content(int index) const;
  void set_content(int index, float value);
  void add_content(float value);
  const ::google::protobuf::RepeatedField< float >&
      content() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_content();

  // @@protoc_insertion_point(class_scope:pgv.FloatRangeConst)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< float > content_;
  mutable int _content_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_float_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// FloatRangeGreaterThan

// repeated float content = 1 [(.validate.rules) = {
inline int FloatRangeGreaterThan::content_size() const {
  return content_.size();
}
inline void FloatRangeGreaterThan::clear_content() {
  content_.Clear();
}
inline float FloatRangeGreaterThan::content(int index) const {
  // @@protoc_insertion_point(field_get:pgv.FloatRangeGreaterThan.content)
  return content_.Get(index);
}
inline void FloatRangeGreaterThan::set_content(int index, float value) {
  content_.Set(index, value);
  // @@protoc_insertion_point(field_set:pgv.FloatRangeGreaterThan.content)
}
inline void FloatRangeGreaterThan::add_content(float value) {
  content_.Add(value);
  // @@protoc_insertion_point(field_add:pgv.FloatRangeGreaterThan.content)
}
inline const ::google::protobuf::RepeatedField< float >&
FloatRangeGreaterThan::content() const {
  // @@protoc_insertion_point(field_list:pgv.FloatRangeGreaterThan.content)
  return content_;
}
inline ::google::protobuf::RepeatedField< float >*
FloatRangeGreaterThan::mutable_content() {
  // @@protoc_insertion_point(field_mutable_list:pgv.FloatRangeGreaterThan.content)
  return &content_;
}

// -------------------------------------------------------------------

// FloatRangeLessThan

// repeated float content = 1 [(.validate.rules) = {
inline int FloatRangeLessThan::content_size() const {
  return content_.size();
}
inline void FloatRangeLessThan::clear_content() {
  content_.Clear();
}
inline float FloatRangeLessThan::content(int index) const {
  // @@protoc_insertion_point(field_get:pgv.FloatRangeLessThan.content)
  return content_.Get(index);
}
inline void FloatRangeLessThan::set_content(int index, float value) {
  content_.Set(index, value);
  // @@protoc_insertion_point(field_set:pgv.FloatRangeLessThan.content)
}
inline void FloatRangeLessThan::add_content(float value) {
  content_.Add(value);
  // @@protoc_insertion_point(field_add:pgv.FloatRangeLessThan.content)
}
inline const ::google::protobuf::RepeatedField< float >&
FloatRangeLessThan::content() const {
  // @@protoc_insertion_point(field_list:pgv.FloatRangeLessThan.content)
  return content_;
}
inline ::google::protobuf::RepeatedField< float >*
FloatRangeLessThan::mutable_content() {
  // @@protoc_insertion_point(field_mutable_list:pgv.FloatRangeLessThan.content)
  return &content_;
}

// -------------------------------------------------------------------

// FloatRangeConst

// repeated float content = 1 [(.validate.rules) = {
inline int FloatRangeConst::content_size() const {
  return content_.size();
}
inline void FloatRangeConst::clear_content() {
  content_.Clear();
}
inline float FloatRangeConst::content(int index) const {
  // @@protoc_insertion_point(field_get:pgv.FloatRangeConst.content)
  return content_.Get(index);
}
inline void FloatRangeConst::set_content(int index, float value) {
  content_.Set(index, value);
  // @@protoc_insertion_point(field_set:pgv.FloatRangeConst.content)
}
inline void FloatRangeConst::add_content(float value) {
  content_.Add(value);
  // @@protoc_insertion_point(field_add:pgv.FloatRangeConst.content)
}
inline const ::google::protobuf::RepeatedField< float >&
FloatRangeConst::content() const {
  // @@protoc_insertion_point(field_list:pgv.FloatRangeConst.content)
  return content_;
}
inline ::google::protobuf::RepeatedField< float >*
FloatRangeConst::mutable_content() {
  // @@protoc_insertion_point(field_mutable_list:pgv.FloatRangeConst.content)
  return &content_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace pgv

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_float_2eproto__INCLUDED
