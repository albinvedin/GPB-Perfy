// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: string.proto

#include "string.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

namespace pgv {
class StringRangePrefixDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StringRangePrefix> _instance;
} _StringRangePrefix_default_instance_;
class StringRangeMaxLenDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StringRangeMaxLen> _instance;
} _StringRangeMaxLen_default_instance_;
class StringRangeContainsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StringRangeContains> _instance;
} _StringRangeContains_default_instance_;
}  // namespace pgv
static void InitDefaultsStringRangePrefix_string_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pgv::_StringRangePrefix_default_instance_;
    new (ptr) ::pgv::StringRangePrefix();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pgv::StringRangePrefix::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StringRangePrefix_string_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStringRangePrefix_string_2eproto}, {}};

static void InitDefaultsStringRangeMaxLen_string_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pgv::_StringRangeMaxLen_default_instance_;
    new (ptr) ::pgv::StringRangeMaxLen();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pgv::StringRangeMaxLen::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StringRangeMaxLen_string_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStringRangeMaxLen_string_2eproto}, {}};

static void InitDefaultsStringRangeContains_string_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pgv::_StringRangeContains_default_instance_;
    new (ptr) ::pgv::StringRangeContains();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pgv::StringRangeContains::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StringRangeContains_string_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStringRangeContains_string_2eproto}, {}};

void InitDefaults_string_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_StringRangePrefix_string_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StringRangeMaxLen_string_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StringRangeContains_string_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_string_2eproto[3];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_string_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_string_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_string_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pgv::StringRangePrefix, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pgv::StringRangePrefix, content_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pgv::StringRangeMaxLen, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pgv::StringRangeMaxLen, content_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pgv::StringRangeContains, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pgv::StringRangeContains, content_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::pgv::StringRangePrefix)},
  { 6, -1, sizeof(::pgv::StringRangeMaxLen)},
  { 12, -1, sizeof(::pgv::StringRangeContains)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::pgv::_StringRangePrefix_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pgv::_StringRangeMaxLen_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pgv::_StringRangeContains_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_string_2eproto = {
  {}, AddDescriptors_string_2eproto, "string.proto", schemas,
  file_default_instances, TableStruct_string_2eproto::offsets,
  file_level_metadata_string_2eproto, 3, file_level_enum_descriptors_string_2eproto, file_level_service_descriptors_string_2eproto,
};

const char descriptor_table_protodef_string_2eproto[] =
  "\n\014string.proto\022\003pgv\032\027validate/validate.p"
  "roto\"7\n\021StringRangePrefix\022\"\n\007content\030\001 \003"
  "(\tB\021\272\351\300\003\014\222\001\t\"\007r\005:\003Foo\"4\n\021StringRangeMaxL"
  "en\022\037\n\007content\030\001 \003(\tB\016\272\351\300\003\t\222\001\006\"\004r\002\030\005\"9\n\023S"
  "tringRangeContains\022\"\n\007content\030\001 \003(\tB\021\272\351\300"
  "\003\014\222\001\t\"\007r\005J\003Foob\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_string_2eproto = {
  false, InitDefaults_string_2eproto, 
  descriptor_table_protodef_string_2eproto,
  "string.proto", &assign_descriptors_table_string_2eproto, 222,
};

void AddDescriptors_string_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
    ::AddDescriptors_validate_2fvalidate_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_string_2eproto, deps, 1);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_string_2eproto = []() { AddDescriptors_string_2eproto(); return true; }();
namespace pgv {

// ===================================================================

void StringRangePrefix::InitAsDefaultInstance() {
}
class StringRangePrefix::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StringRangePrefix::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StringRangePrefix::StringRangePrefix()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pgv.StringRangePrefix)
}
StringRangePrefix::StringRangePrefix(const StringRangePrefix& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      content_(from.content_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pgv.StringRangePrefix)
}

void StringRangePrefix::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_StringRangePrefix_string_2eproto.base);
}

StringRangePrefix::~StringRangePrefix() {
  // @@protoc_insertion_point(destructor:pgv.StringRangePrefix)
  SharedDtor();
}

void StringRangePrefix::SharedDtor() {
}

void StringRangePrefix::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StringRangePrefix& StringRangePrefix::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StringRangePrefix_string_2eproto.base);
  return *internal_default_instance();
}


void StringRangePrefix::Clear() {
// @@protoc_insertion_point(message_clear_start:pgv.StringRangePrefix)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StringRangePrefix::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StringRangePrefix*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated string content = 1 [(.validate.rules) = {
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("pgv.StringRangePrefix.content");
          object = msg->add_content();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StringRangePrefix::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pgv.StringRangePrefix)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string content = 1 [(.validate.rules) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content(this->content_size() - 1).data(),
            static_cast<int>(this->content(this->content_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pgv.StringRangePrefix.content"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pgv.StringRangePrefix)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pgv.StringRangePrefix)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StringRangePrefix::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pgv.StringRangePrefix)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string content = 1 [(.validate.rules) = {
  for (int i = 0, n = this->content_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content(i).data(), static_cast<int>(this->content(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pgv.StringRangePrefix.content");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->content(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pgv.StringRangePrefix)
}

::google::protobuf::uint8* StringRangePrefix::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pgv.StringRangePrefix)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string content = 1 [(.validate.rules) = {
  for (int i = 0, n = this->content_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content(i).data(), static_cast<int>(this->content(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pgv.StringRangePrefix.content");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->content(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pgv.StringRangePrefix)
  return target;
}

size_t StringRangePrefix::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pgv.StringRangePrefix)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string content = 1 [(.validate.rules) = {
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->content_size());
  for (int i = 0, n = this->content_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->content(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StringRangePrefix::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pgv.StringRangePrefix)
  GOOGLE_DCHECK_NE(&from, this);
  const StringRangePrefix* source =
      ::google::protobuf::DynamicCastToGenerated<StringRangePrefix>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pgv.StringRangePrefix)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pgv.StringRangePrefix)
    MergeFrom(*source);
  }
}

void StringRangePrefix::MergeFrom(const StringRangePrefix& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pgv.StringRangePrefix)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  content_.MergeFrom(from.content_);
}

void StringRangePrefix::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pgv.StringRangePrefix)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StringRangePrefix::CopyFrom(const StringRangePrefix& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pgv.StringRangePrefix)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringRangePrefix::IsInitialized() const {
  return true;
}

void StringRangePrefix::Swap(StringRangePrefix* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StringRangePrefix::InternalSwap(StringRangePrefix* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  content_.InternalSwap(CastToBase(&other->content_));
}

::google::protobuf::Metadata StringRangePrefix::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_string_2eproto);
  return ::file_level_metadata_string_2eproto[kIndexInFileMessages];
}


// ===================================================================

void StringRangeMaxLen::InitAsDefaultInstance() {
}
class StringRangeMaxLen::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StringRangeMaxLen::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StringRangeMaxLen::StringRangeMaxLen()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pgv.StringRangeMaxLen)
}
StringRangeMaxLen::StringRangeMaxLen(const StringRangeMaxLen& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      content_(from.content_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pgv.StringRangeMaxLen)
}

void StringRangeMaxLen::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_StringRangeMaxLen_string_2eproto.base);
}

StringRangeMaxLen::~StringRangeMaxLen() {
  // @@protoc_insertion_point(destructor:pgv.StringRangeMaxLen)
  SharedDtor();
}

void StringRangeMaxLen::SharedDtor() {
}

void StringRangeMaxLen::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StringRangeMaxLen& StringRangeMaxLen::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StringRangeMaxLen_string_2eproto.base);
  return *internal_default_instance();
}


void StringRangeMaxLen::Clear() {
// @@protoc_insertion_point(message_clear_start:pgv.StringRangeMaxLen)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StringRangeMaxLen::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StringRangeMaxLen*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated string content = 1 [(.validate.rules) = {
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("pgv.StringRangeMaxLen.content");
          object = msg->add_content();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StringRangeMaxLen::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pgv.StringRangeMaxLen)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string content = 1 [(.validate.rules) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content(this->content_size() - 1).data(),
            static_cast<int>(this->content(this->content_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pgv.StringRangeMaxLen.content"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pgv.StringRangeMaxLen)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pgv.StringRangeMaxLen)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StringRangeMaxLen::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pgv.StringRangeMaxLen)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string content = 1 [(.validate.rules) = {
  for (int i = 0, n = this->content_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content(i).data(), static_cast<int>(this->content(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pgv.StringRangeMaxLen.content");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->content(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pgv.StringRangeMaxLen)
}

::google::protobuf::uint8* StringRangeMaxLen::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pgv.StringRangeMaxLen)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string content = 1 [(.validate.rules) = {
  for (int i = 0, n = this->content_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content(i).data(), static_cast<int>(this->content(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pgv.StringRangeMaxLen.content");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->content(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pgv.StringRangeMaxLen)
  return target;
}

size_t StringRangeMaxLen::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pgv.StringRangeMaxLen)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string content = 1 [(.validate.rules) = {
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->content_size());
  for (int i = 0, n = this->content_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->content(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StringRangeMaxLen::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pgv.StringRangeMaxLen)
  GOOGLE_DCHECK_NE(&from, this);
  const StringRangeMaxLen* source =
      ::google::protobuf::DynamicCastToGenerated<StringRangeMaxLen>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pgv.StringRangeMaxLen)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pgv.StringRangeMaxLen)
    MergeFrom(*source);
  }
}

void StringRangeMaxLen::MergeFrom(const StringRangeMaxLen& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pgv.StringRangeMaxLen)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  content_.MergeFrom(from.content_);
}

void StringRangeMaxLen::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pgv.StringRangeMaxLen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StringRangeMaxLen::CopyFrom(const StringRangeMaxLen& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pgv.StringRangeMaxLen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringRangeMaxLen::IsInitialized() const {
  return true;
}

void StringRangeMaxLen::Swap(StringRangeMaxLen* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StringRangeMaxLen::InternalSwap(StringRangeMaxLen* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  content_.InternalSwap(CastToBase(&other->content_));
}

::google::protobuf::Metadata StringRangeMaxLen::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_string_2eproto);
  return ::file_level_metadata_string_2eproto[kIndexInFileMessages];
}


// ===================================================================

void StringRangeContains::InitAsDefaultInstance() {
}
class StringRangeContains::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StringRangeContains::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StringRangeContains::StringRangeContains()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pgv.StringRangeContains)
}
StringRangeContains::StringRangeContains(const StringRangeContains& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      content_(from.content_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pgv.StringRangeContains)
}

void StringRangeContains::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_StringRangeContains_string_2eproto.base);
}

StringRangeContains::~StringRangeContains() {
  // @@protoc_insertion_point(destructor:pgv.StringRangeContains)
  SharedDtor();
}

void StringRangeContains::SharedDtor() {
}

void StringRangeContains::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StringRangeContains& StringRangeContains::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_StringRangeContains_string_2eproto.base);
  return *internal_default_instance();
}


void StringRangeContains::Clear() {
// @@protoc_insertion_point(message_clear_start:pgv.StringRangeContains)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* StringRangeContains::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<StringRangeContains*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // repeated string content = 1 [(.validate.rules) = {
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 10) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          ctx->extra_parse_data().SetFieldName("pgv.StringRangeContains.content");
          object = msg->add_content();
          if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
            parser_till_end = ::google::protobuf::internal::GreedyStringParserUTF8;
            goto string_till_end;
          }
          GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheckUTF8(ptr, size, ctx));
          ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
          ptr += size;
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 10 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool StringRangeContains::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pgv.StringRangeContains)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string content = 1 [(.validate.rules) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (10 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content(this->content_size() - 1).data(),
            static_cast<int>(this->content(this->content_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pgv.StringRangeContains.content"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pgv.StringRangeContains)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pgv.StringRangeContains)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void StringRangeContains::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pgv.StringRangeContains)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string content = 1 [(.validate.rules) = {
  for (int i = 0, n = this->content_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content(i).data(), static_cast<int>(this->content(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pgv.StringRangeContains.content");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->content(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pgv.StringRangeContains)
}

::google::protobuf::uint8* StringRangeContains::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pgv.StringRangeContains)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string content = 1 [(.validate.rules) = {
  for (int i = 0, n = this->content_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content(i).data(), static_cast<int>(this->content(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pgv.StringRangeContains.content");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->content(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pgv.StringRangeContains)
  return target;
}

size_t StringRangeContains::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pgv.StringRangeContains)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string content = 1 [(.validate.rules) = {
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->content_size());
  for (int i = 0, n = this->content_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->content(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StringRangeContains::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pgv.StringRangeContains)
  GOOGLE_DCHECK_NE(&from, this);
  const StringRangeContains* source =
      ::google::protobuf::DynamicCastToGenerated<StringRangeContains>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pgv.StringRangeContains)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pgv.StringRangeContains)
    MergeFrom(*source);
  }
}

void StringRangeContains::MergeFrom(const StringRangeContains& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pgv.StringRangeContains)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  content_.MergeFrom(from.content_);
}

void StringRangeContains::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pgv.StringRangeContains)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StringRangeContains::CopyFrom(const StringRangeContains& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pgv.StringRangeContains)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringRangeContains::IsInitialized() const {
  return true;
}

void StringRangeContains::Swap(StringRangeContains* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StringRangeContains::InternalSwap(StringRangeContains* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  content_.InternalSwap(CastToBase(&other->content_));
}

::google::protobuf::Metadata StringRangeContains::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_string_2eproto);
  return ::file_level_metadata_string_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace pgv
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::pgv::StringRangePrefix* Arena::CreateMaybeMessage< ::pgv::StringRangePrefix >(Arena* arena) {
  return Arena::CreateInternal< ::pgv::StringRangePrefix >(arena);
}
template<> PROTOBUF_NOINLINE ::pgv::StringRangeMaxLen* Arena::CreateMaybeMessage< ::pgv::StringRangeMaxLen >(Arena* arena) {
  return Arena::CreateInternal< ::pgv::StringRangeMaxLen >(arena);
}
template<> PROTOBUF_NOINLINE ::pgv::StringRangeContains* Arena::CreateMaybeMessage< ::pgv::StringRangeContains >(Arena* arena) {
  return Arena::CreateInternal< ::pgv::StringRangeContains >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
