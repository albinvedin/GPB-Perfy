// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: string.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "string.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pgv {
class StringRangePrefixDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<StringRangePrefix>
     _instance;
} _StringRangePrefix_default_instance_;
class StringRangeSuffixDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<StringRangeSuffix>
     _instance;
} _StringRangeSuffix_default_instance_;
class StringRangeContainsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<StringRangeContains>
     _instance;
} _StringRangeContains_default_instance_;

namespace protobuf_string_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StringRangePrefix, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StringRangePrefix, content_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StringRangeSuffix, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StringRangeSuffix, content_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StringRangeContains, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StringRangeContains, content_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(StringRangePrefix)},
  { 6, -1, sizeof(StringRangeSuffix)},
  { 12, -1, sizeof(StringRangeContains)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_StringRangePrefix_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_StringRangeSuffix_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_StringRangeContains_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "string.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::validate::protobuf_validate_2eproto::InitDefaults();
  _StringRangePrefix_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_StringRangePrefix_default_instance_);_StringRangeSuffix_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_StringRangeSuffix_default_instance_);_StringRangeContains_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_StringRangeContains_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014string.proto\022\003pgv\032\027validate/validate.p"
      "roto\"7\n\021StringRangePrefix\022\"\n\007content\030\001 \003"
      "(\tB\021\272\351\300\003\014\222\001\t\"\007r\005:\003Foo\"7\n\021StringRangeSuff"
      "ix\022\"\n\007content\030\001 \003(\tB\021\272\351\300\003\014\222\001\t\"\007r\005B\003Foo\"9"
      "\n\023StringRangeContains\022\"\n\007content\030\001 \003(\tB\021"
      "\272\351\300\003\014\222\001\t\"\007r\005J\003Foob\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 225);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "string.proto", &protobuf_RegisterTypes);
  ::validate::protobuf_validate_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_string_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StringRangePrefix::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StringRangePrefix::StringRangePrefix()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_string_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pgv.StringRangePrefix)
}
StringRangePrefix::StringRangePrefix(const StringRangePrefix& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      content_(from.content_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pgv.StringRangePrefix)
}

void StringRangePrefix::SharedCtor() {
  _cached_size_ = 0;
}

StringRangePrefix::~StringRangePrefix() {
  // @@protoc_insertion_point(destructor:pgv.StringRangePrefix)
  SharedDtor();
}

void StringRangePrefix::SharedDtor() {
}

void StringRangePrefix::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StringRangePrefix::descriptor() {
  protobuf_string_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_string_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StringRangePrefix& StringRangePrefix::default_instance() {
  protobuf_string_2eproto::InitDefaults();
  return *internal_default_instance();
}

StringRangePrefix* StringRangePrefix::New(::google::protobuf::Arena* arena) const {
  StringRangePrefix* n = new StringRangePrefix;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StringRangePrefix::Clear() {
// @@protoc_insertion_point(message_clear_start:pgv.StringRangePrefix)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.Clear();
  _internal_metadata_.Clear();
}

bool StringRangePrefix::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pgv.StringRangePrefix)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string content = 1 [(.validate.rules) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content(this->content_size() - 1).data(),
            static_cast<int>(this->content(this->content_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pgv.StringRangePrefix.content"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pgv.StringRangePrefix)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pgv.StringRangePrefix)
  return false;
#undef DO_
}

void StringRangePrefix::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pgv.StringRangePrefix)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string content = 1 [(.validate.rules) = {
  for (int i = 0, n = this->content_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content(i).data(), static_cast<int>(this->content(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pgv.StringRangePrefix.content");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->content(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pgv.StringRangePrefix)
}

::google::protobuf::uint8* StringRangePrefix::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pgv.StringRangePrefix)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string content = 1 [(.validate.rules) = {
  for (int i = 0, n = this->content_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content(i).data(), static_cast<int>(this->content(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pgv.StringRangePrefix.content");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->content(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pgv.StringRangePrefix)
  return target;
}

size_t StringRangePrefix::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pgv.StringRangePrefix)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string content = 1 [(.validate.rules) = {
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->content_size());
  for (int i = 0, n = this->content_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->content(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StringRangePrefix::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pgv.StringRangePrefix)
  GOOGLE_DCHECK_NE(&from, this);
  const StringRangePrefix* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StringRangePrefix>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pgv.StringRangePrefix)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pgv.StringRangePrefix)
    MergeFrom(*source);
  }
}

void StringRangePrefix::MergeFrom(const StringRangePrefix& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pgv.StringRangePrefix)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  content_.MergeFrom(from.content_);
}

void StringRangePrefix::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pgv.StringRangePrefix)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StringRangePrefix::CopyFrom(const StringRangePrefix& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pgv.StringRangePrefix)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringRangePrefix::IsInitialized() const {
  return true;
}

void StringRangePrefix::Swap(StringRangePrefix* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StringRangePrefix::InternalSwap(StringRangePrefix* other) {
  using std::swap;
  content_.InternalSwap(&other->content_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StringRangePrefix::GetMetadata() const {
  protobuf_string_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_string_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StringRangePrefix

// repeated string content = 1 [(.validate.rules) = {
int StringRangePrefix::content_size() const {
  return content_.size();
}
void StringRangePrefix::clear_content() {
  content_.Clear();
}
const ::std::string& StringRangePrefix::content(int index) const {
  // @@protoc_insertion_point(field_get:pgv.StringRangePrefix.content)
  return content_.Get(index);
}
::std::string* StringRangePrefix::mutable_content(int index) {
  // @@protoc_insertion_point(field_mutable:pgv.StringRangePrefix.content)
  return content_.Mutable(index);
}
void StringRangePrefix::set_content(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:pgv.StringRangePrefix.content)
  content_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void StringRangePrefix::set_content(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:pgv.StringRangePrefix.content)
  content_.Mutable(index)->assign(std::move(value));
}
#endif
void StringRangePrefix::set_content(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  content_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:pgv.StringRangePrefix.content)
}
void StringRangePrefix::set_content(int index, const char* value, size_t size) {
  content_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pgv.StringRangePrefix.content)
}
::std::string* StringRangePrefix::add_content() {
  // @@protoc_insertion_point(field_add_mutable:pgv.StringRangePrefix.content)
  return content_.Add();
}
void StringRangePrefix::add_content(const ::std::string& value) {
  content_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:pgv.StringRangePrefix.content)
}
#if LANG_CXX11
void StringRangePrefix::add_content(::std::string&& value) {
  content_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:pgv.StringRangePrefix.content)
}
#endif
void StringRangePrefix::add_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  content_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:pgv.StringRangePrefix.content)
}
void StringRangePrefix::add_content(const char* value, size_t size) {
  content_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:pgv.StringRangePrefix.content)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
StringRangePrefix::content() const {
  // @@protoc_insertion_point(field_list:pgv.StringRangePrefix.content)
  return content_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
StringRangePrefix::mutable_content() {
  // @@protoc_insertion_point(field_mutable_list:pgv.StringRangePrefix.content)
  return &content_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StringRangeSuffix::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StringRangeSuffix::StringRangeSuffix()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_string_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pgv.StringRangeSuffix)
}
StringRangeSuffix::StringRangeSuffix(const StringRangeSuffix& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      content_(from.content_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pgv.StringRangeSuffix)
}

void StringRangeSuffix::SharedCtor() {
  _cached_size_ = 0;
}

StringRangeSuffix::~StringRangeSuffix() {
  // @@protoc_insertion_point(destructor:pgv.StringRangeSuffix)
  SharedDtor();
}

void StringRangeSuffix::SharedDtor() {
}

void StringRangeSuffix::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StringRangeSuffix::descriptor() {
  protobuf_string_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_string_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StringRangeSuffix& StringRangeSuffix::default_instance() {
  protobuf_string_2eproto::InitDefaults();
  return *internal_default_instance();
}

StringRangeSuffix* StringRangeSuffix::New(::google::protobuf::Arena* arena) const {
  StringRangeSuffix* n = new StringRangeSuffix;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StringRangeSuffix::Clear() {
// @@protoc_insertion_point(message_clear_start:pgv.StringRangeSuffix)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.Clear();
  _internal_metadata_.Clear();
}

bool StringRangeSuffix::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pgv.StringRangeSuffix)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string content = 1 [(.validate.rules) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content(this->content_size() - 1).data(),
            static_cast<int>(this->content(this->content_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pgv.StringRangeSuffix.content"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pgv.StringRangeSuffix)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pgv.StringRangeSuffix)
  return false;
#undef DO_
}

void StringRangeSuffix::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pgv.StringRangeSuffix)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string content = 1 [(.validate.rules) = {
  for (int i = 0, n = this->content_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content(i).data(), static_cast<int>(this->content(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pgv.StringRangeSuffix.content");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->content(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pgv.StringRangeSuffix)
}

::google::protobuf::uint8* StringRangeSuffix::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pgv.StringRangeSuffix)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string content = 1 [(.validate.rules) = {
  for (int i = 0, n = this->content_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content(i).data(), static_cast<int>(this->content(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pgv.StringRangeSuffix.content");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->content(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pgv.StringRangeSuffix)
  return target;
}

size_t StringRangeSuffix::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pgv.StringRangeSuffix)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string content = 1 [(.validate.rules) = {
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->content_size());
  for (int i = 0, n = this->content_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->content(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StringRangeSuffix::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pgv.StringRangeSuffix)
  GOOGLE_DCHECK_NE(&from, this);
  const StringRangeSuffix* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StringRangeSuffix>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pgv.StringRangeSuffix)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pgv.StringRangeSuffix)
    MergeFrom(*source);
  }
}

void StringRangeSuffix::MergeFrom(const StringRangeSuffix& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pgv.StringRangeSuffix)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  content_.MergeFrom(from.content_);
}

void StringRangeSuffix::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pgv.StringRangeSuffix)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StringRangeSuffix::CopyFrom(const StringRangeSuffix& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pgv.StringRangeSuffix)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringRangeSuffix::IsInitialized() const {
  return true;
}

void StringRangeSuffix::Swap(StringRangeSuffix* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StringRangeSuffix::InternalSwap(StringRangeSuffix* other) {
  using std::swap;
  content_.InternalSwap(&other->content_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StringRangeSuffix::GetMetadata() const {
  protobuf_string_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_string_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StringRangeSuffix

// repeated string content = 1 [(.validate.rules) = {
int StringRangeSuffix::content_size() const {
  return content_.size();
}
void StringRangeSuffix::clear_content() {
  content_.Clear();
}
const ::std::string& StringRangeSuffix::content(int index) const {
  // @@protoc_insertion_point(field_get:pgv.StringRangeSuffix.content)
  return content_.Get(index);
}
::std::string* StringRangeSuffix::mutable_content(int index) {
  // @@protoc_insertion_point(field_mutable:pgv.StringRangeSuffix.content)
  return content_.Mutable(index);
}
void StringRangeSuffix::set_content(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:pgv.StringRangeSuffix.content)
  content_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void StringRangeSuffix::set_content(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:pgv.StringRangeSuffix.content)
  content_.Mutable(index)->assign(std::move(value));
}
#endif
void StringRangeSuffix::set_content(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  content_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:pgv.StringRangeSuffix.content)
}
void StringRangeSuffix::set_content(int index, const char* value, size_t size) {
  content_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pgv.StringRangeSuffix.content)
}
::std::string* StringRangeSuffix::add_content() {
  // @@protoc_insertion_point(field_add_mutable:pgv.StringRangeSuffix.content)
  return content_.Add();
}
void StringRangeSuffix::add_content(const ::std::string& value) {
  content_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:pgv.StringRangeSuffix.content)
}
#if LANG_CXX11
void StringRangeSuffix::add_content(::std::string&& value) {
  content_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:pgv.StringRangeSuffix.content)
}
#endif
void StringRangeSuffix::add_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  content_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:pgv.StringRangeSuffix.content)
}
void StringRangeSuffix::add_content(const char* value, size_t size) {
  content_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:pgv.StringRangeSuffix.content)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
StringRangeSuffix::content() const {
  // @@protoc_insertion_point(field_list:pgv.StringRangeSuffix.content)
  return content_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
StringRangeSuffix::mutable_content() {
  // @@protoc_insertion_point(field_mutable_list:pgv.StringRangeSuffix.content)
  return &content_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StringRangeContains::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StringRangeContains::StringRangeContains()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_string_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pgv.StringRangeContains)
}
StringRangeContains::StringRangeContains(const StringRangeContains& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      content_(from.content_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pgv.StringRangeContains)
}

void StringRangeContains::SharedCtor() {
  _cached_size_ = 0;
}

StringRangeContains::~StringRangeContains() {
  // @@protoc_insertion_point(destructor:pgv.StringRangeContains)
  SharedDtor();
}

void StringRangeContains::SharedDtor() {
}

void StringRangeContains::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StringRangeContains::descriptor() {
  protobuf_string_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_string_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StringRangeContains& StringRangeContains::default_instance() {
  protobuf_string_2eproto::InitDefaults();
  return *internal_default_instance();
}

StringRangeContains* StringRangeContains::New(::google::protobuf::Arena* arena) const {
  StringRangeContains* n = new StringRangeContains;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StringRangeContains::Clear() {
// @@protoc_insertion_point(message_clear_start:pgv.StringRangeContains)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.Clear();
  _internal_metadata_.Clear();
}

bool StringRangeContains::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pgv.StringRangeContains)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string content = 1 [(.validate.rules) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_content()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content(this->content_size() - 1).data(),
            static_cast<int>(this->content(this->content_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pgv.StringRangeContains.content"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pgv.StringRangeContains)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pgv.StringRangeContains)
  return false;
#undef DO_
}

void StringRangeContains::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pgv.StringRangeContains)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string content = 1 [(.validate.rules) = {
  for (int i = 0, n = this->content_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content(i).data(), static_cast<int>(this->content(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pgv.StringRangeContains.content");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->content(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pgv.StringRangeContains)
}

::google::protobuf::uint8* StringRangeContains::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pgv.StringRangeContains)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string content = 1 [(.validate.rules) = {
  for (int i = 0, n = this->content_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content(i).data(), static_cast<int>(this->content(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pgv.StringRangeContains.content");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->content(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pgv.StringRangeContains)
  return target;
}

size_t StringRangeContains::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pgv.StringRangeContains)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string content = 1 [(.validate.rules) = {
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->content_size());
  for (int i = 0, n = this->content_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->content(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StringRangeContains::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pgv.StringRangeContains)
  GOOGLE_DCHECK_NE(&from, this);
  const StringRangeContains* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StringRangeContains>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pgv.StringRangeContains)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pgv.StringRangeContains)
    MergeFrom(*source);
  }
}

void StringRangeContains::MergeFrom(const StringRangeContains& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pgv.StringRangeContains)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  content_.MergeFrom(from.content_);
}

void StringRangeContains::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pgv.StringRangeContains)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StringRangeContains::CopyFrom(const StringRangeContains& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pgv.StringRangeContains)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringRangeContains::IsInitialized() const {
  return true;
}

void StringRangeContains::Swap(StringRangeContains* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StringRangeContains::InternalSwap(StringRangeContains* other) {
  using std::swap;
  content_.InternalSwap(&other->content_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StringRangeContains::GetMetadata() const {
  protobuf_string_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_string_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StringRangeContains

// repeated string content = 1 [(.validate.rules) = {
int StringRangeContains::content_size() const {
  return content_.size();
}
void StringRangeContains::clear_content() {
  content_.Clear();
}
const ::std::string& StringRangeContains::content(int index) const {
  // @@protoc_insertion_point(field_get:pgv.StringRangeContains.content)
  return content_.Get(index);
}
::std::string* StringRangeContains::mutable_content(int index) {
  // @@protoc_insertion_point(field_mutable:pgv.StringRangeContains.content)
  return content_.Mutable(index);
}
void StringRangeContains::set_content(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:pgv.StringRangeContains.content)
  content_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void StringRangeContains::set_content(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:pgv.StringRangeContains.content)
  content_.Mutable(index)->assign(std::move(value));
}
#endif
void StringRangeContains::set_content(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  content_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:pgv.StringRangeContains.content)
}
void StringRangeContains::set_content(int index, const char* value, size_t size) {
  content_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pgv.StringRangeContains.content)
}
::std::string* StringRangeContains::add_content() {
  // @@protoc_insertion_point(field_add_mutable:pgv.StringRangeContains.content)
  return content_.Add();
}
void StringRangeContains::add_content(const ::std::string& value) {
  content_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:pgv.StringRangeContains.content)
}
#if LANG_CXX11
void StringRangeContains::add_content(::std::string&& value) {
  content_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:pgv.StringRangeContains.content)
}
#endif
void StringRangeContains::add_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  content_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:pgv.StringRangeContains.content)
}
void StringRangeContains::add_content(const char* value, size_t size) {
  content_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:pgv.StringRangeContains.content)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
StringRangeContains::content() const {
  // @@protoc_insertion_point(field_list:pgv.StringRangeContains.content)
  return content_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
StringRangeContains::mutable_content() {
  // @@protoc_insertion_point(field_mutable_list:pgv.StringRangeContains.content)
  return &content_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace pgv

// @@protoc_insertion_point(global_scope)
