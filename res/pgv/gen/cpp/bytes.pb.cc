// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bytes.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "bytes.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pgv {
class BytesRangeMaxLenDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BytesRangeMaxLen>
     _instance;
} _BytesRangeMaxLen_default_instance_;
class BytesRangeMinLenDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BytesRangeMinLen>
     _instance;
} _BytesRangeMinLen_default_instance_;
class BytesRangePrefixDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BytesRangePrefix>
     _instance;
} _BytesRangePrefix_default_instance_;
class BytesRangeContainsDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BytesRangeContains>
     _instance;
} _BytesRangeContains_default_instance_;
class BytesRangeConstDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<BytesRangeConst>
     _instance;
} _BytesRangeConst_default_instance_;

namespace protobuf_bytes_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[5];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BytesRangeMaxLen, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BytesRangeMaxLen, content_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BytesRangeMinLen, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BytesRangeMinLen, content_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BytesRangePrefix, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BytesRangePrefix, content_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BytesRangeContains, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BytesRangeContains, content_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BytesRangeConst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BytesRangeConst, content_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(BytesRangeMaxLen)},
  { 6, -1, sizeof(BytesRangeMinLen)},
  { 12, -1, sizeof(BytesRangePrefix)},
  { 18, -1, sizeof(BytesRangeContains)},
  { 24, -1, sizeof(BytesRangeConst)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_BytesRangeMaxLen_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BytesRangeMinLen_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BytesRangePrefix_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BytesRangeContains_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BytesRangeConst_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "bytes.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::validate::protobuf_validate_2eproto::InitDefaults();
  _BytesRangeMaxLen_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BytesRangeMaxLen_default_instance_);_BytesRangeMinLen_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BytesRangeMinLen_default_instance_);_BytesRangePrefix_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BytesRangePrefix_default_instance_);_BytesRangeContains_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BytesRangeContains_default_instance_);_BytesRangeConst_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_BytesRangeConst_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013bytes.proto\022\003pgv\032\027validate/validate.pr"
      "oto\"3\n\020BytesRangeMaxLen\022\037\n\007content\030\001 \003(\014"
      "B\016\272\351\300\003\t\222\001\006\"\004z\002\030\n\"3\n\020BytesRangeMinLen\022\037\n\007"
      "content\030\001 \003(\014B\016\272\351\300\003\t\222\001\006\"\004z\002\020\n\"4\n\020BytesRa"
      "ngePrefix\022 \n\007content\030\001 \003(\014B\017\272\351\300\003\n\222\001\007\"\005z\003"
      "*\001\231\"6\n\022BytesRangeContains\022 \n\007content\030\001 \003"
      "(\014B\017\272\351\300\003\n\222\001\007\"\005z\003:\001\231\"3\n\017BytesRangeConst\022 "
      "\n\007content\030\001 \003(\014B\017\272\351\300\003\n\222\001\007\"\005z\003\n\001\231b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 320);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "bytes.proto", &protobuf_RegisterTypes);
  ::validate::protobuf_validate_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_bytes_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BytesRangeMaxLen::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BytesRangeMaxLen::BytesRangeMaxLen()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_bytes_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pgv.BytesRangeMaxLen)
}
BytesRangeMaxLen::BytesRangeMaxLen(const BytesRangeMaxLen& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      content_(from.content_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pgv.BytesRangeMaxLen)
}

void BytesRangeMaxLen::SharedCtor() {
  _cached_size_ = 0;
}

BytesRangeMaxLen::~BytesRangeMaxLen() {
  // @@protoc_insertion_point(destructor:pgv.BytesRangeMaxLen)
  SharedDtor();
}

void BytesRangeMaxLen::SharedDtor() {
}

void BytesRangeMaxLen::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BytesRangeMaxLen::descriptor() {
  protobuf_bytes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bytes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BytesRangeMaxLen& BytesRangeMaxLen::default_instance() {
  protobuf_bytes_2eproto::InitDefaults();
  return *internal_default_instance();
}

BytesRangeMaxLen* BytesRangeMaxLen::New(::google::protobuf::Arena* arena) const {
  BytesRangeMaxLen* n = new BytesRangeMaxLen;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BytesRangeMaxLen::Clear() {
// @@protoc_insertion_point(message_clear_start:pgv.BytesRangeMaxLen)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.Clear();
  _internal_metadata_.Clear();
}

bool BytesRangeMaxLen::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pgv.BytesRangeMaxLen)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes content = 1 [(.validate.rules) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pgv.BytesRangeMaxLen)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pgv.BytesRangeMaxLen)
  return false;
#undef DO_
}

void BytesRangeMaxLen::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pgv.BytesRangeMaxLen)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes content = 1 [(.validate.rules) = {
  for (int i = 0, n = this->content_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->content(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pgv.BytesRangeMaxLen)
}

::google::protobuf::uint8* BytesRangeMaxLen::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pgv.BytesRangeMaxLen)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes content = 1 [(.validate.rules) = {
  for (int i = 0, n = this->content_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->content(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pgv.BytesRangeMaxLen)
  return target;
}

size_t BytesRangeMaxLen::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pgv.BytesRangeMaxLen)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes content = 1 [(.validate.rules) = {
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->content_size());
  for (int i = 0, n = this->content_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->content(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BytesRangeMaxLen::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pgv.BytesRangeMaxLen)
  GOOGLE_DCHECK_NE(&from, this);
  const BytesRangeMaxLen* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BytesRangeMaxLen>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pgv.BytesRangeMaxLen)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pgv.BytesRangeMaxLen)
    MergeFrom(*source);
  }
}

void BytesRangeMaxLen::MergeFrom(const BytesRangeMaxLen& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pgv.BytesRangeMaxLen)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  content_.MergeFrom(from.content_);
}

void BytesRangeMaxLen::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pgv.BytesRangeMaxLen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BytesRangeMaxLen::CopyFrom(const BytesRangeMaxLen& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pgv.BytesRangeMaxLen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BytesRangeMaxLen::IsInitialized() const {
  return true;
}

void BytesRangeMaxLen::Swap(BytesRangeMaxLen* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BytesRangeMaxLen::InternalSwap(BytesRangeMaxLen* other) {
  using std::swap;
  content_.InternalSwap(&other->content_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BytesRangeMaxLen::GetMetadata() const {
  protobuf_bytes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bytes_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BytesRangeMaxLen

// repeated bytes content = 1 [(.validate.rules) = {
int BytesRangeMaxLen::content_size() const {
  return content_.size();
}
void BytesRangeMaxLen::clear_content() {
  content_.Clear();
}
const ::std::string& BytesRangeMaxLen::content(int index) const {
  // @@protoc_insertion_point(field_get:pgv.BytesRangeMaxLen.content)
  return content_.Get(index);
}
::std::string* BytesRangeMaxLen::mutable_content(int index) {
  // @@protoc_insertion_point(field_mutable:pgv.BytesRangeMaxLen.content)
  return content_.Mutable(index);
}
void BytesRangeMaxLen::set_content(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:pgv.BytesRangeMaxLen.content)
  content_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void BytesRangeMaxLen::set_content(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:pgv.BytesRangeMaxLen.content)
  content_.Mutable(index)->assign(std::move(value));
}
#endif
void BytesRangeMaxLen::set_content(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  content_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:pgv.BytesRangeMaxLen.content)
}
void BytesRangeMaxLen::set_content(int index, const void* value, size_t size) {
  content_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pgv.BytesRangeMaxLen.content)
}
::std::string* BytesRangeMaxLen::add_content() {
  // @@protoc_insertion_point(field_add_mutable:pgv.BytesRangeMaxLen.content)
  return content_.Add();
}
void BytesRangeMaxLen::add_content(const ::std::string& value) {
  content_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:pgv.BytesRangeMaxLen.content)
}
#if LANG_CXX11
void BytesRangeMaxLen::add_content(::std::string&& value) {
  content_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:pgv.BytesRangeMaxLen.content)
}
#endif
void BytesRangeMaxLen::add_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  content_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:pgv.BytesRangeMaxLen.content)
}
void BytesRangeMaxLen::add_content(const void* value, size_t size) {
  content_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:pgv.BytesRangeMaxLen.content)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
BytesRangeMaxLen::content() const {
  // @@protoc_insertion_point(field_list:pgv.BytesRangeMaxLen.content)
  return content_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
BytesRangeMaxLen::mutable_content() {
  // @@protoc_insertion_point(field_mutable_list:pgv.BytesRangeMaxLen.content)
  return &content_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BytesRangeMinLen::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BytesRangeMinLen::BytesRangeMinLen()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_bytes_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pgv.BytesRangeMinLen)
}
BytesRangeMinLen::BytesRangeMinLen(const BytesRangeMinLen& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      content_(from.content_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pgv.BytesRangeMinLen)
}

void BytesRangeMinLen::SharedCtor() {
  _cached_size_ = 0;
}

BytesRangeMinLen::~BytesRangeMinLen() {
  // @@protoc_insertion_point(destructor:pgv.BytesRangeMinLen)
  SharedDtor();
}

void BytesRangeMinLen::SharedDtor() {
}

void BytesRangeMinLen::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BytesRangeMinLen::descriptor() {
  protobuf_bytes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bytes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BytesRangeMinLen& BytesRangeMinLen::default_instance() {
  protobuf_bytes_2eproto::InitDefaults();
  return *internal_default_instance();
}

BytesRangeMinLen* BytesRangeMinLen::New(::google::protobuf::Arena* arena) const {
  BytesRangeMinLen* n = new BytesRangeMinLen;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BytesRangeMinLen::Clear() {
// @@protoc_insertion_point(message_clear_start:pgv.BytesRangeMinLen)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.Clear();
  _internal_metadata_.Clear();
}

bool BytesRangeMinLen::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pgv.BytesRangeMinLen)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes content = 1 [(.validate.rules) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pgv.BytesRangeMinLen)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pgv.BytesRangeMinLen)
  return false;
#undef DO_
}

void BytesRangeMinLen::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pgv.BytesRangeMinLen)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes content = 1 [(.validate.rules) = {
  for (int i = 0, n = this->content_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->content(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pgv.BytesRangeMinLen)
}

::google::protobuf::uint8* BytesRangeMinLen::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pgv.BytesRangeMinLen)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes content = 1 [(.validate.rules) = {
  for (int i = 0, n = this->content_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->content(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pgv.BytesRangeMinLen)
  return target;
}

size_t BytesRangeMinLen::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pgv.BytesRangeMinLen)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes content = 1 [(.validate.rules) = {
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->content_size());
  for (int i = 0, n = this->content_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->content(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BytesRangeMinLen::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pgv.BytesRangeMinLen)
  GOOGLE_DCHECK_NE(&from, this);
  const BytesRangeMinLen* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BytesRangeMinLen>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pgv.BytesRangeMinLen)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pgv.BytesRangeMinLen)
    MergeFrom(*source);
  }
}

void BytesRangeMinLen::MergeFrom(const BytesRangeMinLen& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pgv.BytesRangeMinLen)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  content_.MergeFrom(from.content_);
}

void BytesRangeMinLen::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pgv.BytesRangeMinLen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BytesRangeMinLen::CopyFrom(const BytesRangeMinLen& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pgv.BytesRangeMinLen)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BytesRangeMinLen::IsInitialized() const {
  return true;
}

void BytesRangeMinLen::Swap(BytesRangeMinLen* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BytesRangeMinLen::InternalSwap(BytesRangeMinLen* other) {
  using std::swap;
  content_.InternalSwap(&other->content_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BytesRangeMinLen::GetMetadata() const {
  protobuf_bytes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bytes_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BytesRangeMinLen

// repeated bytes content = 1 [(.validate.rules) = {
int BytesRangeMinLen::content_size() const {
  return content_.size();
}
void BytesRangeMinLen::clear_content() {
  content_.Clear();
}
const ::std::string& BytesRangeMinLen::content(int index) const {
  // @@protoc_insertion_point(field_get:pgv.BytesRangeMinLen.content)
  return content_.Get(index);
}
::std::string* BytesRangeMinLen::mutable_content(int index) {
  // @@protoc_insertion_point(field_mutable:pgv.BytesRangeMinLen.content)
  return content_.Mutable(index);
}
void BytesRangeMinLen::set_content(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:pgv.BytesRangeMinLen.content)
  content_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void BytesRangeMinLen::set_content(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:pgv.BytesRangeMinLen.content)
  content_.Mutable(index)->assign(std::move(value));
}
#endif
void BytesRangeMinLen::set_content(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  content_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:pgv.BytesRangeMinLen.content)
}
void BytesRangeMinLen::set_content(int index, const void* value, size_t size) {
  content_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pgv.BytesRangeMinLen.content)
}
::std::string* BytesRangeMinLen::add_content() {
  // @@protoc_insertion_point(field_add_mutable:pgv.BytesRangeMinLen.content)
  return content_.Add();
}
void BytesRangeMinLen::add_content(const ::std::string& value) {
  content_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:pgv.BytesRangeMinLen.content)
}
#if LANG_CXX11
void BytesRangeMinLen::add_content(::std::string&& value) {
  content_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:pgv.BytesRangeMinLen.content)
}
#endif
void BytesRangeMinLen::add_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  content_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:pgv.BytesRangeMinLen.content)
}
void BytesRangeMinLen::add_content(const void* value, size_t size) {
  content_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:pgv.BytesRangeMinLen.content)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
BytesRangeMinLen::content() const {
  // @@protoc_insertion_point(field_list:pgv.BytesRangeMinLen.content)
  return content_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
BytesRangeMinLen::mutable_content() {
  // @@protoc_insertion_point(field_mutable_list:pgv.BytesRangeMinLen.content)
  return &content_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BytesRangePrefix::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BytesRangePrefix::BytesRangePrefix()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_bytes_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pgv.BytesRangePrefix)
}
BytesRangePrefix::BytesRangePrefix(const BytesRangePrefix& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      content_(from.content_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pgv.BytesRangePrefix)
}

void BytesRangePrefix::SharedCtor() {
  _cached_size_ = 0;
}

BytesRangePrefix::~BytesRangePrefix() {
  // @@protoc_insertion_point(destructor:pgv.BytesRangePrefix)
  SharedDtor();
}

void BytesRangePrefix::SharedDtor() {
}

void BytesRangePrefix::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BytesRangePrefix::descriptor() {
  protobuf_bytes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bytes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BytesRangePrefix& BytesRangePrefix::default_instance() {
  protobuf_bytes_2eproto::InitDefaults();
  return *internal_default_instance();
}

BytesRangePrefix* BytesRangePrefix::New(::google::protobuf::Arena* arena) const {
  BytesRangePrefix* n = new BytesRangePrefix;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BytesRangePrefix::Clear() {
// @@protoc_insertion_point(message_clear_start:pgv.BytesRangePrefix)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.Clear();
  _internal_metadata_.Clear();
}

bool BytesRangePrefix::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pgv.BytesRangePrefix)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes content = 1 [(.validate.rules) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pgv.BytesRangePrefix)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pgv.BytesRangePrefix)
  return false;
#undef DO_
}

void BytesRangePrefix::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pgv.BytesRangePrefix)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes content = 1 [(.validate.rules) = {
  for (int i = 0, n = this->content_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->content(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pgv.BytesRangePrefix)
}

::google::protobuf::uint8* BytesRangePrefix::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pgv.BytesRangePrefix)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes content = 1 [(.validate.rules) = {
  for (int i = 0, n = this->content_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->content(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pgv.BytesRangePrefix)
  return target;
}

size_t BytesRangePrefix::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pgv.BytesRangePrefix)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes content = 1 [(.validate.rules) = {
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->content_size());
  for (int i = 0, n = this->content_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->content(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BytesRangePrefix::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pgv.BytesRangePrefix)
  GOOGLE_DCHECK_NE(&from, this);
  const BytesRangePrefix* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BytesRangePrefix>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pgv.BytesRangePrefix)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pgv.BytesRangePrefix)
    MergeFrom(*source);
  }
}

void BytesRangePrefix::MergeFrom(const BytesRangePrefix& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pgv.BytesRangePrefix)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  content_.MergeFrom(from.content_);
}

void BytesRangePrefix::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pgv.BytesRangePrefix)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BytesRangePrefix::CopyFrom(const BytesRangePrefix& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pgv.BytesRangePrefix)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BytesRangePrefix::IsInitialized() const {
  return true;
}

void BytesRangePrefix::Swap(BytesRangePrefix* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BytesRangePrefix::InternalSwap(BytesRangePrefix* other) {
  using std::swap;
  content_.InternalSwap(&other->content_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BytesRangePrefix::GetMetadata() const {
  protobuf_bytes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bytes_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BytesRangePrefix

// repeated bytes content = 1 [(.validate.rules) = {
int BytesRangePrefix::content_size() const {
  return content_.size();
}
void BytesRangePrefix::clear_content() {
  content_.Clear();
}
const ::std::string& BytesRangePrefix::content(int index) const {
  // @@protoc_insertion_point(field_get:pgv.BytesRangePrefix.content)
  return content_.Get(index);
}
::std::string* BytesRangePrefix::mutable_content(int index) {
  // @@protoc_insertion_point(field_mutable:pgv.BytesRangePrefix.content)
  return content_.Mutable(index);
}
void BytesRangePrefix::set_content(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:pgv.BytesRangePrefix.content)
  content_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void BytesRangePrefix::set_content(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:pgv.BytesRangePrefix.content)
  content_.Mutable(index)->assign(std::move(value));
}
#endif
void BytesRangePrefix::set_content(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  content_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:pgv.BytesRangePrefix.content)
}
void BytesRangePrefix::set_content(int index, const void* value, size_t size) {
  content_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pgv.BytesRangePrefix.content)
}
::std::string* BytesRangePrefix::add_content() {
  // @@protoc_insertion_point(field_add_mutable:pgv.BytesRangePrefix.content)
  return content_.Add();
}
void BytesRangePrefix::add_content(const ::std::string& value) {
  content_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:pgv.BytesRangePrefix.content)
}
#if LANG_CXX11
void BytesRangePrefix::add_content(::std::string&& value) {
  content_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:pgv.BytesRangePrefix.content)
}
#endif
void BytesRangePrefix::add_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  content_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:pgv.BytesRangePrefix.content)
}
void BytesRangePrefix::add_content(const void* value, size_t size) {
  content_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:pgv.BytesRangePrefix.content)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
BytesRangePrefix::content() const {
  // @@protoc_insertion_point(field_list:pgv.BytesRangePrefix.content)
  return content_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
BytesRangePrefix::mutable_content() {
  // @@protoc_insertion_point(field_mutable_list:pgv.BytesRangePrefix.content)
  return &content_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BytesRangeContains::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BytesRangeContains::BytesRangeContains()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_bytes_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pgv.BytesRangeContains)
}
BytesRangeContains::BytesRangeContains(const BytesRangeContains& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      content_(from.content_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pgv.BytesRangeContains)
}

void BytesRangeContains::SharedCtor() {
  _cached_size_ = 0;
}

BytesRangeContains::~BytesRangeContains() {
  // @@protoc_insertion_point(destructor:pgv.BytesRangeContains)
  SharedDtor();
}

void BytesRangeContains::SharedDtor() {
}

void BytesRangeContains::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BytesRangeContains::descriptor() {
  protobuf_bytes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bytes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BytesRangeContains& BytesRangeContains::default_instance() {
  protobuf_bytes_2eproto::InitDefaults();
  return *internal_default_instance();
}

BytesRangeContains* BytesRangeContains::New(::google::protobuf::Arena* arena) const {
  BytesRangeContains* n = new BytesRangeContains;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BytesRangeContains::Clear() {
// @@protoc_insertion_point(message_clear_start:pgv.BytesRangeContains)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.Clear();
  _internal_metadata_.Clear();
}

bool BytesRangeContains::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pgv.BytesRangeContains)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes content = 1 [(.validate.rules) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pgv.BytesRangeContains)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pgv.BytesRangeContains)
  return false;
#undef DO_
}

void BytesRangeContains::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pgv.BytesRangeContains)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes content = 1 [(.validate.rules) = {
  for (int i = 0, n = this->content_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->content(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pgv.BytesRangeContains)
}

::google::protobuf::uint8* BytesRangeContains::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pgv.BytesRangeContains)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes content = 1 [(.validate.rules) = {
  for (int i = 0, n = this->content_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->content(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pgv.BytesRangeContains)
  return target;
}

size_t BytesRangeContains::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pgv.BytesRangeContains)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes content = 1 [(.validate.rules) = {
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->content_size());
  for (int i = 0, n = this->content_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->content(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BytesRangeContains::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pgv.BytesRangeContains)
  GOOGLE_DCHECK_NE(&from, this);
  const BytesRangeContains* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BytesRangeContains>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pgv.BytesRangeContains)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pgv.BytesRangeContains)
    MergeFrom(*source);
  }
}

void BytesRangeContains::MergeFrom(const BytesRangeContains& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pgv.BytesRangeContains)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  content_.MergeFrom(from.content_);
}

void BytesRangeContains::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pgv.BytesRangeContains)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BytesRangeContains::CopyFrom(const BytesRangeContains& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pgv.BytesRangeContains)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BytesRangeContains::IsInitialized() const {
  return true;
}

void BytesRangeContains::Swap(BytesRangeContains* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BytesRangeContains::InternalSwap(BytesRangeContains* other) {
  using std::swap;
  content_.InternalSwap(&other->content_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BytesRangeContains::GetMetadata() const {
  protobuf_bytes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bytes_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BytesRangeContains

// repeated bytes content = 1 [(.validate.rules) = {
int BytesRangeContains::content_size() const {
  return content_.size();
}
void BytesRangeContains::clear_content() {
  content_.Clear();
}
const ::std::string& BytesRangeContains::content(int index) const {
  // @@protoc_insertion_point(field_get:pgv.BytesRangeContains.content)
  return content_.Get(index);
}
::std::string* BytesRangeContains::mutable_content(int index) {
  // @@protoc_insertion_point(field_mutable:pgv.BytesRangeContains.content)
  return content_.Mutable(index);
}
void BytesRangeContains::set_content(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:pgv.BytesRangeContains.content)
  content_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void BytesRangeContains::set_content(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:pgv.BytesRangeContains.content)
  content_.Mutable(index)->assign(std::move(value));
}
#endif
void BytesRangeContains::set_content(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  content_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:pgv.BytesRangeContains.content)
}
void BytesRangeContains::set_content(int index, const void* value, size_t size) {
  content_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pgv.BytesRangeContains.content)
}
::std::string* BytesRangeContains::add_content() {
  // @@protoc_insertion_point(field_add_mutable:pgv.BytesRangeContains.content)
  return content_.Add();
}
void BytesRangeContains::add_content(const ::std::string& value) {
  content_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:pgv.BytesRangeContains.content)
}
#if LANG_CXX11
void BytesRangeContains::add_content(::std::string&& value) {
  content_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:pgv.BytesRangeContains.content)
}
#endif
void BytesRangeContains::add_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  content_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:pgv.BytesRangeContains.content)
}
void BytesRangeContains::add_content(const void* value, size_t size) {
  content_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:pgv.BytesRangeContains.content)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
BytesRangeContains::content() const {
  // @@protoc_insertion_point(field_list:pgv.BytesRangeContains.content)
  return content_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
BytesRangeContains::mutable_content() {
  // @@protoc_insertion_point(field_mutable_list:pgv.BytesRangeContains.content)
  return &content_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BytesRangeConst::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BytesRangeConst::BytesRangeConst()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_bytes_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pgv.BytesRangeConst)
}
BytesRangeConst::BytesRangeConst(const BytesRangeConst& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      content_(from.content_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pgv.BytesRangeConst)
}

void BytesRangeConst::SharedCtor() {
  _cached_size_ = 0;
}

BytesRangeConst::~BytesRangeConst() {
  // @@protoc_insertion_point(destructor:pgv.BytesRangeConst)
  SharedDtor();
}

void BytesRangeConst::SharedDtor() {
}

void BytesRangeConst::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BytesRangeConst::descriptor() {
  protobuf_bytes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bytes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BytesRangeConst& BytesRangeConst::default_instance() {
  protobuf_bytes_2eproto::InitDefaults();
  return *internal_default_instance();
}

BytesRangeConst* BytesRangeConst::New(::google::protobuf::Arena* arena) const {
  BytesRangeConst* n = new BytesRangeConst;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BytesRangeConst::Clear() {
// @@protoc_insertion_point(message_clear_start:pgv.BytesRangeConst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.Clear();
  _internal_metadata_.Clear();
}

bool BytesRangeConst::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pgv.BytesRangeConst)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes content = 1 [(.validate.rules) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pgv.BytesRangeConst)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pgv.BytesRangeConst)
  return false;
#undef DO_
}

void BytesRangeConst::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pgv.BytesRangeConst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes content = 1 [(.validate.rules) = {
  for (int i = 0, n = this->content_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->content(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pgv.BytesRangeConst)
}

::google::protobuf::uint8* BytesRangeConst::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pgv.BytesRangeConst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes content = 1 [(.validate.rules) = {
  for (int i = 0, n = this->content_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->content(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pgv.BytesRangeConst)
  return target;
}

size_t BytesRangeConst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pgv.BytesRangeConst)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes content = 1 [(.validate.rules) = {
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->content_size());
  for (int i = 0, n = this->content_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->content(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BytesRangeConst::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pgv.BytesRangeConst)
  GOOGLE_DCHECK_NE(&from, this);
  const BytesRangeConst* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BytesRangeConst>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pgv.BytesRangeConst)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pgv.BytesRangeConst)
    MergeFrom(*source);
  }
}

void BytesRangeConst::MergeFrom(const BytesRangeConst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pgv.BytesRangeConst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  content_.MergeFrom(from.content_);
}

void BytesRangeConst::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pgv.BytesRangeConst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BytesRangeConst::CopyFrom(const BytesRangeConst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pgv.BytesRangeConst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BytesRangeConst::IsInitialized() const {
  return true;
}

void BytesRangeConst::Swap(BytesRangeConst* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BytesRangeConst::InternalSwap(BytesRangeConst* other) {
  using std::swap;
  content_.InternalSwap(&other->content_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BytesRangeConst::GetMetadata() const {
  protobuf_bytes_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_bytes_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BytesRangeConst

// repeated bytes content = 1 [(.validate.rules) = {
int BytesRangeConst::content_size() const {
  return content_.size();
}
void BytesRangeConst::clear_content() {
  content_.Clear();
}
const ::std::string& BytesRangeConst::content(int index) const {
  // @@protoc_insertion_point(field_get:pgv.BytesRangeConst.content)
  return content_.Get(index);
}
::std::string* BytesRangeConst::mutable_content(int index) {
  // @@protoc_insertion_point(field_mutable:pgv.BytesRangeConst.content)
  return content_.Mutable(index);
}
void BytesRangeConst::set_content(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:pgv.BytesRangeConst.content)
  content_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void BytesRangeConst::set_content(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:pgv.BytesRangeConst.content)
  content_.Mutable(index)->assign(std::move(value));
}
#endif
void BytesRangeConst::set_content(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  content_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:pgv.BytesRangeConst.content)
}
void BytesRangeConst::set_content(int index, const void* value, size_t size) {
  content_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pgv.BytesRangeConst.content)
}
::std::string* BytesRangeConst::add_content() {
  // @@protoc_insertion_point(field_add_mutable:pgv.BytesRangeConst.content)
  return content_.Add();
}
void BytesRangeConst::add_content(const ::std::string& value) {
  content_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:pgv.BytesRangeConst.content)
}
#if LANG_CXX11
void BytesRangeConst::add_content(::std::string&& value) {
  content_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:pgv.BytesRangeConst.content)
}
#endif
void BytesRangeConst::add_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  content_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:pgv.BytesRangeConst.content)
}
void BytesRangeConst::add_content(const void* value, size_t size) {
  content_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:pgv.BytesRangeConst.content)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
BytesRangeConst::content() const {
  // @@protoc_insertion_point(field_list:pgv.BytesRangeConst.content)
  return content_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
BytesRangeConst::mutable_content() {
  // @@protoc_insertion_point(field_mutable_list:pgv.BytesRangeConst.content)
  return &content_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace pgv

// @@protoc_insertion_point(global_scope)
