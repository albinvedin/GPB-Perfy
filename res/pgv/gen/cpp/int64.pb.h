// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: int64.proto

#ifndef PROTOBUF_int64_2eproto__INCLUDED
#define PROTOBUF_int64_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "validate/validate.pb.h"
// @@protoc_insertion_point(includes)
namespace pgv {
class Int64RangeConst;
class Int64RangeConstDefaultTypeInternal;
extern Int64RangeConstDefaultTypeInternal _Int64RangeConst_default_instance_;
class Int64RangeGreaterThan;
class Int64RangeGreaterThanDefaultTypeInternal;
extern Int64RangeGreaterThanDefaultTypeInternal _Int64RangeGreaterThan_default_instance_;
class Int64RangeLessThan;
class Int64RangeLessThanDefaultTypeInternal;
extern Int64RangeLessThanDefaultTypeInternal _Int64RangeLessThan_default_instance_;
}  // namespace pgv

namespace pgv {

namespace protobuf_int64_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_int64_2eproto

// ===================================================================

class Int64RangeGreaterThan : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pgv.Int64RangeGreaterThan) */ {
 public:
  Int64RangeGreaterThan();
  virtual ~Int64RangeGreaterThan();

  Int64RangeGreaterThan(const Int64RangeGreaterThan& from);

  inline Int64RangeGreaterThan& operator=(const Int64RangeGreaterThan& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Int64RangeGreaterThan(Int64RangeGreaterThan&& from) noexcept
    : Int64RangeGreaterThan() {
    *this = ::std::move(from);
  }

  inline Int64RangeGreaterThan& operator=(Int64RangeGreaterThan&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Int64RangeGreaterThan& default_instance();

  static inline const Int64RangeGreaterThan* internal_default_instance() {
    return reinterpret_cast<const Int64RangeGreaterThan*>(
               &_Int64RangeGreaterThan_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Int64RangeGreaterThan* other);
  friend void swap(Int64RangeGreaterThan& a, Int64RangeGreaterThan& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Int64RangeGreaterThan* New() const PROTOBUF_FINAL { return New(NULL); }

  Int64RangeGreaterThan* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Int64RangeGreaterThan& from);
  void MergeFrom(const Int64RangeGreaterThan& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Int64RangeGreaterThan* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 content = 1 [(.validate.rules) = {
  int content_size() const;
  void clear_content();
  static const int kContentFieldNumber = 1;
  ::google::protobuf::int64 content(int index) const;
  void set_content(int index, ::google::protobuf::int64 value);
  void add_content(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      content() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_content();

  // @@protoc_insertion_point(class_scope:pgv.Int64RangeGreaterThan)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > content_;
  mutable int _content_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_int64_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Int64RangeLessThan : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pgv.Int64RangeLessThan) */ {
 public:
  Int64RangeLessThan();
  virtual ~Int64RangeLessThan();

  Int64RangeLessThan(const Int64RangeLessThan& from);

  inline Int64RangeLessThan& operator=(const Int64RangeLessThan& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Int64RangeLessThan(Int64RangeLessThan&& from) noexcept
    : Int64RangeLessThan() {
    *this = ::std::move(from);
  }

  inline Int64RangeLessThan& operator=(Int64RangeLessThan&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Int64RangeLessThan& default_instance();

  static inline const Int64RangeLessThan* internal_default_instance() {
    return reinterpret_cast<const Int64RangeLessThan*>(
               &_Int64RangeLessThan_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Int64RangeLessThan* other);
  friend void swap(Int64RangeLessThan& a, Int64RangeLessThan& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Int64RangeLessThan* New() const PROTOBUF_FINAL { return New(NULL); }

  Int64RangeLessThan* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Int64RangeLessThan& from);
  void MergeFrom(const Int64RangeLessThan& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Int64RangeLessThan* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 content = 1 [(.validate.rules) = {
  int content_size() const;
  void clear_content();
  static const int kContentFieldNumber = 1;
  ::google::protobuf::int64 content(int index) const;
  void set_content(int index, ::google::protobuf::int64 value);
  void add_content(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      content() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_content();

  // @@protoc_insertion_point(class_scope:pgv.Int64RangeLessThan)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > content_;
  mutable int _content_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_int64_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Int64RangeConst : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pgv.Int64RangeConst) */ {
 public:
  Int64RangeConst();
  virtual ~Int64RangeConst();

  Int64RangeConst(const Int64RangeConst& from);

  inline Int64RangeConst& operator=(const Int64RangeConst& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Int64RangeConst(Int64RangeConst&& from) noexcept
    : Int64RangeConst() {
    *this = ::std::move(from);
  }

  inline Int64RangeConst& operator=(Int64RangeConst&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Int64RangeConst& default_instance();

  static inline const Int64RangeConst* internal_default_instance() {
    return reinterpret_cast<const Int64RangeConst*>(
               &_Int64RangeConst_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(Int64RangeConst* other);
  friend void swap(Int64RangeConst& a, Int64RangeConst& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Int64RangeConst* New() const PROTOBUF_FINAL { return New(NULL); }

  Int64RangeConst* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Int64RangeConst& from);
  void MergeFrom(const Int64RangeConst& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Int64RangeConst* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 content = 1 [(.validate.rules) = {
  int content_size() const;
  void clear_content();
  static const int kContentFieldNumber = 1;
  ::google::protobuf::int64 content(int index) const;
  void set_content(int index, ::google::protobuf::int64 value);
  void add_content(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      content() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_content();

  // @@protoc_insertion_point(class_scope:pgv.Int64RangeConst)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > content_;
  mutable int _content_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_int64_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Int64RangeGreaterThan

// repeated int64 content = 1 [(.validate.rules) = {
inline int Int64RangeGreaterThan::content_size() const {
  return content_.size();
}
inline void Int64RangeGreaterThan::clear_content() {
  content_.Clear();
}
inline ::google::protobuf::int64 Int64RangeGreaterThan::content(int index) const {
  // @@protoc_insertion_point(field_get:pgv.Int64RangeGreaterThan.content)
  return content_.Get(index);
}
inline void Int64RangeGreaterThan::set_content(int index, ::google::protobuf::int64 value) {
  content_.Set(index, value);
  // @@protoc_insertion_point(field_set:pgv.Int64RangeGreaterThan.content)
}
inline void Int64RangeGreaterThan::add_content(::google::protobuf::int64 value) {
  content_.Add(value);
  // @@protoc_insertion_point(field_add:pgv.Int64RangeGreaterThan.content)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Int64RangeGreaterThan::content() const {
  // @@protoc_insertion_point(field_list:pgv.Int64RangeGreaterThan.content)
  return content_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Int64RangeGreaterThan::mutable_content() {
  // @@protoc_insertion_point(field_mutable_list:pgv.Int64RangeGreaterThan.content)
  return &content_;
}

// -------------------------------------------------------------------

// Int64RangeLessThan

// repeated int64 content = 1 [(.validate.rules) = {
inline int Int64RangeLessThan::content_size() const {
  return content_.size();
}
inline void Int64RangeLessThan::clear_content() {
  content_.Clear();
}
inline ::google::protobuf::int64 Int64RangeLessThan::content(int index) const {
  // @@protoc_insertion_point(field_get:pgv.Int64RangeLessThan.content)
  return content_.Get(index);
}
inline void Int64RangeLessThan::set_content(int index, ::google::protobuf::int64 value) {
  content_.Set(index, value);
  // @@protoc_insertion_point(field_set:pgv.Int64RangeLessThan.content)
}
inline void Int64RangeLessThan::add_content(::google::protobuf::int64 value) {
  content_.Add(value);
  // @@protoc_insertion_point(field_add:pgv.Int64RangeLessThan.content)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Int64RangeLessThan::content() const {
  // @@protoc_insertion_point(field_list:pgv.Int64RangeLessThan.content)
  return content_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Int64RangeLessThan::mutable_content() {
  // @@protoc_insertion_point(field_mutable_list:pgv.Int64RangeLessThan.content)
  return &content_;
}

// -------------------------------------------------------------------

// Int64RangeConst

// repeated int64 content = 1 [(.validate.rules) = {
inline int Int64RangeConst::content_size() const {
  return content_.size();
}
inline void Int64RangeConst::clear_content() {
  content_.Clear();
}
inline ::google::protobuf::int64 Int64RangeConst::content(int index) const {
  // @@protoc_insertion_point(field_get:pgv.Int64RangeConst.content)
  return content_.Get(index);
}
inline void Int64RangeConst::set_content(int index, ::google::protobuf::int64 value) {
  content_.Set(index, value);
  // @@protoc_insertion_point(field_set:pgv.Int64RangeConst.content)
}
inline void Int64RangeConst::add_content(::google::protobuf::int64 value) {
  content_.Add(value);
  // @@protoc_insertion_point(field_add:pgv.Int64RangeConst.content)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Int64RangeConst::content() const {
  // @@protoc_insertion_point(field_list:pgv.Int64RangeConst.content)
  return content_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Int64RangeConst::mutable_content() {
  // @@protoc_insertion_point(field_mutable_list:pgv.Int64RangeConst.content)
  return &content_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace pgv

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_int64_2eproto__INCLUDED
