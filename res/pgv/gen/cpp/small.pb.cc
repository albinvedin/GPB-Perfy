// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: small.proto

#include "small.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_messages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MessageF_messages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messages_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MessageE_messages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messages_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_MessageB_messages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messages_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_MessageC_messages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messages_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_MessageD_messages_2eproto;
namespace pgv {
class SmallDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Small> _instance;
} _Small_default_instance_;
}  // namespace pgv
static void InitDefaultsSmall_small_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pgv::_Small_default_instance_;
    new (ptr) ::pgv::Small();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pgv::Small::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_Small_small_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsSmall_small_2eproto}, {
      &scc_info_MessageB_messages_2eproto.base,
      &scc_info_MessageC_messages_2eproto.base,
      &scc_info_MessageD_messages_2eproto.base,
      &scc_info_MessageE_messages_2eproto.base,
      &scc_info_MessageF_messages_2eproto.base,}};

void InitDefaults_small_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_Small_small_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_small_2eproto[1];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_small_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_small_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_small_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pgv::Small, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pgv::Small, field1_),
  PROTOBUF_FIELD_OFFSET(::pgv::Small, field2_),
  PROTOBUF_FIELD_OFFSET(::pgv::Small, field3_),
  PROTOBUF_FIELD_OFFSET(::pgv::Small, field4_),
  PROTOBUF_FIELD_OFFSET(::pgv::Small, field5_),
  PROTOBUF_FIELD_OFFSET(::pgv::Small, field6_),
  PROTOBUF_FIELD_OFFSET(::pgv::Small, field7_),
  PROTOBUF_FIELD_OFFSET(::pgv::Small, field8_),
  PROTOBUF_FIELD_OFFSET(::pgv::Small, field9_),
  PROTOBUF_FIELD_OFFSET(::pgv::Small, field10_),
  PROTOBUF_FIELD_OFFSET(::pgv::Small, field31_),
  PROTOBUF_FIELD_OFFSET(::pgv::Small, field32_),
  PROTOBUF_FIELD_OFFSET(::pgv::Small, field41_),
  PROTOBUF_FIELD_OFFSET(::pgv::Small, field42_),
  PROTOBUF_FIELD_OFFSET(::pgv::Small, field43_),
  PROTOBUF_FIELD_OFFSET(::pgv::Small, field44_),
  PROTOBUF_FIELD_OFFSET(::pgv::Small, field45_),
  PROTOBUF_FIELD_OFFSET(::pgv::Small, field51_),
  PROTOBUF_FIELD_OFFSET(::pgv::Small, field101_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::pgv::Small)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::pgv::_Small_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_small_2eproto = {
  {}, AddDescriptors_small_2eproto, "small.proto", schemas,
  file_default_instances, TableStruct_small_2eproto::offsets,
  file_level_metadata_small_2eproto, 1, file_level_enum_descriptors_small_2eproto, file_level_service_descriptors_small_2eproto,
};

const char descriptor_table_protodef_small_2eproto[] =
  "\n\013small.proto\022\003pgv\032\027validate/validate.pr"
  "oto\032\016messages.proto\"\313\004\n\005Small\022\033\n\006field1\030"
  "\001 \001(\rB\013\272\351\300\003\006*\004\030\n \000\022\033\n\006field2\030\002 \001(\rB\013\272\351\300\003"
  "\006*\004\030\n \000\022\033\n\006field3\030\003 \001(\rB\013\272\351\300\003\006*\004\030\n \000\022\033\n\006"
  "field4\030\004 \001(\rB\013\272\351\300\003\006*\004\030\n \000\022\033\n\006field5\030\005 \001("
  "\rB\013\272\351\300\003\006*\004\030\n \000\022\033\n\006field6\030\006 \001(\rB\013\272\351\300\003\006*\004\030"
  "2 \000\022\033\n\006field7\030\007 \001(\rB\013\272\351\300\003\006*\004\0302 \000\022\033\n\006fiel"
  "d8\030\010 \001(\rB\013\272\351\300\003\006*\004\0302 \000\022\033\n\006field9\030\t \001(\rB\013\272"
  "\351\300\003\006*\004\0302 \000\022\034\n\007field10\030\n \001(\rB\013\272\351\300\003\006*\004\0302 \000"
  "\022 \n\007field31\030\037 \001(\004B\017\272\351\300\003\n2\010\030\200\362\213\250\t \024\022 \n\007fi"
  "eld32\030  \001(\004B\017\272\351\300\003\n2\010\030\200\362\213\250\t \024\022\036\n\007field41\030"
  ") \001(\0132\r.pgv.MessageB\022\036\n\007field42\030* \001(\0132\r."
  "pgv.MessageC\022\036\n\007field43\030+ \001(\0132\r.pgv.Mess"
  "ageD\022\036\n\007field44\030, \001(\0132\r.pgv.MessageE\022\036\n\007"
  "field45\030- \001(\0132\r.pgv.MessageF\022\032\n\007field51\030"
  "3 \001(\014B\t\272\351\300\003\004z\002\030\n\022\037\n\010field101\030e \001(\021B\r\272\351\300\003"
  "\010:\006\030\310\001 \307\001b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_small_2eproto = {
  false, InitDefaults_small_2eproto, 
  descriptor_table_protodef_small_2eproto,
  "small.proto", &assign_descriptors_table_small_2eproto, 657,
};

void AddDescriptors_small_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[2] =
  {
    ::AddDescriptors_validate_2fvalidate_2eproto,
    ::AddDescriptors_messages_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_small_2eproto, deps, 2);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_small_2eproto = []() { AddDescriptors_small_2eproto(); return true; }();
namespace pgv {

// ===================================================================

void Small::InitAsDefaultInstance() {
  ::pgv::_Small_default_instance_._instance.get_mutable()->field41_ = const_cast< ::pgv::MessageB*>(
      ::pgv::MessageB::internal_default_instance());
  ::pgv::_Small_default_instance_._instance.get_mutable()->field42_ = const_cast< ::pgv::MessageC*>(
      ::pgv::MessageC::internal_default_instance());
  ::pgv::_Small_default_instance_._instance.get_mutable()->field43_ = const_cast< ::pgv::MessageD*>(
      ::pgv::MessageD::internal_default_instance());
  ::pgv::_Small_default_instance_._instance.get_mutable()->field44_ = const_cast< ::pgv::MessageE*>(
      ::pgv::MessageE::internal_default_instance());
  ::pgv::_Small_default_instance_._instance.get_mutable()->field45_ = const_cast< ::pgv::MessageF*>(
      ::pgv::MessageF::internal_default_instance());
}
class Small::HasBitSetters {
 public:
  static const ::pgv::MessageB& field41(const Small* msg);
  static const ::pgv::MessageC& field42(const Small* msg);
  static const ::pgv::MessageD& field43(const Small* msg);
  static const ::pgv::MessageE& field44(const Small* msg);
  static const ::pgv::MessageF& field45(const Small* msg);
};

const ::pgv::MessageB&
Small::HasBitSetters::field41(const Small* msg) {
  return *msg->field41_;
}
const ::pgv::MessageC&
Small::HasBitSetters::field42(const Small* msg) {
  return *msg->field42_;
}
const ::pgv::MessageD&
Small::HasBitSetters::field43(const Small* msg) {
  return *msg->field43_;
}
const ::pgv::MessageE&
Small::HasBitSetters::field44(const Small* msg) {
  return *msg->field44_;
}
const ::pgv::MessageF&
Small::HasBitSetters::field45(const Small* msg) {
  return *msg->field45_;
}
void Small::clear_field41() {
  if (GetArenaNoVirtual() == nullptr && field41_ != nullptr) {
    delete field41_;
  }
  field41_ = nullptr;
}
void Small::clear_field42() {
  if (GetArenaNoVirtual() == nullptr && field42_ != nullptr) {
    delete field42_;
  }
  field42_ = nullptr;
}
void Small::clear_field43() {
  if (GetArenaNoVirtual() == nullptr && field43_ != nullptr) {
    delete field43_;
  }
  field43_ = nullptr;
}
void Small::clear_field44() {
  if (GetArenaNoVirtual() == nullptr && field44_ != nullptr) {
    delete field44_;
  }
  field44_ = nullptr;
}
void Small::clear_field45() {
  if (GetArenaNoVirtual() == nullptr && field45_ != nullptr) {
    delete field45_;
  }
  field45_ = nullptr;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Small::kField1FieldNumber;
const int Small::kField2FieldNumber;
const int Small::kField3FieldNumber;
const int Small::kField4FieldNumber;
const int Small::kField5FieldNumber;
const int Small::kField6FieldNumber;
const int Small::kField7FieldNumber;
const int Small::kField8FieldNumber;
const int Small::kField9FieldNumber;
const int Small::kField10FieldNumber;
const int Small::kField31FieldNumber;
const int Small::kField32FieldNumber;
const int Small::kField41FieldNumber;
const int Small::kField42FieldNumber;
const int Small::kField43FieldNumber;
const int Small::kField44FieldNumber;
const int Small::kField45FieldNumber;
const int Small::kField51FieldNumber;
const int Small::kField101FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Small::Small()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pgv.Small)
}
Small::Small(const Small& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  field51_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.field51().size() > 0) {
    field51_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field51_);
  }
  if (from.has_field41()) {
    field41_ = new ::pgv::MessageB(*from.field41_);
  } else {
    field41_ = nullptr;
  }
  if (from.has_field42()) {
    field42_ = new ::pgv::MessageC(*from.field42_);
  } else {
    field42_ = nullptr;
  }
  if (from.has_field43()) {
    field43_ = new ::pgv::MessageD(*from.field43_);
  } else {
    field43_ = nullptr;
  }
  if (from.has_field44()) {
    field44_ = new ::pgv::MessageE(*from.field44_);
  } else {
    field44_ = nullptr;
  }
  if (from.has_field45()) {
    field45_ = new ::pgv::MessageF(*from.field45_);
  } else {
    field45_ = nullptr;
  }
  ::memcpy(&field1_, &from.field1_,
    static_cast<size_t>(reinterpret_cast<char*>(&field32_) -
    reinterpret_cast<char*>(&field1_)) + sizeof(field32_));
  // @@protoc_insertion_point(copy_constructor:pgv.Small)
}

void Small::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_Small_small_2eproto.base);
  field51_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&field41_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&field32_) -
      reinterpret_cast<char*>(&field41_)) + sizeof(field32_));
}

Small::~Small() {
  // @@protoc_insertion_point(destructor:pgv.Small)
  SharedDtor();
}

void Small::SharedDtor() {
  field51_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete field41_;
  if (this != internal_default_instance()) delete field42_;
  if (this != internal_default_instance()) delete field43_;
  if (this != internal_default_instance()) delete field44_;
  if (this != internal_default_instance()) delete field45_;
}

void Small::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Small& Small::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_Small_small_2eproto.base);
  return *internal_default_instance();
}


void Small::Clear() {
// @@protoc_insertion_point(message_clear_start:pgv.Small)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  field51_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == nullptr && field41_ != nullptr) {
    delete field41_;
  }
  field41_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && field42_ != nullptr) {
    delete field42_;
  }
  field42_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && field43_ != nullptr) {
    delete field43_;
  }
  field43_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && field44_ != nullptr) {
    delete field44_;
  }
  field44_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && field45_ != nullptr) {
    delete field45_;
  }
  field45_ = nullptr;
  ::memset(&field1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&field32_) -
      reinterpret_cast<char*>(&field1_)) + sizeof(field32_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* Small::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<Small*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 field1 = 1 [(.validate.rules) = {
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_field1(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 field2 = 2 [(.validate.rules) = {
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_field2(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 field3 = 3 [(.validate.rules) = {
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_field3(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 field4 = 4 [(.validate.rules) = {
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_field4(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 field5 = 5 [(.validate.rules) = {
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_field5(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 field6 = 6 [(.validate.rules) = {
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 48) goto handle_unusual;
        msg->set_field6(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 field7 = 7 [(.validate.rules) = {
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 56) goto handle_unusual;
        msg->set_field7(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 field8 = 8 [(.validate.rules) = {
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) != 64) goto handle_unusual;
        msg->set_field8(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 field9 = 9 [(.validate.rules) = {
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) != 72) goto handle_unusual;
        msg->set_field9(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 field10 = 10 [(.validate.rules) = {
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) != 80) goto handle_unusual;
        msg->set_field10(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint64 field31 = 31 [(.validate.rules) = {
      case 31: {
        if (static_cast<::google::protobuf::uint8>(tag) != 248) goto handle_unusual;
        msg->set_field31(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint64 field32 = 32 [(.validate.rules) = {
      case 32: {
        if (static_cast<::google::protobuf::uint8>(tag) != 0) goto handle_unusual;
        msg->set_field32(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .pgv.MessageB field41 = 41;
      case 41: {
        if (static_cast<::google::protobuf::uint8>(tag) != 74) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::pgv::MessageB::_InternalParse;
        object = msg->mutable_field41();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .pgv.MessageC field42 = 42;
      case 42: {
        if (static_cast<::google::protobuf::uint8>(tag) != 82) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::pgv::MessageC::_InternalParse;
        object = msg->mutable_field42();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .pgv.MessageD field43 = 43;
      case 43: {
        if (static_cast<::google::protobuf::uint8>(tag) != 90) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::pgv::MessageD::_InternalParse;
        object = msg->mutable_field43();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .pgv.MessageE field44 = 44;
      case 44: {
        if (static_cast<::google::protobuf::uint8>(tag) != 98) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::pgv::MessageE::_InternalParse;
        object = msg->mutable_field44();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .pgv.MessageF field45 = 45;
      case 45: {
        if (static_cast<::google::protobuf::uint8>(tag) != 106) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::pgv::MessageF::_InternalParse;
        object = msg->mutable_field45();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // bytes field51 = 51 [(.validate.rules) = {
      case 51: {
        if (static_cast<::google::protobuf::uint8>(tag) != 154) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        object = msg->mutable_field51();
        if (size > end - ptr + ::google::protobuf::internal::ParseContext::kSlopBytes) {
          parser_till_end = ::google::protobuf::internal::GreedyStringParser;
          goto string_till_end;
        }
        GOOGLE_PROTOBUF_PARSER_ASSERT(::google::protobuf::internal::StringCheck(ptr, size, ctx));
        ::google::protobuf::internal::InlineGreedyStringParser(object, ptr, size, ctx);
        ptr += size;
        break;
      }
      // sint32 field101 = 101 [(.validate.rules) = {
      case 101: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_field101(::google::protobuf::internal::ReadVarintZigZag32(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
string_till_end:
  static_cast<::std::string*>(object)->clear();
  static_cast<::std::string*>(object)->reserve(size);
  goto len_delim_till_end;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool Small::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pgv.Small)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 field1 = 1 [(.validate.rules) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &field1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 field2 = 2 [(.validate.rules) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &field2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 field3 = 3 [(.validate.rules) = {
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &field3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 field4 = 4 [(.validate.rules) = {
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &field4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 field5 = 5 [(.validate.rules) = {
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &field5_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 field6 = 6 [(.validate.rules) = {
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (48 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &field6_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 field7 = 7 [(.validate.rules) = {
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (56 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &field7_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 field8 = 8 [(.validate.rules) = {
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (64 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &field8_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 field9 = 9 [(.validate.rules) = {
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (72 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &field9_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 field10 = 10 [(.validate.rules) = {
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (80 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &field10_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 field31 = 31 [(.validate.rules) = {
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (248 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &field31_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 field32 = 32 [(.validate.rules) = {
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (256 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &field32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pgv.MessageB field41 = 41;
      case 41: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (330 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_field41()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pgv.MessageC field42 = 42;
      case 42: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (338 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_field42()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pgv.MessageD field43 = 43;
      case 43: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (346 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_field43()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pgv.MessageE field44 = 44;
      case 44: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (354 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_field44()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pgv.MessageF field45 = 45;
      case 45: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (362 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_field45()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes field51 = 51 [(.validate.rules) = {
      case 51: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (410 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_field51()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 field101 = 101 [(.validate.rules) = {
      case 101: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (808 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &field101_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pgv.Small)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pgv.Small)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void Small::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pgv.Small)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 field1 = 1 [(.validate.rules) = {
  if (this->field1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->field1(), output);
  }

  // uint32 field2 = 2 [(.validate.rules) = {
  if (this->field2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->field2(), output);
  }

  // uint32 field3 = 3 [(.validate.rules) = {
  if (this->field3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->field3(), output);
  }

  // uint32 field4 = 4 [(.validate.rules) = {
  if (this->field4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->field4(), output);
  }

  // uint32 field5 = 5 [(.validate.rules) = {
  if (this->field5() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->field5(), output);
  }

  // uint32 field6 = 6 [(.validate.rules) = {
  if (this->field6() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->field6(), output);
  }

  // uint32 field7 = 7 [(.validate.rules) = {
  if (this->field7() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->field7(), output);
  }

  // uint32 field8 = 8 [(.validate.rules) = {
  if (this->field8() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->field8(), output);
  }

  // uint32 field9 = 9 [(.validate.rules) = {
  if (this->field9() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->field9(), output);
  }

  // uint32 field10 = 10 [(.validate.rules) = {
  if (this->field10() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->field10(), output);
  }

  // uint64 field31 = 31 [(.validate.rules) = {
  if (this->field31() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(31, this->field31(), output);
  }

  // uint64 field32 = 32 [(.validate.rules) = {
  if (this->field32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(32, this->field32(), output);
  }

  // .pgv.MessageB field41 = 41;
  if (this->has_field41()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      41, HasBitSetters::field41(this), output);
  }

  // .pgv.MessageC field42 = 42;
  if (this->has_field42()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      42, HasBitSetters::field42(this), output);
  }

  // .pgv.MessageD field43 = 43;
  if (this->has_field43()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      43, HasBitSetters::field43(this), output);
  }

  // .pgv.MessageE field44 = 44;
  if (this->has_field44()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      44, HasBitSetters::field44(this), output);
  }

  // .pgv.MessageF field45 = 45;
  if (this->has_field45()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      45, HasBitSetters::field45(this), output);
  }

  // bytes field51 = 51 [(.validate.rules) = {
  if (this->field51().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      51, this->field51(), output);
  }

  // sint32 field101 = 101 [(.validate.rules) = {
  if (this->field101() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(101, this->field101(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pgv.Small)
}

::google::protobuf::uint8* Small::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pgv.Small)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 field1 = 1 [(.validate.rules) = {
  if (this->field1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->field1(), target);
  }

  // uint32 field2 = 2 [(.validate.rules) = {
  if (this->field2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->field2(), target);
  }

  // uint32 field3 = 3 [(.validate.rules) = {
  if (this->field3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->field3(), target);
  }

  // uint32 field4 = 4 [(.validate.rules) = {
  if (this->field4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->field4(), target);
  }

  // uint32 field5 = 5 [(.validate.rules) = {
  if (this->field5() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->field5(), target);
  }

  // uint32 field6 = 6 [(.validate.rules) = {
  if (this->field6() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->field6(), target);
  }

  // uint32 field7 = 7 [(.validate.rules) = {
  if (this->field7() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->field7(), target);
  }

  // uint32 field8 = 8 [(.validate.rules) = {
  if (this->field8() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->field8(), target);
  }

  // uint32 field9 = 9 [(.validate.rules) = {
  if (this->field9() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->field9(), target);
  }

  // uint32 field10 = 10 [(.validate.rules) = {
  if (this->field10() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->field10(), target);
  }

  // uint64 field31 = 31 [(.validate.rules) = {
  if (this->field31() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(31, this->field31(), target);
  }

  // uint64 field32 = 32 [(.validate.rules) = {
  if (this->field32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(32, this->field32(), target);
  }

  // .pgv.MessageB field41 = 41;
  if (this->has_field41()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        41, HasBitSetters::field41(this), target);
  }

  // .pgv.MessageC field42 = 42;
  if (this->has_field42()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        42, HasBitSetters::field42(this), target);
  }

  // .pgv.MessageD field43 = 43;
  if (this->has_field43()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        43, HasBitSetters::field43(this), target);
  }

  // .pgv.MessageE field44 = 44;
  if (this->has_field44()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        44, HasBitSetters::field44(this), target);
  }

  // .pgv.MessageF field45 = 45;
  if (this->has_field45()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        45, HasBitSetters::field45(this), target);
  }

  // bytes field51 = 51 [(.validate.rules) = {
  if (this->field51().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        51, this->field51(), target);
  }

  // sint32 field101 = 101 [(.validate.rules) = {
  if (this->field101() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(101, this->field101(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pgv.Small)
  return target;
}

size_t Small::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pgv.Small)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes field51 = 51 [(.validate.rules) = {
  if (this->field51().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->field51());
  }

  // .pgv.MessageB field41 = 41;
  if (this->has_field41()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *field41_);
  }

  // .pgv.MessageC field42 = 42;
  if (this->has_field42()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *field42_);
  }

  // .pgv.MessageD field43 = 43;
  if (this->has_field43()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *field43_);
  }

  // .pgv.MessageE field44 = 44;
  if (this->has_field44()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *field44_);
  }

  // .pgv.MessageF field45 = 45;
  if (this->has_field45()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *field45_);
  }

  // uint32 field1 = 1 [(.validate.rules) = {
  if (this->field1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->field1());
  }

  // uint32 field2 = 2 [(.validate.rules) = {
  if (this->field2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->field2());
  }

  // uint32 field3 = 3 [(.validate.rules) = {
  if (this->field3() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->field3());
  }

  // uint32 field4 = 4 [(.validate.rules) = {
  if (this->field4() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->field4());
  }

  // uint32 field5 = 5 [(.validate.rules) = {
  if (this->field5() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->field5());
  }

  // uint32 field6 = 6 [(.validate.rules) = {
  if (this->field6() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->field6());
  }

  // uint32 field7 = 7 [(.validate.rules) = {
  if (this->field7() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->field7());
  }

  // uint32 field8 = 8 [(.validate.rules) = {
  if (this->field8() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->field8());
  }

  // uint32 field9 = 9 [(.validate.rules) = {
  if (this->field9() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->field9());
  }

  // uint32 field10 = 10 [(.validate.rules) = {
  if (this->field10() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->field10());
  }

  // sint32 field101 = 101 [(.validate.rules) = {
  if (this->field101() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->field101());
  }

  // uint64 field31 = 31 [(.validate.rules) = {
  if (this->field31() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->field31());
  }

  // uint64 field32 = 32 [(.validate.rules) = {
  if (this->field32() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->field32());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Small::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pgv.Small)
  GOOGLE_DCHECK_NE(&from, this);
  const Small* source =
      ::google::protobuf::DynamicCastToGenerated<Small>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pgv.Small)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pgv.Small)
    MergeFrom(*source);
  }
}

void Small::MergeFrom(const Small& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pgv.Small)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.field51().size() > 0) {

    field51_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.field51_);
  }
  if (from.has_field41()) {
    mutable_field41()->::pgv::MessageB::MergeFrom(from.field41());
  }
  if (from.has_field42()) {
    mutable_field42()->::pgv::MessageC::MergeFrom(from.field42());
  }
  if (from.has_field43()) {
    mutable_field43()->::pgv::MessageD::MergeFrom(from.field43());
  }
  if (from.has_field44()) {
    mutable_field44()->::pgv::MessageE::MergeFrom(from.field44());
  }
  if (from.has_field45()) {
    mutable_field45()->::pgv::MessageF::MergeFrom(from.field45());
  }
  if (from.field1() != 0) {
    set_field1(from.field1());
  }
  if (from.field2() != 0) {
    set_field2(from.field2());
  }
  if (from.field3() != 0) {
    set_field3(from.field3());
  }
  if (from.field4() != 0) {
    set_field4(from.field4());
  }
  if (from.field5() != 0) {
    set_field5(from.field5());
  }
  if (from.field6() != 0) {
    set_field6(from.field6());
  }
  if (from.field7() != 0) {
    set_field7(from.field7());
  }
  if (from.field8() != 0) {
    set_field8(from.field8());
  }
  if (from.field9() != 0) {
    set_field9(from.field9());
  }
  if (from.field10() != 0) {
    set_field10(from.field10());
  }
  if (from.field101() != 0) {
    set_field101(from.field101());
  }
  if (from.field31() != 0) {
    set_field31(from.field31());
  }
  if (from.field32() != 0) {
    set_field32(from.field32());
  }
}

void Small::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pgv.Small)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Small::CopyFrom(const Small& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pgv.Small)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Small::IsInitialized() const {
  return true;
}

void Small::Swap(Small* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Small::InternalSwap(Small* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  field51_.Swap(&other->field51_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(field41_, other->field41_);
  swap(field42_, other->field42_);
  swap(field43_, other->field43_);
  swap(field44_, other->field44_);
  swap(field45_, other->field45_);
  swap(field1_, other->field1_);
  swap(field2_, other->field2_);
  swap(field3_, other->field3_);
  swap(field4_, other->field4_);
  swap(field5_, other->field5_);
  swap(field6_, other->field6_);
  swap(field7_, other->field7_);
  swap(field8_, other->field8_);
  swap(field9_, other->field9_);
  swap(field10_, other->field10_);
  swap(field101_, other->field101_);
  swap(field31_, other->field31_);
  swap(field32_, other->field32_);
}

::google::protobuf::Metadata Small::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_small_2eproto);
  return ::file_level_metadata_small_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace pgv
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::pgv::Small* Arena::CreateMaybeMessage< ::pgv::Small >(Arena* arena) {
  return Arena::CreateInternal< ::pgv::Small >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
