// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: enum.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "enum.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pgv {
class EnumRangeConstDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnumRangeConst>
     _instance;
} _EnumRangeConst_default_instance_;
class EnumRangeDefinedOnlyDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<EnumRangeDefinedOnly>
     _instance;
} _EnumRangeDefinedOnly_default_instance_;

namespace protobuf_enum_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnumRangeConst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnumRangeConst, content_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnumRangeDefinedOnly, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnumRangeDefinedOnly, content_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(EnumRangeConst)},
  { 6, -1, sizeof(EnumRangeDefinedOnly)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_EnumRangeConst_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EnumRangeDefinedOnly_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "enum.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::validate::protobuf_validate_2eproto::InitDefaults();
  _EnumRangeConst_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnumRangeConst_default_instance_);_EnumRangeDefinedOnly_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_EnumRangeDefinedOnly_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\nenum.proto\022\003pgv\032\027validate/validate.pro"
      "to\"h\n\016EnumRangeConst\0229\n\007content\030\001 \003(\0162\027."
      "pgv.EnumRangeConst.SexB\017\272\351\300\003\n\222\001\007\"\005\202\001\002\010\000\""
      "\033\n\003Sex\022\010\n\004MALE\020\000\022\n\n\006FEMALE\020\001\"t\n\024EnumRang"
      "eDefinedOnly\022\?\n\007content\030\001 \003(\0162\035.pgv.Enum"
      "RangeDefinedOnly.SexB\017\272\351\300\003\n\222\001\007\"\005\202\001\002\020\001\"\033\n"
      "\003Sex\022\010\n\004MALE\020\000\022\n\n\006FEMALE\020\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 274);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "enum.proto", &protobuf_RegisterTypes);
  ::validate::protobuf_validate_2eproto::AddDescriptors();
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_enum_2eproto

const ::google::protobuf::EnumDescriptor* EnumRangeConst_Sex_descriptor() {
  protobuf_enum_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_enum_2eproto::file_level_enum_descriptors[0];
}
bool EnumRangeConst_Sex_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EnumRangeConst_Sex EnumRangeConst::MALE;
const EnumRangeConst_Sex EnumRangeConst::FEMALE;
const EnumRangeConst_Sex EnumRangeConst::Sex_MIN;
const EnumRangeConst_Sex EnumRangeConst::Sex_MAX;
const int EnumRangeConst::Sex_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EnumRangeDefinedOnly_Sex_descriptor() {
  protobuf_enum_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_enum_2eproto::file_level_enum_descriptors[1];
}
bool EnumRangeDefinedOnly_Sex_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const EnumRangeDefinedOnly_Sex EnumRangeDefinedOnly::MALE;
const EnumRangeDefinedOnly_Sex EnumRangeDefinedOnly::FEMALE;
const EnumRangeDefinedOnly_Sex EnumRangeDefinedOnly::Sex_MIN;
const EnumRangeDefinedOnly_Sex EnumRangeDefinedOnly::Sex_MAX;
const int EnumRangeDefinedOnly::Sex_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnumRangeConst::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnumRangeConst::EnumRangeConst()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_enum_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pgv.EnumRangeConst)
}
EnumRangeConst::EnumRangeConst(const EnumRangeConst& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      content_(from.content_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pgv.EnumRangeConst)
}

void EnumRangeConst::SharedCtor() {
  _cached_size_ = 0;
}

EnumRangeConst::~EnumRangeConst() {
  // @@protoc_insertion_point(destructor:pgv.EnumRangeConst)
  SharedDtor();
}

void EnumRangeConst::SharedDtor() {
}

void EnumRangeConst::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnumRangeConst::descriptor() {
  protobuf_enum_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_enum_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnumRangeConst& EnumRangeConst::default_instance() {
  protobuf_enum_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnumRangeConst* EnumRangeConst::New(::google::protobuf::Arena* arena) const {
  EnumRangeConst* n = new EnumRangeConst;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnumRangeConst::Clear() {
// @@protoc_insertion_point(message_clear_start:pgv.EnumRangeConst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.Clear();
  _internal_metadata_.Clear();
}

bool EnumRangeConst::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pgv.EnumRangeConst)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pgv.EnumRangeConst.Sex content = 1 [(.validate.rules) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(static_cast<int>(length));
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_content(static_cast< ::pgv::EnumRangeConst_Sex >(value));
          }
          input->PopLimit(limit);
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_content(static_cast< ::pgv::EnumRangeConst_Sex >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pgv.EnumRangeConst)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pgv.EnumRangeConst)
  return false;
#undef DO_
}

void EnumRangeConst::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pgv.EnumRangeConst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pgv.EnumRangeConst.Sex content = 1 [(.validate.rules) = {
  if (this->content_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(
        static_cast< ::google::protobuf::uint32>(_content_cached_byte_size_));
  }
  for (int i = 0, n = this->content_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->content(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pgv.EnumRangeConst)
}

::google::protobuf::uint8* EnumRangeConst::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pgv.EnumRangeConst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pgv.EnumRangeConst.Sex content = 1 [(.validate.rules) = {
  if (this->content_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(      static_cast< ::google::protobuf::uint32>(
            _content_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->content_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pgv.EnumRangeConst)
  return target;
}

size_t EnumRangeConst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pgv.EnumRangeConst)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .pgv.EnumRangeConst.Sex content = 1 [(.validate.rules) = {
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->content_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->content(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _content_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnumRangeConst::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pgv.EnumRangeConst)
  GOOGLE_DCHECK_NE(&from, this);
  const EnumRangeConst* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnumRangeConst>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pgv.EnumRangeConst)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pgv.EnumRangeConst)
    MergeFrom(*source);
  }
}

void EnumRangeConst::MergeFrom(const EnumRangeConst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pgv.EnumRangeConst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  content_.MergeFrom(from.content_);
}

void EnumRangeConst::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pgv.EnumRangeConst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnumRangeConst::CopyFrom(const EnumRangeConst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pgv.EnumRangeConst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnumRangeConst::IsInitialized() const {
  return true;
}

void EnumRangeConst::Swap(EnumRangeConst* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnumRangeConst::InternalSwap(EnumRangeConst* other) {
  using std::swap;
  content_.InternalSwap(&other->content_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnumRangeConst::GetMetadata() const {
  protobuf_enum_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_enum_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnumRangeConst

// repeated .pgv.EnumRangeConst.Sex content = 1 [(.validate.rules) = {
int EnumRangeConst::content_size() const {
  return content_.size();
}
void EnumRangeConst::clear_content() {
  content_.Clear();
}
::pgv::EnumRangeConst_Sex EnumRangeConst::content(int index) const {
  // @@protoc_insertion_point(field_get:pgv.EnumRangeConst.content)
  return static_cast< ::pgv::EnumRangeConst_Sex >(content_.Get(index));
}
void EnumRangeConst::set_content(int index, ::pgv::EnumRangeConst_Sex value) {
  content_.Set(index, value);
  // @@protoc_insertion_point(field_set:pgv.EnumRangeConst.content)
}
void EnumRangeConst::add_content(::pgv::EnumRangeConst_Sex value) {
  content_.Add(value);
  // @@protoc_insertion_point(field_add:pgv.EnumRangeConst.content)
}
const ::google::protobuf::RepeatedField<int>&
EnumRangeConst::content() const {
  // @@protoc_insertion_point(field_list:pgv.EnumRangeConst.content)
  return content_;
}
::google::protobuf::RepeatedField<int>*
EnumRangeConst::mutable_content() {
  // @@protoc_insertion_point(field_mutable_list:pgv.EnumRangeConst.content)
  return &content_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnumRangeDefinedOnly::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnumRangeDefinedOnly::EnumRangeDefinedOnly()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_enum_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:pgv.EnumRangeDefinedOnly)
}
EnumRangeDefinedOnly::EnumRangeDefinedOnly(const EnumRangeDefinedOnly& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      content_(from.content_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pgv.EnumRangeDefinedOnly)
}

void EnumRangeDefinedOnly::SharedCtor() {
  _cached_size_ = 0;
}

EnumRangeDefinedOnly::~EnumRangeDefinedOnly() {
  // @@protoc_insertion_point(destructor:pgv.EnumRangeDefinedOnly)
  SharedDtor();
}

void EnumRangeDefinedOnly::SharedDtor() {
}

void EnumRangeDefinedOnly::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnumRangeDefinedOnly::descriptor() {
  protobuf_enum_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_enum_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EnumRangeDefinedOnly& EnumRangeDefinedOnly::default_instance() {
  protobuf_enum_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnumRangeDefinedOnly* EnumRangeDefinedOnly::New(::google::protobuf::Arena* arena) const {
  EnumRangeDefinedOnly* n = new EnumRangeDefinedOnly;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnumRangeDefinedOnly::Clear() {
// @@protoc_insertion_point(message_clear_start:pgv.EnumRangeDefinedOnly)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  content_.Clear();
  _internal_metadata_.Clear();
}

bool EnumRangeDefinedOnly::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pgv.EnumRangeDefinedOnly)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pgv.EnumRangeDefinedOnly.Sex content = 1 [(.validate.rules) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(static_cast<int>(length));
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_content(static_cast< ::pgv::EnumRangeDefinedOnly_Sex >(value));
          }
          input->PopLimit(limit);
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_content(static_cast< ::pgv::EnumRangeDefinedOnly_Sex >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pgv.EnumRangeDefinedOnly)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pgv.EnumRangeDefinedOnly)
  return false;
#undef DO_
}

void EnumRangeDefinedOnly::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pgv.EnumRangeDefinedOnly)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pgv.EnumRangeDefinedOnly.Sex content = 1 [(.validate.rules) = {
  if (this->content_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(
        static_cast< ::google::protobuf::uint32>(_content_cached_byte_size_));
  }
  for (int i = 0, n = this->content_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->content(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:pgv.EnumRangeDefinedOnly)
}

::google::protobuf::uint8* EnumRangeDefinedOnly::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:pgv.EnumRangeDefinedOnly)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .pgv.EnumRangeDefinedOnly.Sex content = 1 [(.validate.rules) = {
  if (this->content_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(      static_cast< ::google::protobuf::uint32>(
            _content_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->content_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pgv.EnumRangeDefinedOnly)
  return target;
}

size_t EnumRangeDefinedOnly::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pgv.EnumRangeDefinedOnly)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .pgv.EnumRangeDefinedOnly.Sex content = 1 [(.validate.rules) = {
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->content_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->content(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _content_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnumRangeDefinedOnly::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pgv.EnumRangeDefinedOnly)
  GOOGLE_DCHECK_NE(&from, this);
  const EnumRangeDefinedOnly* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnumRangeDefinedOnly>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pgv.EnumRangeDefinedOnly)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pgv.EnumRangeDefinedOnly)
    MergeFrom(*source);
  }
}

void EnumRangeDefinedOnly::MergeFrom(const EnumRangeDefinedOnly& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pgv.EnumRangeDefinedOnly)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  content_.MergeFrom(from.content_);
}

void EnumRangeDefinedOnly::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pgv.EnumRangeDefinedOnly)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnumRangeDefinedOnly::CopyFrom(const EnumRangeDefinedOnly& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pgv.EnumRangeDefinedOnly)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnumRangeDefinedOnly::IsInitialized() const {
  return true;
}

void EnumRangeDefinedOnly::Swap(EnumRangeDefinedOnly* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnumRangeDefinedOnly::InternalSwap(EnumRangeDefinedOnly* other) {
  using std::swap;
  content_.InternalSwap(&other->content_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnumRangeDefinedOnly::GetMetadata() const {
  protobuf_enum_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_enum_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnumRangeDefinedOnly

// repeated .pgv.EnumRangeDefinedOnly.Sex content = 1 [(.validate.rules) = {
int EnumRangeDefinedOnly::content_size() const {
  return content_.size();
}
void EnumRangeDefinedOnly::clear_content() {
  content_.Clear();
}
::pgv::EnumRangeDefinedOnly_Sex EnumRangeDefinedOnly::content(int index) const {
  // @@protoc_insertion_point(field_get:pgv.EnumRangeDefinedOnly.content)
  return static_cast< ::pgv::EnumRangeDefinedOnly_Sex >(content_.Get(index));
}
void EnumRangeDefinedOnly::set_content(int index, ::pgv::EnumRangeDefinedOnly_Sex value) {
  content_.Set(index, value);
  // @@protoc_insertion_point(field_set:pgv.EnumRangeDefinedOnly.content)
}
void EnumRangeDefinedOnly::add_content(::pgv::EnumRangeDefinedOnly_Sex value) {
  content_.Add(value);
  // @@protoc_insertion_point(field_add:pgv.EnumRangeDefinedOnly.content)
}
const ::google::protobuf::RepeatedField<int>&
EnumRangeDefinedOnly::content() const {
  // @@protoc_insertion_point(field_list:pgv.EnumRangeDefinedOnly.content)
  return content_;
}
::google::protobuf::RepeatedField<int>*
EnumRangeDefinedOnly::mutable_content() {
  // @@protoc_insertion_point(field_mutable_list:pgv.EnumRangeDefinedOnly.content)
  return &content_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace pgv

// @@protoc_insertion_point(global_scope)
