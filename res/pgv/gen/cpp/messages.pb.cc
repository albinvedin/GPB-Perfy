// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages.proto

#include "messages.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_messages_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MessageF_messages_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_messages_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MessageE_messages_2eproto;
namespace pgv {
class MessageBDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MessageB> _instance;
} _MessageB_default_instance_;
class MessageCDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MessageC> _instance;
} _MessageC_default_instance_;
class MessageDDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MessageD> _instance;
} _MessageD_default_instance_;
class MessageEDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MessageE> _instance;
} _MessageE_default_instance_;
class MessageFDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MessageF> _instance;
} _MessageF_default_instance_;
}  // namespace pgv
static void InitDefaultsMessageB_messages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pgv::_MessageB_default_instance_;
    new (ptr) ::pgv::MessageB();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pgv::MessageB::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_MessageB_messages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsMessageB_messages_2eproto}, {
      &scc_info_MessageE_messages_2eproto.base,
      &scc_info_MessageF_messages_2eproto.base,}};

static void InitDefaultsMessageC_messages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pgv::_MessageC_default_instance_;
    new (ptr) ::pgv::MessageC();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pgv::MessageC::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_MessageC_messages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsMessageC_messages_2eproto}, {
      &scc_info_MessageE_messages_2eproto.base,
      &scc_info_MessageF_messages_2eproto.base,}};

static void InitDefaultsMessageD_messages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pgv::_MessageD_default_instance_;
    new (ptr) ::pgv::MessageD();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pgv::MessageD::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_MessageD_messages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsMessageD_messages_2eproto}, {
      &scc_info_MessageE_messages_2eproto.base,
      &scc_info_MessageF_messages_2eproto.base,}};

static void InitDefaultsMessageE_messages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pgv::_MessageE_default_instance_;
    new (ptr) ::pgv::MessageE();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pgv::MessageE::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MessageE_messages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMessageE_messages_2eproto}, {
      &scc_info_MessageF_messages_2eproto.base,}};

static void InitDefaultsMessageF_messages_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pgv::_MessageF_default_instance_;
    new (ptr) ::pgv::MessageF();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pgv::MessageF::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MessageF_messages_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMessageF_messages_2eproto}, {}};

void InitDefaults_messages_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_MessageB_messages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MessageC_messages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MessageD_messages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MessageE_messages_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MessageF_messages_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_messages_2eproto[5];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_messages_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_messages_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_messages_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pgv::MessageB, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pgv::MessageB, field1_),
  PROTOBUF_FIELD_OFFSET(::pgv::MessageB, field2_),
  PROTOBUF_FIELD_OFFSET(::pgv::MessageB, field3_),
  PROTOBUF_FIELD_OFFSET(::pgv::MessageB, field4_),
  PROTOBUF_FIELD_OFFSET(::pgv::MessageB, field5_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pgv::MessageC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pgv::MessageC, field1_),
  PROTOBUF_FIELD_OFFSET(::pgv::MessageC, field2_),
  PROTOBUF_FIELD_OFFSET(::pgv::MessageC, field3_),
  PROTOBUF_FIELD_OFFSET(::pgv::MessageC, field4_),
  PROTOBUF_FIELD_OFFSET(::pgv::MessageC, field5_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pgv::MessageD, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pgv::MessageD, field1_),
  PROTOBUF_FIELD_OFFSET(::pgv::MessageD, field2_),
  PROTOBUF_FIELD_OFFSET(::pgv::MessageD, field3_),
  PROTOBUF_FIELD_OFFSET(::pgv::MessageD, field4_),
  PROTOBUF_FIELD_OFFSET(::pgv::MessageD, field5_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pgv::MessageE, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pgv::MessageE, field1_),
  PROTOBUF_FIELD_OFFSET(::pgv::MessageE, field2_),
  PROTOBUF_FIELD_OFFSET(::pgv::MessageE, field3_),
  PROTOBUF_FIELD_OFFSET(::pgv::MessageE, field4_),
  PROTOBUF_FIELD_OFFSET(::pgv::MessageE, field5_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pgv::MessageF, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::pgv::MessageF, field1_),
  PROTOBUF_FIELD_OFFSET(::pgv::MessageF, field2_),
  PROTOBUF_FIELD_OFFSET(::pgv::MessageF, field3_),
  PROTOBUF_FIELD_OFFSET(::pgv::MessageF, field4_),
  PROTOBUF_FIELD_OFFSET(::pgv::MessageF, field5_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::pgv::MessageB)},
  { 10, -1, sizeof(::pgv::MessageC)},
  { 20, -1, sizeof(::pgv::MessageD)},
  { 30, -1, sizeof(::pgv::MessageE)},
  { 40, -1, sizeof(::pgv::MessageF)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::pgv::_MessageB_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pgv::_MessageC_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pgv::_MessageD_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pgv::_MessageE_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::pgv::_MessageF_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_messages_2eproto = {
  {}, AddDescriptors_messages_2eproto, "messages.proto", schemas,
  file_default_instances, TableStruct_messages_2eproto::offsets,
  file_level_metadata_messages_2eproto, 5, file_level_enum_descriptors_messages_2eproto, file_level_service_descriptors_messages_2eproto,
};

const char descriptor_table_protodef_messages_2eproto[] =
  "\n\016messages.proto\022\003pgv\032\027validate/validate"
  ".proto\"\242\001\n\010MessageB\022\034\n\006field1\030\001 \001(\rB\014\272\351\300"
  "\003\007*\005\030\350\007 \000\022\034\n\006field2\030\002 \001(\rB\014\272\351\300\003\007*\005\030\350\007 \000\022"
  "\034\n\006field3\030\003 \001(\rB\014\272\351\300\003\007*\005\030\350\007 \000\022\035\n\006field4\030"
  "\004 \001(\0132\r.pgv.MessageE\022\035\n\006field5\030\005 \001(\0132\r.p"
  "gv.MessageF\"\242\001\n\010MessageC\022\034\n\006field1\030\001 \001(\r"
  "B\014\272\351\300\003\007*\005\030\350\007 \000\022\034\n\006field2\030\002 \001(\rB\014\272\351\300\003\007*\005\030"
  "\350\007 \000\022\034\n\006field3\030\003 \001(\rB\014\272\351\300\003\007*\005\030\350\007 \000\022\035\n\006fi"
  "eld4\030\004 \001(\0132\r.pgv.MessageE\022\035\n\006field5\030\005 \001("
  "\0132\r.pgv.MessageF\"\242\001\n\010MessageD\022\034\n\006field1\030"
  "\001 \001(\rB\014\272\351\300\003\007*\005\030\350\007 \000\022\034\n\006field2\030\002 \001(\rB\014\272\351\300"
  "\003\007*\005\030\350\007 \000\022\034\n\006field3\030\003 \001(\rB\014\272\351\300\003\007*\005\030\350\007 \000\022"
  "\035\n\006field4\030\004 \001(\0132\r.pgv.MessageE\022\035\n\006field5"
  "\030\005 \001(\0132\r.pgv.MessageF\"\241\001\n\010MessageE\022\034\n\006fi"
  "eld1\030\001 \001(\rB\014\272\351\300\003\007*\005\030\350\007 \000\022\034\n\006field2\030\002 \001(\r"
  "B\014\272\351\300\003\007*\005\030\350\007 \000\022\034\n\006field3\030\003 \001(\rB\014\272\351\300\003\007*\005\030"
  "\350\007 \000\022\034\n\006field4\030\004 \001(\rB\014\272\351\300\003\007*\005\030\350\007 \000\022\035\n\006fi"
  "eld5\030\005 \001(\0132\r.pgv.MessageF\"\240\001\n\010MessageF\022\034"
  "\n\006field1\030\001 \001(\rB\014\272\351\300\003\007*\005\030\350\007 \000\022\034\n\006field2\030\002"
  " \001(\rB\014\272\351\300\003\007*\005\030\350\007 \000\022\034\n\006field3\030\003 \001(\rB\014\272\351\300\003"
  "\007*\005\030\350\007 \000\022\034\n\006field4\030\004 \001(\rB\014\272\351\300\003\007*\005\030\350\007 \000\022\034"
  "\n\006field5\030\005 \001(\rB\014\272\351\300\003\007*\005\030\350\007 \000b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_messages_2eproto = {
  false, InitDefaults_messages_2eproto, 
  descriptor_table_protodef_messages_2eproto,
  "messages.proto", &assign_descriptors_table_messages_2eproto, 876,
};

void AddDescriptors_messages_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
    ::AddDescriptors_validate_2fvalidate_2eproto,
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_messages_2eproto, deps, 1);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_messages_2eproto = []() { AddDescriptors_messages_2eproto(); return true; }();
namespace pgv {

// ===================================================================

void MessageB::InitAsDefaultInstance() {
  ::pgv::_MessageB_default_instance_._instance.get_mutable()->field4_ = const_cast< ::pgv::MessageE*>(
      ::pgv::MessageE::internal_default_instance());
  ::pgv::_MessageB_default_instance_._instance.get_mutable()->field5_ = const_cast< ::pgv::MessageF*>(
      ::pgv::MessageF::internal_default_instance());
}
class MessageB::HasBitSetters {
 public:
  static const ::pgv::MessageE& field4(const MessageB* msg);
  static const ::pgv::MessageF& field5(const MessageB* msg);
};

const ::pgv::MessageE&
MessageB::HasBitSetters::field4(const MessageB* msg) {
  return *msg->field4_;
}
const ::pgv::MessageF&
MessageB::HasBitSetters::field5(const MessageB* msg) {
  return *msg->field5_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageB::kField1FieldNumber;
const int MessageB::kField2FieldNumber;
const int MessageB::kField3FieldNumber;
const int MessageB::kField4FieldNumber;
const int MessageB::kField5FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageB::MessageB()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pgv.MessageB)
}
MessageB::MessageB(const MessageB& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_field4()) {
    field4_ = new ::pgv::MessageE(*from.field4_);
  } else {
    field4_ = nullptr;
  }
  if (from.has_field5()) {
    field5_ = new ::pgv::MessageF(*from.field5_);
  } else {
    field5_ = nullptr;
  }
  ::memcpy(&field1_, &from.field1_,
    static_cast<size_t>(reinterpret_cast<char*>(&field3_) -
    reinterpret_cast<char*>(&field1_)) + sizeof(field3_));
  // @@protoc_insertion_point(copy_constructor:pgv.MessageB)
}

void MessageB::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MessageB_messages_2eproto.base);
  ::memset(&field4_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&field3_) -
      reinterpret_cast<char*>(&field4_)) + sizeof(field3_));
}

MessageB::~MessageB() {
  // @@protoc_insertion_point(destructor:pgv.MessageB)
  SharedDtor();
}

void MessageB::SharedDtor() {
  if (this != internal_default_instance()) delete field4_;
  if (this != internal_default_instance()) delete field5_;
}

void MessageB::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MessageB& MessageB::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MessageB_messages_2eproto.base);
  return *internal_default_instance();
}


void MessageB::Clear() {
// @@protoc_insertion_point(message_clear_start:pgv.MessageB)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && field4_ != nullptr) {
    delete field4_;
  }
  field4_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && field5_ != nullptr) {
    delete field5_;
  }
  field5_ = nullptr;
  ::memset(&field1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&field3_) -
      reinterpret_cast<char*>(&field1_)) + sizeof(field3_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MessageB::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MessageB*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 field1 = 1 [(.validate.rules) = {
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_field1(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 field2 = 2 [(.validate.rules) = {
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_field2(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 field3 = 3 [(.validate.rules) = {
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_field3(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .pgv.MessageE field4 = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::pgv::MessageE::_InternalParse;
        object = msg->mutable_field4();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .pgv.MessageF field5 = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::pgv::MessageF::_InternalParse;
        object = msg->mutable_field5();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MessageB::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pgv.MessageB)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 field1 = 1 [(.validate.rules) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &field1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 field2 = 2 [(.validate.rules) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &field2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 field3 = 3 [(.validate.rules) = {
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &field3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pgv.MessageE field4 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_field4()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pgv.MessageF field5 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_field5()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pgv.MessageB)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pgv.MessageB)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MessageB::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pgv.MessageB)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 field1 = 1 [(.validate.rules) = {
  if (this->field1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->field1(), output);
  }

  // uint32 field2 = 2 [(.validate.rules) = {
  if (this->field2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->field2(), output);
  }

  // uint32 field3 = 3 [(.validate.rules) = {
  if (this->field3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->field3(), output);
  }

  // .pgv.MessageE field4 = 4;
  if (this->has_field4()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::field4(this), output);
  }

  // .pgv.MessageF field5 = 5;
  if (this->has_field5()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::field5(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pgv.MessageB)
}

::google::protobuf::uint8* MessageB::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pgv.MessageB)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 field1 = 1 [(.validate.rules) = {
  if (this->field1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->field1(), target);
  }

  // uint32 field2 = 2 [(.validate.rules) = {
  if (this->field2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->field2(), target);
  }

  // uint32 field3 = 3 [(.validate.rules) = {
  if (this->field3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->field3(), target);
  }

  // .pgv.MessageE field4 = 4;
  if (this->has_field4()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::field4(this), target);
  }

  // .pgv.MessageF field5 = 5;
  if (this->has_field5()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::field5(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pgv.MessageB)
  return target;
}

size_t MessageB::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pgv.MessageB)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .pgv.MessageE field4 = 4;
  if (this->has_field4()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *field4_);
  }

  // .pgv.MessageF field5 = 5;
  if (this->has_field5()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *field5_);
  }

  // uint32 field1 = 1 [(.validate.rules) = {
  if (this->field1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->field1());
  }

  // uint32 field2 = 2 [(.validate.rules) = {
  if (this->field2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->field2());
  }

  // uint32 field3 = 3 [(.validate.rules) = {
  if (this->field3() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->field3());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MessageB::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pgv.MessageB)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageB* source =
      ::google::protobuf::DynamicCastToGenerated<MessageB>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pgv.MessageB)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pgv.MessageB)
    MergeFrom(*source);
  }
}

void MessageB::MergeFrom(const MessageB& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pgv.MessageB)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_field4()) {
    mutable_field4()->::pgv::MessageE::MergeFrom(from.field4());
  }
  if (from.has_field5()) {
    mutable_field5()->::pgv::MessageF::MergeFrom(from.field5());
  }
  if (from.field1() != 0) {
    set_field1(from.field1());
  }
  if (from.field2() != 0) {
    set_field2(from.field2());
  }
  if (from.field3() != 0) {
    set_field3(from.field3());
  }
}

void MessageB::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pgv.MessageB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageB::CopyFrom(const MessageB& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pgv.MessageB)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageB::IsInitialized() const {
  return true;
}

void MessageB::Swap(MessageB* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageB::InternalSwap(MessageB* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(field4_, other->field4_);
  swap(field5_, other->field5_);
  swap(field1_, other->field1_);
  swap(field2_, other->field2_);
  swap(field3_, other->field3_);
}

::google::protobuf::Metadata MessageB::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2eproto);
  return ::file_level_metadata_messages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MessageC::InitAsDefaultInstance() {
  ::pgv::_MessageC_default_instance_._instance.get_mutable()->field4_ = const_cast< ::pgv::MessageE*>(
      ::pgv::MessageE::internal_default_instance());
  ::pgv::_MessageC_default_instance_._instance.get_mutable()->field5_ = const_cast< ::pgv::MessageF*>(
      ::pgv::MessageF::internal_default_instance());
}
class MessageC::HasBitSetters {
 public:
  static const ::pgv::MessageE& field4(const MessageC* msg);
  static const ::pgv::MessageF& field5(const MessageC* msg);
};

const ::pgv::MessageE&
MessageC::HasBitSetters::field4(const MessageC* msg) {
  return *msg->field4_;
}
const ::pgv::MessageF&
MessageC::HasBitSetters::field5(const MessageC* msg) {
  return *msg->field5_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageC::kField1FieldNumber;
const int MessageC::kField2FieldNumber;
const int MessageC::kField3FieldNumber;
const int MessageC::kField4FieldNumber;
const int MessageC::kField5FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageC::MessageC()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pgv.MessageC)
}
MessageC::MessageC(const MessageC& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_field4()) {
    field4_ = new ::pgv::MessageE(*from.field4_);
  } else {
    field4_ = nullptr;
  }
  if (from.has_field5()) {
    field5_ = new ::pgv::MessageF(*from.field5_);
  } else {
    field5_ = nullptr;
  }
  ::memcpy(&field1_, &from.field1_,
    static_cast<size_t>(reinterpret_cast<char*>(&field3_) -
    reinterpret_cast<char*>(&field1_)) + sizeof(field3_));
  // @@protoc_insertion_point(copy_constructor:pgv.MessageC)
}

void MessageC::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MessageC_messages_2eproto.base);
  ::memset(&field4_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&field3_) -
      reinterpret_cast<char*>(&field4_)) + sizeof(field3_));
}

MessageC::~MessageC() {
  // @@protoc_insertion_point(destructor:pgv.MessageC)
  SharedDtor();
}

void MessageC::SharedDtor() {
  if (this != internal_default_instance()) delete field4_;
  if (this != internal_default_instance()) delete field5_;
}

void MessageC::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MessageC& MessageC::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MessageC_messages_2eproto.base);
  return *internal_default_instance();
}


void MessageC::Clear() {
// @@protoc_insertion_point(message_clear_start:pgv.MessageC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && field4_ != nullptr) {
    delete field4_;
  }
  field4_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && field5_ != nullptr) {
    delete field5_;
  }
  field5_ = nullptr;
  ::memset(&field1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&field3_) -
      reinterpret_cast<char*>(&field1_)) + sizeof(field3_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MessageC::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MessageC*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 field1 = 1 [(.validate.rules) = {
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_field1(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 field2 = 2 [(.validate.rules) = {
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_field2(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 field3 = 3 [(.validate.rules) = {
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_field3(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .pgv.MessageE field4 = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::pgv::MessageE::_InternalParse;
        object = msg->mutable_field4();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .pgv.MessageF field5 = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::pgv::MessageF::_InternalParse;
        object = msg->mutable_field5();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MessageC::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pgv.MessageC)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 field1 = 1 [(.validate.rules) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &field1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 field2 = 2 [(.validate.rules) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &field2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 field3 = 3 [(.validate.rules) = {
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &field3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pgv.MessageE field4 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_field4()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pgv.MessageF field5 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_field5()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pgv.MessageC)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pgv.MessageC)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MessageC::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pgv.MessageC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 field1 = 1 [(.validate.rules) = {
  if (this->field1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->field1(), output);
  }

  // uint32 field2 = 2 [(.validate.rules) = {
  if (this->field2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->field2(), output);
  }

  // uint32 field3 = 3 [(.validate.rules) = {
  if (this->field3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->field3(), output);
  }

  // .pgv.MessageE field4 = 4;
  if (this->has_field4()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::field4(this), output);
  }

  // .pgv.MessageF field5 = 5;
  if (this->has_field5()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::field5(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pgv.MessageC)
}

::google::protobuf::uint8* MessageC::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pgv.MessageC)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 field1 = 1 [(.validate.rules) = {
  if (this->field1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->field1(), target);
  }

  // uint32 field2 = 2 [(.validate.rules) = {
  if (this->field2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->field2(), target);
  }

  // uint32 field3 = 3 [(.validate.rules) = {
  if (this->field3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->field3(), target);
  }

  // .pgv.MessageE field4 = 4;
  if (this->has_field4()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::field4(this), target);
  }

  // .pgv.MessageF field5 = 5;
  if (this->has_field5()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::field5(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pgv.MessageC)
  return target;
}

size_t MessageC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pgv.MessageC)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .pgv.MessageE field4 = 4;
  if (this->has_field4()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *field4_);
  }

  // .pgv.MessageF field5 = 5;
  if (this->has_field5()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *field5_);
  }

  // uint32 field1 = 1 [(.validate.rules) = {
  if (this->field1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->field1());
  }

  // uint32 field2 = 2 [(.validate.rules) = {
  if (this->field2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->field2());
  }

  // uint32 field3 = 3 [(.validate.rules) = {
  if (this->field3() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->field3());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MessageC::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pgv.MessageC)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageC* source =
      ::google::protobuf::DynamicCastToGenerated<MessageC>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pgv.MessageC)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pgv.MessageC)
    MergeFrom(*source);
  }
}

void MessageC::MergeFrom(const MessageC& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pgv.MessageC)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_field4()) {
    mutable_field4()->::pgv::MessageE::MergeFrom(from.field4());
  }
  if (from.has_field5()) {
    mutable_field5()->::pgv::MessageF::MergeFrom(from.field5());
  }
  if (from.field1() != 0) {
    set_field1(from.field1());
  }
  if (from.field2() != 0) {
    set_field2(from.field2());
  }
  if (from.field3() != 0) {
    set_field3(from.field3());
  }
}

void MessageC::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pgv.MessageC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageC::CopyFrom(const MessageC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pgv.MessageC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageC::IsInitialized() const {
  return true;
}

void MessageC::Swap(MessageC* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageC::InternalSwap(MessageC* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(field4_, other->field4_);
  swap(field5_, other->field5_);
  swap(field1_, other->field1_);
  swap(field2_, other->field2_);
  swap(field3_, other->field3_);
}

::google::protobuf::Metadata MessageC::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2eproto);
  return ::file_level_metadata_messages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MessageD::InitAsDefaultInstance() {
  ::pgv::_MessageD_default_instance_._instance.get_mutable()->field4_ = const_cast< ::pgv::MessageE*>(
      ::pgv::MessageE::internal_default_instance());
  ::pgv::_MessageD_default_instance_._instance.get_mutable()->field5_ = const_cast< ::pgv::MessageF*>(
      ::pgv::MessageF::internal_default_instance());
}
class MessageD::HasBitSetters {
 public:
  static const ::pgv::MessageE& field4(const MessageD* msg);
  static const ::pgv::MessageF& field5(const MessageD* msg);
};

const ::pgv::MessageE&
MessageD::HasBitSetters::field4(const MessageD* msg) {
  return *msg->field4_;
}
const ::pgv::MessageF&
MessageD::HasBitSetters::field5(const MessageD* msg) {
  return *msg->field5_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageD::kField1FieldNumber;
const int MessageD::kField2FieldNumber;
const int MessageD::kField3FieldNumber;
const int MessageD::kField4FieldNumber;
const int MessageD::kField5FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageD::MessageD()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pgv.MessageD)
}
MessageD::MessageD(const MessageD& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_field4()) {
    field4_ = new ::pgv::MessageE(*from.field4_);
  } else {
    field4_ = nullptr;
  }
  if (from.has_field5()) {
    field5_ = new ::pgv::MessageF(*from.field5_);
  } else {
    field5_ = nullptr;
  }
  ::memcpy(&field1_, &from.field1_,
    static_cast<size_t>(reinterpret_cast<char*>(&field3_) -
    reinterpret_cast<char*>(&field1_)) + sizeof(field3_));
  // @@protoc_insertion_point(copy_constructor:pgv.MessageD)
}

void MessageD::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MessageD_messages_2eproto.base);
  ::memset(&field4_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&field3_) -
      reinterpret_cast<char*>(&field4_)) + sizeof(field3_));
}

MessageD::~MessageD() {
  // @@protoc_insertion_point(destructor:pgv.MessageD)
  SharedDtor();
}

void MessageD::SharedDtor() {
  if (this != internal_default_instance()) delete field4_;
  if (this != internal_default_instance()) delete field5_;
}

void MessageD::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MessageD& MessageD::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MessageD_messages_2eproto.base);
  return *internal_default_instance();
}


void MessageD::Clear() {
// @@protoc_insertion_point(message_clear_start:pgv.MessageD)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && field4_ != nullptr) {
    delete field4_;
  }
  field4_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && field5_ != nullptr) {
    delete field5_;
  }
  field5_ = nullptr;
  ::memset(&field1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&field3_) -
      reinterpret_cast<char*>(&field1_)) + sizeof(field3_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MessageD::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MessageD*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 field1 = 1 [(.validate.rules) = {
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_field1(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 field2 = 2 [(.validate.rules) = {
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_field2(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 field3 = 3 [(.validate.rules) = {
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_field3(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .pgv.MessageE field4 = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::pgv::MessageE::_InternalParse;
        object = msg->mutable_field4();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      // .pgv.MessageF field5 = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::pgv::MessageF::_InternalParse;
        object = msg->mutable_field5();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MessageD::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pgv.MessageD)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 field1 = 1 [(.validate.rules) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &field1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 field2 = 2 [(.validate.rules) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &field2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 field3 = 3 [(.validate.rules) = {
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &field3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pgv.MessageE field4 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_field4()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pgv.MessageF field5 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_field5()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pgv.MessageD)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pgv.MessageD)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MessageD::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pgv.MessageD)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 field1 = 1 [(.validate.rules) = {
  if (this->field1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->field1(), output);
  }

  // uint32 field2 = 2 [(.validate.rules) = {
  if (this->field2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->field2(), output);
  }

  // uint32 field3 = 3 [(.validate.rules) = {
  if (this->field3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->field3(), output);
  }

  // .pgv.MessageE field4 = 4;
  if (this->has_field4()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, HasBitSetters::field4(this), output);
  }

  // .pgv.MessageF field5 = 5;
  if (this->has_field5()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::field5(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pgv.MessageD)
}

::google::protobuf::uint8* MessageD::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pgv.MessageD)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 field1 = 1 [(.validate.rules) = {
  if (this->field1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->field1(), target);
  }

  // uint32 field2 = 2 [(.validate.rules) = {
  if (this->field2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->field2(), target);
  }

  // uint32 field3 = 3 [(.validate.rules) = {
  if (this->field3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->field3(), target);
  }

  // .pgv.MessageE field4 = 4;
  if (this->has_field4()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, HasBitSetters::field4(this), target);
  }

  // .pgv.MessageF field5 = 5;
  if (this->has_field5()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::field5(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pgv.MessageD)
  return target;
}

size_t MessageD::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pgv.MessageD)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .pgv.MessageE field4 = 4;
  if (this->has_field4()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *field4_);
  }

  // .pgv.MessageF field5 = 5;
  if (this->has_field5()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *field5_);
  }

  // uint32 field1 = 1 [(.validate.rules) = {
  if (this->field1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->field1());
  }

  // uint32 field2 = 2 [(.validate.rules) = {
  if (this->field2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->field2());
  }

  // uint32 field3 = 3 [(.validate.rules) = {
  if (this->field3() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->field3());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MessageD::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pgv.MessageD)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageD* source =
      ::google::protobuf::DynamicCastToGenerated<MessageD>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pgv.MessageD)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pgv.MessageD)
    MergeFrom(*source);
  }
}

void MessageD::MergeFrom(const MessageD& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pgv.MessageD)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_field4()) {
    mutable_field4()->::pgv::MessageE::MergeFrom(from.field4());
  }
  if (from.has_field5()) {
    mutable_field5()->::pgv::MessageF::MergeFrom(from.field5());
  }
  if (from.field1() != 0) {
    set_field1(from.field1());
  }
  if (from.field2() != 0) {
    set_field2(from.field2());
  }
  if (from.field3() != 0) {
    set_field3(from.field3());
  }
}

void MessageD::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pgv.MessageD)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageD::CopyFrom(const MessageD& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pgv.MessageD)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageD::IsInitialized() const {
  return true;
}

void MessageD::Swap(MessageD* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageD::InternalSwap(MessageD* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(field4_, other->field4_);
  swap(field5_, other->field5_);
  swap(field1_, other->field1_);
  swap(field2_, other->field2_);
  swap(field3_, other->field3_);
}

::google::protobuf::Metadata MessageD::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2eproto);
  return ::file_level_metadata_messages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MessageE::InitAsDefaultInstance() {
  ::pgv::_MessageE_default_instance_._instance.get_mutable()->field5_ = const_cast< ::pgv::MessageF*>(
      ::pgv::MessageF::internal_default_instance());
}
class MessageE::HasBitSetters {
 public:
  static const ::pgv::MessageF& field5(const MessageE* msg);
};

const ::pgv::MessageF&
MessageE::HasBitSetters::field5(const MessageE* msg) {
  return *msg->field5_;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageE::kField1FieldNumber;
const int MessageE::kField2FieldNumber;
const int MessageE::kField3FieldNumber;
const int MessageE::kField4FieldNumber;
const int MessageE::kField5FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageE::MessageE()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pgv.MessageE)
}
MessageE::MessageE(const MessageE& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_field5()) {
    field5_ = new ::pgv::MessageF(*from.field5_);
  } else {
    field5_ = nullptr;
  }
  ::memcpy(&field1_, &from.field1_,
    static_cast<size_t>(reinterpret_cast<char*>(&field4_) -
    reinterpret_cast<char*>(&field1_)) + sizeof(field4_));
  // @@protoc_insertion_point(copy_constructor:pgv.MessageE)
}

void MessageE::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_MessageE_messages_2eproto.base);
  ::memset(&field5_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&field4_) -
      reinterpret_cast<char*>(&field5_)) + sizeof(field4_));
}

MessageE::~MessageE() {
  // @@protoc_insertion_point(destructor:pgv.MessageE)
  SharedDtor();
}

void MessageE::SharedDtor() {
  if (this != internal_default_instance()) delete field5_;
}

void MessageE::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MessageE& MessageE::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MessageE_messages_2eproto.base);
  return *internal_default_instance();
}


void MessageE::Clear() {
// @@protoc_insertion_point(message_clear_start:pgv.MessageE)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && field5_ != nullptr) {
    delete field5_;
  }
  field5_ = nullptr;
  ::memset(&field1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&field4_) -
      reinterpret_cast<char*>(&field1_)) + sizeof(field4_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MessageE::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MessageE*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 field1 = 1 [(.validate.rules) = {
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_field1(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 field2 = 2 [(.validate.rules) = {
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_field2(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 field3 = 3 [(.validate.rules) = {
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_field3(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 field4 = 4 [(.validate.rules) = {
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_field4(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // .pgv.MessageF field5 = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        ptr = ::google::protobuf::io::ReadSize(ptr, &size);
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        parser_till_end = ::pgv::MessageF::_InternalParse;
        object = msg->mutable_field5();
        if (size > end - ptr) goto len_delim_till_end;
        ptr += size;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
            {parser_till_end, object}, ptr - size, ptr));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MessageE::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pgv.MessageE)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 field1 = 1 [(.validate.rules) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &field1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 field2 = 2 [(.validate.rules) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &field2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 field3 = 3 [(.validate.rules) = {
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &field3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 field4 = 4 [(.validate.rules) = {
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &field4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .pgv.MessageF field5 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_field5()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pgv.MessageE)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pgv.MessageE)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MessageE::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pgv.MessageE)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 field1 = 1 [(.validate.rules) = {
  if (this->field1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->field1(), output);
  }

  // uint32 field2 = 2 [(.validate.rules) = {
  if (this->field2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->field2(), output);
  }

  // uint32 field3 = 3 [(.validate.rules) = {
  if (this->field3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->field3(), output);
  }

  // uint32 field4 = 4 [(.validate.rules) = {
  if (this->field4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->field4(), output);
  }

  // .pgv.MessageF field5 = 5;
  if (this->has_field5()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, HasBitSetters::field5(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pgv.MessageE)
}

::google::protobuf::uint8* MessageE::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pgv.MessageE)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 field1 = 1 [(.validate.rules) = {
  if (this->field1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->field1(), target);
  }

  // uint32 field2 = 2 [(.validate.rules) = {
  if (this->field2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->field2(), target);
  }

  // uint32 field3 = 3 [(.validate.rules) = {
  if (this->field3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->field3(), target);
  }

  // uint32 field4 = 4 [(.validate.rules) = {
  if (this->field4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->field4(), target);
  }

  // .pgv.MessageF field5 = 5;
  if (this->has_field5()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, HasBitSetters::field5(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pgv.MessageE)
  return target;
}

size_t MessageE::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pgv.MessageE)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .pgv.MessageF field5 = 5;
  if (this->has_field5()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *field5_);
  }

  // uint32 field1 = 1 [(.validate.rules) = {
  if (this->field1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->field1());
  }

  // uint32 field2 = 2 [(.validate.rules) = {
  if (this->field2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->field2());
  }

  // uint32 field3 = 3 [(.validate.rules) = {
  if (this->field3() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->field3());
  }

  // uint32 field4 = 4 [(.validate.rules) = {
  if (this->field4() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->field4());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MessageE::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pgv.MessageE)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageE* source =
      ::google::protobuf::DynamicCastToGenerated<MessageE>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pgv.MessageE)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pgv.MessageE)
    MergeFrom(*source);
  }
}

void MessageE::MergeFrom(const MessageE& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pgv.MessageE)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_field5()) {
    mutable_field5()->::pgv::MessageF::MergeFrom(from.field5());
  }
  if (from.field1() != 0) {
    set_field1(from.field1());
  }
  if (from.field2() != 0) {
    set_field2(from.field2());
  }
  if (from.field3() != 0) {
    set_field3(from.field3());
  }
  if (from.field4() != 0) {
    set_field4(from.field4());
  }
}

void MessageE::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pgv.MessageE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageE::CopyFrom(const MessageE& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pgv.MessageE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageE::IsInitialized() const {
  return true;
}

void MessageE::Swap(MessageE* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageE::InternalSwap(MessageE* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(field5_, other->field5_);
  swap(field1_, other->field1_);
  swap(field2_, other->field2_);
  swap(field3_, other->field3_);
  swap(field4_, other->field4_);
}

::google::protobuf::Metadata MessageE::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2eproto);
  return ::file_level_metadata_messages_2eproto[kIndexInFileMessages];
}


// ===================================================================

void MessageF::InitAsDefaultInstance() {
}
class MessageF::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageF::kField1FieldNumber;
const int MessageF::kField2FieldNumber;
const int MessageF::kField3FieldNumber;
const int MessageF::kField4FieldNumber;
const int MessageF::kField5FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageF::MessageF()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pgv.MessageF)
}
MessageF::MessageF(const MessageF& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&field1_, &from.field1_,
    static_cast<size_t>(reinterpret_cast<char*>(&field5_) -
    reinterpret_cast<char*>(&field1_)) + sizeof(field5_));
  // @@protoc_insertion_point(copy_constructor:pgv.MessageF)
}

void MessageF::SharedCtor() {
  ::memset(&field1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&field5_) -
      reinterpret_cast<char*>(&field1_)) + sizeof(field5_));
}

MessageF::~MessageF() {
  // @@protoc_insertion_point(destructor:pgv.MessageF)
  SharedDtor();
}

void MessageF::SharedDtor() {
}

void MessageF::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MessageF& MessageF::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_MessageF_messages_2eproto.base);
  return *internal_default_instance();
}


void MessageF::Clear() {
// @@protoc_insertion_point(message_clear_start:pgv.MessageF)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&field1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&field5_) -
      reinterpret_cast<char*>(&field1_)) + sizeof(field5_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* MessageF::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<MessageF*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // uint32 field1 = 1 [(.validate.rules) = {
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_field1(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 field2 = 2 [(.validate.rules) = {
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_field2(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 field3 = 3 [(.validate.rules) = {
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_field3(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 field4 = 4 [(.validate.rules) = {
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_field4(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // uint32 field5 = 5 [(.validate.rules) = {
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 40) goto handle_unusual;
        msg->set_field5(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool MessageF::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pgv.MessageF)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 field1 = 1 [(.validate.rules) = {
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &field1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 field2 = 2 [(.validate.rules) = {
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &field2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 field3 = 3 [(.validate.rules) = {
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &field3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 field4 = 4 [(.validate.rules) = {
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &field4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 field5 = 5 [(.validate.rules) = {
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (40 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &field5_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pgv.MessageF)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pgv.MessageF)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void MessageF::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pgv.MessageF)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 field1 = 1 [(.validate.rules) = {
  if (this->field1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->field1(), output);
  }

  // uint32 field2 = 2 [(.validate.rules) = {
  if (this->field2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->field2(), output);
  }

  // uint32 field3 = 3 [(.validate.rules) = {
  if (this->field3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->field3(), output);
  }

  // uint32 field4 = 4 [(.validate.rules) = {
  if (this->field4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->field4(), output);
  }

  // uint32 field5 = 5 [(.validate.rules) = {
  if (this->field5() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->field5(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:pgv.MessageF)
}

::google::protobuf::uint8* MessageF::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pgv.MessageF)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 field1 = 1 [(.validate.rules) = {
  if (this->field1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->field1(), target);
  }

  // uint32 field2 = 2 [(.validate.rules) = {
  if (this->field2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->field2(), target);
  }

  // uint32 field3 = 3 [(.validate.rules) = {
  if (this->field3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->field3(), target);
  }

  // uint32 field4 = 4 [(.validate.rules) = {
  if (this->field4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->field4(), target);
  }

  // uint32 field5 = 5 [(.validate.rules) = {
  if (this->field5() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->field5(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pgv.MessageF)
  return target;
}

size_t MessageF::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pgv.MessageF)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 field1 = 1 [(.validate.rules) = {
  if (this->field1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->field1());
  }

  // uint32 field2 = 2 [(.validate.rules) = {
  if (this->field2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->field2());
  }

  // uint32 field3 = 3 [(.validate.rules) = {
  if (this->field3() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->field3());
  }

  // uint32 field4 = 4 [(.validate.rules) = {
  if (this->field4() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->field4());
  }

  // uint32 field5 = 5 [(.validate.rules) = {
  if (this->field5() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->field5());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MessageF::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pgv.MessageF)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageF* source =
      ::google::protobuf::DynamicCastToGenerated<MessageF>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pgv.MessageF)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pgv.MessageF)
    MergeFrom(*source);
  }
}

void MessageF::MergeFrom(const MessageF& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pgv.MessageF)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.field1() != 0) {
    set_field1(from.field1());
  }
  if (from.field2() != 0) {
    set_field2(from.field2());
  }
  if (from.field3() != 0) {
    set_field3(from.field3());
  }
  if (from.field4() != 0) {
    set_field4(from.field4());
  }
  if (from.field5() != 0) {
    set_field5(from.field5());
  }
}

void MessageF::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pgv.MessageF)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageF::CopyFrom(const MessageF& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pgv.MessageF)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageF::IsInitialized() const {
  return true;
}

void MessageF::Swap(MessageF* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageF::InternalSwap(MessageF* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(field1_, other->field1_);
  swap(field2_, other->field2_);
  swap(field3_, other->field3_);
  swap(field4_, other->field4_);
  swap(field5_, other->field5_);
}

::google::protobuf::Metadata MessageF::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_messages_2eproto);
  return ::file_level_metadata_messages_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace pgv
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::pgv::MessageB* Arena::CreateMaybeMessage< ::pgv::MessageB >(Arena* arena) {
  return Arena::CreateInternal< ::pgv::MessageB >(arena);
}
template<> PROTOBUF_NOINLINE ::pgv::MessageC* Arena::CreateMaybeMessage< ::pgv::MessageC >(Arena* arena) {
  return Arena::CreateInternal< ::pgv::MessageC >(arena);
}
template<> PROTOBUF_NOINLINE ::pgv::MessageD* Arena::CreateMaybeMessage< ::pgv::MessageD >(Arena* arena) {
  return Arena::CreateInternal< ::pgv::MessageD >(arena);
}
template<> PROTOBUF_NOINLINE ::pgv::MessageE* Arena::CreateMaybeMessage< ::pgv::MessageE >(Arena* arena) {
  return Arena::CreateInternal< ::pgv::MessageE >(arena);
}
template<> PROTOBUF_NOINLINE ::pgv::MessageF* Arena::CreateMaybeMessage< ::pgv::MessageF >(Arena* arena) {
  return Arena::CreateInternal< ::pgv::MessageF >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
