// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: large.proto

#ifndef PROTOBUF_large_2eproto__INCLUDED
#define PROTOBUF_large_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "validate/validate.pb.h"
#include "messages.pb.h"
// @@protoc_insertion_point(includes)
namespace pgv {
class Large;
class LargeDefaultTypeInternal;
extern LargeDefaultTypeInternal _Large_default_instance_;
}  // namespace pgv

namespace pgv {

namespace protobuf_large_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_large_2eproto

// ===================================================================

class Large : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pgv.Large) */ {
 public:
  Large();
  virtual ~Large();

  Large(const Large& from);

  inline Large& operator=(const Large& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Large(Large&& from) noexcept
    : Large() {
    *this = ::std::move(from);
  }

  inline Large& operator=(Large&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Large& default_instance();

  static inline const Large* internal_default_instance() {
    return reinterpret_cast<const Large*>(
               &_Large_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Large* other);
  friend void swap(Large& a, Large& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Large* New() const PROTOBUF_FINAL { return New(NULL); }

  Large* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Large& from);
  void MergeFrom(const Large& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Large* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes field51 = 51 [(.validate.rules) = {
  void clear_field51();
  static const int kField51FieldNumber = 51;
  const ::std::string& field51() const;
  void set_field51(const ::std::string& value);
  #if LANG_CXX11
  void set_field51(::std::string&& value);
  #endif
  void set_field51(const char* value);
  void set_field51(const void* value, size_t size);
  ::std::string* mutable_field51();
  ::std::string* release_field51();
  void set_allocated_field51(::std::string* field51);

  // bytes field52 = 52 [(.validate.rules) = {
  void clear_field52();
  static const int kField52FieldNumber = 52;
  const ::std::string& field52() const;
  void set_field52(const ::std::string& value);
  #if LANG_CXX11
  void set_field52(::std::string&& value);
  #endif
  void set_field52(const char* value);
  void set_field52(const void* value, size_t size);
  ::std::string* mutable_field52();
  ::std::string* release_field52();
  void set_allocated_field52(::std::string* field52);

  // bytes field53 = 53 [(.validate.rules) = {
  void clear_field53();
  static const int kField53FieldNumber = 53;
  const ::std::string& field53() const;
  void set_field53(const ::std::string& value);
  #if LANG_CXX11
  void set_field53(::std::string&& value);
  #endif
  void set_field53(const char* value);
  void set_field53(const void* value, size_t size);
  ::std::string* mutable_field53();
  ::std::string* release_field53();
  void set_allocated_field53(::std::string* field53);

  // bytes field54 = 54 [(.validate.rules) = {
  void clear_field54();
  static const int kField54FieldNumber = 54;
  const ::std::string& field54() const;
  void set_field54(const ::std::string& value);
  #if LANG_CXX11
  void set_field54(::std::string&& value);
  #endif
  void set_field54(const char* value);
  void set_field54(const void* value, size_t size);
  ::std::string* mutable_field54();
  ::std::string* release_field54();
  void set_allocated_field54(::std::string* field54);

  // bytes field55 = 55 [(.validate.rules) = {
  void clear_field55();
  static const int kField55FieldNumber = 55;
  const ::std::string& field55() const;
  void set_field55(const ::std::string& value);
  #if LANG_CXX11
  void set_field55(::std::string&& value);
  #endif
  void set_field55(const char* value);
  void set_field55(const void* value, size_t size);
  ::std::string* mutable_field55();
  ::std::string* release_field55();
  void set_allocated_field55(::std::string* field55);

  // .pgv.MessageB field41 = 41;
  bool has_field41() const;
  void clear_field41();
  static const int kField41FieldNumber = 41;
  const ::pgv::MessageB& field41() const;
  ::pgv::MessageB* mutable_field41();
  ::pgv::MessageB* release_field41();
  void set_allocated_field41(::pgv::MessageB* field41);

  // .pgv.MessageC field42 = 42;
  bool has_field42() const;
  void clear_field42();
  static const int kField42FieldNumber = 42;
  const ::pgv::MessageC& field42() const;
  ::pgv::MessageC* mutable_field42();
  ::pgv::MessageC* release_field42();
  void set_allocated_field42(::pgv::MessageC* field42);

  // .pgv.MessageD field43 = 43;
  bool has_field43() const;
  void clear_field43();
  static const int kField43FieldNumber = 43;
  const ::pgv::MessageD& field43() const;
  ::pgv::MessageD* mutable_field43();
  ::pgv::MessageD* release_field43();
  void set_allocated_field43(::pgv::MessageD* field43);

  // .pgv.MessageE field44 = 44;
  bool has_field44() const;
  void clear_field44();
  static const int kField44FieldNumber = 44;
  const ::pgv::MessageE& field44() const;
  ::pgv::MessageE* mutable_field44();
  ::pgv::MessageE* release_field44();
  void set_allocated_field44(::pgv::MessageE* field44);

  // .pgv.MessageF field45 = 45;
  bool has_field45() const;
  void clear_field45();
  static const int kField45FieldNumber = 45;
  const ::pgv::MessageF& field45() const;
  ::pgv::MessageF* mutable_field45();
  ::pgv::MessageF* release_field45();
  void set_allocated_field45(::pgv::MessageF* field45);

  // .pgv.MessageB field46 = 46;
  bool has_field46() const;
  void clear_field46();
  static const int kField46FieldNumber = 46;
  const ::pgv::MessageB& field46() const;
  ::pgv::MessageB* mutable_field46();
  ::pgv::MessageB* release_field46();
  void set_allocated_field46(::pgv::MessageB* field46);

  // .pgv.MessageC field47 = 47;
  bool has_field47() const;
  void clear_field47();
  static const int kField47FieldNumber = 47;
  const ::pgv::MessageC& field47() const;
  ::pgv::MessageC* mutable_field47();
  ::pgv::MessageC* release_field47();
  void set_allocated_field47(::pgv::MessageC* field47);

  // .pgv.MessageD field48 = 48;
  bool has_field48() const;
  void clear_field48();
  static const int kField48FieldNumber = 48;
  const ::pgv::MessageD& field48() const;
  ::pgv::MessageD* mutable_field48();
  ::pgv::MessageD* release_field48();
  void set_allocated_field48(::pgv::MessageD* field48);

  // .pgv.MessageE field49 = 49;
  bool has_field49() const;
  void clear_field49();
  static const int kField49FieldNumber = 49;
  const ::pgv::MessageE& field49() const;
  ::pgv::MessageE* mutable_field49();
  ::pgv::MessageE* release_field49();
  void set_allocated_field49(::pgv::MessageE* field49);

  // .pgv.MessageF field50 = 50;
  bool has_field50() const;
  void clear_field50();
  static const int kField50FieldNumber = 50;
  const ::pgv::MessageF& field50() const;
  ::pgv::MessageF* mutable_field50();
  ::pgv::MessageF* release_field50();
  void set_allocated_field50(::pgv::MessageF* field50);

  // .pgv.MessageB field61 = 61;
  bool has_field61() const;
  void clear_field61();
  static const int kField61FieldNumber = 61;
  const ::pgv::MessageB& field61() const;
  ::pgv::MessageB* mutable_field61();
  ::pgv::MessageB* release_field61();
  void set_allocated_field61(::pgv::MessageB* field61);

  // .pgv.MessageC field62 = 62;
  bool has_field62() const;
  void clear_field62();
  static const int kField62FieldNumber = 62;
  const ::pgv::MessageC& field62() const;
  ::pgv::MessageC* mutable_field62();
  ::pgv::MessageC* release_field62();
  void set_allocated_field62(::pgv::MessageC* field62);

  // .pgv.MessageD field63 = 63;
  bool has_field63() const;
  void clear_field63();
  static const int kField63FieldNumber = 63;
  const ::pgv::MessageD& field63() const;
  ::pgv::MessageD* mutable_field63();
  ::pgv::MessageD* release_field63();
  void set_allocated_field63(::pgv::MessageD* field63);

  // .pgv.MessageE field64 = 64;
  bool has_field64() const;
  void clear_field64();
  static const int kField64FieldNumber = 64;
  const ::pgv::MessageE& field64() const;
  ::pgv::MessageE* mutable_field64();
  ::pgv::MessageE* release_field64();
  void set_allocated_field64(::pgv::MessageE* field64);

  // .pgv.MessageF field65 = 65;
  bool has_field65() const;
  void clear_field65();
  static const int kField65FieldNumber = 65;
  const ::pgv::MessageF& field65() const;
  ::pgv::MessageF* mutable_field65();
  ::pgv::MessageF* release_field65();
  void set_allocated_field65(::pgv::MessageF* field65);

  // .pgv.MessageB field66 = 66;
  bool has_field66() const;
  void clear_field66();
  static const int kField66FieldNumber = 66;
  const ::pgv::MessageB& field66() const;
  ::pgv::MessageB* mutable_field66();
  ::pgv::MessageB* release_field66();
  void set_allocated_field66(::pgv::MessageB* field66);

  // .pgv.MessageC field67 = 67;
  bool has_field67() const;
  void clear_field67();
  static const int kField67FieldNumber = 67;
  const ::pgv::MessageC& field67() const;
  ::pgv::MessageC* mutable_field67();
  ::pgv::MessageC* release_field67();
  void set_allocated_field67(::pgv::MessageC* field67);

  // .pgv.MessageD field68 = 68;
  bool has_field68() const;
  void clear_field68();
  static const int kField68FieldNumber = 68;
  const ::pgv::MessageD& field68() const;
  ::pgv::MessageD* mutable_field68();
  ::pgv::MessageD* release_field68();
  void set_allocated_field68(::pgv::MessageD* field68);

  // .pgv.MessageE field69 = 69;
  bool has_field69() const;
  void clear_field69();
  static const int kField69FieldNumber = 69;
  const ::pgv::MessageE& field69() const;
  ::pgv::MessageE* mutable_field69();
  ::pgv::MessageE* release_field69();
  void set_allocated_field69(::pgv::MessageE* field69);

  // .pgv.MessageF field70 = 70;
  bool has_field70() const;
  void clear_field70();
  static const int kField70FieldNumber = 70;
  const ::pgv::MessageF& field70() const;
  ::pgv::MessageF* mutable_field70();
  ::pgv::MessageF* release_field70();
  void set_allocated_field70(::pgv::MessageF* field70);

  // uint32 field1 = 1 [(.validate.rules) = {
  void clear_field1();
  static const int kField1FieldNumber = 1;
  ::google::protobuf::uint32 field1() const;
  void set_field1(::google::protobuf::uint32 value);

  // uint32 field2 = 2 [(.validate.rules) = {
  void clear_field2();
  static const int kField2FieldNumber = 2;
  ::google::protobuf::uint32 field2() const;
  void set_field2(::google::protobuf::uint32 value);

  // uint32 field3 = 3 [(.validate.rules) = {
  void clear_field3();
  static const int kField3FieldNumber = 3;
  ::google::protobuf::uint32 field3() const;
  void set_field3(::google::protobuf::uint32 value);

  // uint32 field4 = 4 [(.validate.rules) = {
  void clear_field4();
  static const int kField4FieldNumber = 4;
  ::google::protobuf::uint32 field4() const;
  void set_field4(::google::protobuf::uint32 value);

  // uint32 field5 = 5 [(.validate.rules) = {
  void clear_field5();
  static const int kField5FieldNumber = 5;
  ::google::protobuf::uint32 field5() const;
  void set_field5(::google::protobuf::uint32 value);

  // uint32 field6 = 6 [(.validate.rules) = {
  void clear_field6();
  static const int kField6FieldNumber = 6;
  ::google::protobuf::uint32 field6() const;
  void set_field6(::google::protobuf::uint32 value);

  // uint32 field7 = 7 [(.validate.rules) = {
  void clear_field7();
  static const int kField7FieldNumber = 7;
  ::google::protobuf::uint32 field7() const;
  void set_field7(::google::protobuf::uint32 value);

  // uint32 field8 = 8 [(.validate.rules) = {
  void clear_field8();
  static const int kField8FieldNumber = 8;
  ::google::protobuf::uint32 field8() const;
  void set_field8(::google::protobuf::uint32 value);

  // uint32 field9 = 9 [(.validate.rules) = {
  void clear_field9();
  static const int kField9FieldNumber = 9;
  ::google::protobuf::uint32 field9() const;
  void set_field9(::google::protobuf::uint32 value);

  // uint32 field10 = 10 [(.validate.rules) = {
  void clear_field10();
  static const int kField10FieldNumber = 10;
  ::google::protobuf::uint32 field10() const;
  void set_field10(::google::protobuf::uint32 value);

  // uint32 field11 = 11 [(.validate.rules) = {
  void clear_field11();
  static const int kField11FieldNumber = 11;
  ::google::protobuf::uint32 field11() const;
  void set_field11(::google::protobuf::uint32 value);

  // uint32 field12 = 12 [(.validate.rules) = {
  void clear_field12();
  static const int kField12FieldNumber = 12;
  ::google::protobuf::uint32 field12() const;
  void set_field12(::google::protobuf::uint32 value);

  // uint32 field13 = 13 [(.validate.rules) = {
  void clear_field13();
  static const int kField13FieldNumber = 13;
  ::google::protobuf::uint32 field13() const;
  void set_field13(::google::protobuf::uint32 value);

  // uint32 field14 = 14 [(.validate.rules) = {
  void clear_field14();
  static const int kField14FieldNumber = 14;
  ::google::protobuf::uint32 field14() const;
  void set_field14(::google::protobuf::uint32 value);

  // uint32 field15 = 15 [(.validate.rules) = {
  void clear_field15();
  static const int kField15FieldNumber = 15;
  ::google::protobuf::uint32 field15() const;
  void set_field15(::google::protobuf::uint32 value);

  // uint32 field16 = 16 [(.validate.rules) = {
  void clear_field16();
  static const int kField16FieldNumber = 16;
  ::google::protobuf::uint32 field16() const;
  void set_field16(::google::protobuf::uint32 value);

  // uint32 field17 = 17 [(.validate.rules) = {
  void clear_field17();
  static const int kField17FieldNumber = 17;
  ::google::protobuf::uint32 field17() const;
  void set_field17(::google::protobuf::uint32 value);

  // uint32 field18 = 18 [(.validate.rules) = {
  void clear_field18();
  static const int kField18FieldNumber = 18;
  ::google::protobuf::uint32 field18() const;
  void set_field18(::google::protobuf::uint32 value);

  // uint32 field19 = 19 [(.validate.rules) = {
  void clear_field19();
  static const int kField19FieldNumber = 19;
  ::google::protobuf::uint32 field19() const;
  void set_field19(::google::protobuf::uint32 value);

  // uint32 field20 = 20 [(.validate.rules) = {
  void clear_field20();
  static const int kField20FieldNumber = 20;
  ::google::protobuf::uint32 field20() const;
  void set_field20(::google::protobuf::uint32 value);

  // uint32 field21 = 21 [(.validate.rules) = {
  void clear_field21();
  static const int kField21FieldNumber = 21;
  ::google::protobuf::uint32 field21() const;
  void set_field21(::google::protobuf::uint32 value);

  // uint32 field22 = 22 [(.validate.rules) = {
  void clear_field22();
  static const int kField22FieldNumber = 22;
  ::google::protobuf::uint32 field22() const;
  void set_field22(::google::protobuf::uint32 value);

  // uint32 field23 = 23 [(.validate.rules) = {
  void clear_field23();
  static const int kField23FieldNumber = 23;
  ::google::protobuf::uint32 field23() const;
  void set_field23(::google::protobuf::uint32 value);

  // uint32 field24 = 24 [(.validate.rules) = {
  void clear_field24();
  static const int kField24FieldNumber = 24;
  ::google::protobuf::uint32 field24() const;
  void set_field24(::google::protobuf::uint32 value);

  // uint32 field25 = 25 [(.validate.rules) = {
  void clear_field25();
  static const int kField25FieldNumber = 25;
  ::google::protobuf::uint32 field25() const;
  void set_field25(::google::protobuf::uint32 value);

  // uint32 field26 = 26 [(.validate.rules) = {
  void clear_field26();
  static const int kField26FieldNumber = 26;
  ::google::protobuf::uint32 field26() const;
  void set_field26(::google::protobuf::uint32 value);

  // uint32 field27 = 27 [(.validate.rules) = {
  void clear_field27();
  static const int kField27FieldNumber = 27;
  ::google::protobuf::uint32 field27() const;
  void set_field27(::google::protobuf::uint32 value);

  // uint32 field28 = 28 [(.validate.rules) = {
  void clear_field28();
  static const int kField28FieldNumber = 28;
  ::google::protobuf::uint32 field28() const;
  void set_field28(::google::protobuf::uint32 value);

  // uint32 field29 = 29 [(.validate.rules) = {
  void clear_field29();
  static const int kField29FieldNumber = 29;
  ::google::protobuf::uint32 field29() const;
  void set_field29(::google::protobuf::uint32 value);

  // uint32 field30 = 30 [(.validate.rules) = {
  void clear_field30();
  static const int kField30FieldNumber = 30;
  ::google::protobuf::uint32 field30() const;
  void set_field30(::google::protobuf::uint32 value);

  // uint64 field31 = 31 [(.validate.rules) = {
  void clear_field31();
  static const int kField31FieldNumber = 31;
  ::google::protobuf::uint64 field31() const;
  void set_field31(::google::protobuf::uint64 value);

  // uint64 field32 = 32 [(.validate.rules) = {
  void clear_field32();
  static const int kField32FieldNumber = 32;
  ::google::protobuf::uint64 field32() const;
  void set_field32(::google::protobuf::uint64 value);

  // uint64 field33 = 33 [(.validate.rules) = {
  void clear_field33();
  static const int kField33FieldNumber = 33;
  ::google::protobuf::uint64 field33() const;
  void set_field33(::google::protobuf::uint64 value);

  // uint64 field34 = 34 [(.validate.rules) = {
  void clear_field34();
  static const int kField34FieldNumber = 34;
  ::google::protobuf::uint64 field34() const;
  void set_field34(::google::protobuf::uint64 value);

  // uint64 field35 = 35 [(.validate.rules) = {
  void clear_field35();
  static const int kField35FieldNumber = 35;
  ::google::protobuf::uint64 field35() const;
  void set_field35(::google::protobuf::uint64 value);

  // uint64 field36 = 36 [(.validate.rules) = {
  void clear_field36();
  static const int kField36FieldNumber = 36;
  ::google::protobuf::uint64 field36() const;
  void set_field36(::google::protobuf::uint64 value);

  // uint64 field37 = 37 [(.validate.rules) = {
  void clear_field37();
  static const int kField37FieldNumber = 37;
  ::google::protobuf::uint64 field37() const;
  void set_field37(::google::protobuf::uint64 value);

  // uint64 field38 = 38 [(.validate.rules) = {
  void clear_field38();
  static const int kField38FieldNumber = 38;
  ::google::protobuf::uint64 field38() const;
  void set_field38(::google::protobuf::uint64 value);

  // uint64 field39 = 39 [(.validate.rules) = {
  void clear_field39();
  static const int kField39FieldNumber = 39;
  ::google::protobuf::uint64 field39() const;
  void set_field39(::google::protobuf::uint64 value);

  // uint64 field40 = 40 [(.validate.rules) = {
  void clear_field40();
  static const int kField40FieldNumber = 40;
  ::google::protobuf::uint64 field40() const;
  void set_field40(::google::protobuf::uint64 value);

  // sint32 field105 = 105 [(.validate.rules) = {
  void clear_field105();
  static const int kField105FieldNumber = 105;
  ::google::protobuf::int32 field105() const;
  void set_field105(::google::protobuf::int32 value);

  // sint32 field101 = 101 [(.validate.rules) = {
  void clear_field101();
  static const int kField101FieldNumber = 101;
  ::google::protobuf::int32 field101() const;
  void set_field101(::google::protobuf::int32 value);

  // sint32 field102 = 102 [(.validate.rules) = {
  void clear_field102();
  static const int kField102FieldNumber = 102;
  ::google::protobuf::int32 field102() const;
  void set_field102(::google::protobuf::int32 value);

  // sint32 field103 = 103 [(.validate.rules) = {
  void clear_field103();
  static const int kField103FieldNumber = 103;
  ::google::protobuf::int32 field103() const;
  void set_field103(::google::protobuf::int32 value);

  // sint32 field104 = 104 [(.validate.rules) = {
  void clear_field104();
  static const int kField104FieldNumber = 104;
  ::google::protobuf::int32 field104() const;
  void set_field104(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:pgv.Large)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr field51_;
  ::google::protobuf::internal::ArenaStringPtr field52_;
  ::google::protobuf::internal::ArenaStringPtr field53_;
  ::google::protobuf::internal::ArenaStringPtr field54_;
  ::google::protobuf::internal::ArenaStringPtr field55_;
  ::pgv::MessageB* field41_;
  ::pgv::MessageC* field42_;
  ::pgv::MessageD* field43_;
  ::pgv::MessageE* field44_;
  ::pgv::MessageF* field45_;
  ::pgv::MessageB* field46_;
  ::pgv::MessageC* field47_;
  ::pgv::MessageD* field48_;
  ::pgv::MessageE* field49_;
  ::pgv::MessageF* field50_;
  ::pgv::MessageB* field61_;
  ::pgv::MessageC* field62_;
  ::pgv::MessageD* field63_;
  ::pgv::MessageE* field64_;
  ::pgv::MessageF* field65_;
  ::pgv::MessageB* field66_;
  ::pgv::MessageC* field67_;
  ::pgv::MessageD* field68_;
  ::pgv::MessageE* field69_;
  ::pgv::MessageF* field70_;
  ::google::protobuf::uint32 field1_;
  ::google::protobuf::uint32 field2_;
  ::google::protobuf::uint32 field3_;
  ::google::protobuf::uint32 field4_;
  ::google::protobuf::uint32 field5_;
  ::google::protobuf::uint32 field6_;
  ::google::protobuf::uint32 field7_;
  ::google::protobuf::uint32 field8_;
  ::google::protobuf::uint32 field9_;
  ::google::protobuf::uint32 field10_;
  ::google::protobuf::uint32 field11_;
  ::google::protobuf::uint32 field12_;
  ::google::protobuf::uint32 field13_;
  ::google::protobuf::uint32 field14_;
  ::google::protobuf::uint32 field15_;
  ::google::protobuf::uint32 field16_;
  ::google::protobuf::uint32 field17_;
  ::google::protobuf::uint32 field18_;
  ::google::protobuf::uint32 field19_;
  ::google::protobuf::uint32 field20_;
  ::google::protobuf::uint32 field21_;
  ::google::protobuf::uint32 field22_;
  ::google::protobuf::uint32 field23_;
  ::google::protobuf::uint32 field24_;
  ::google::protobuf::uint32 field25_;
  ::google::protobuf::uint32 field26_;
  ::google::protobuf::uint32 field27_;
  ::google::protobuf::uint32 field28_;
  ::google::protobuf::uint32 field29_;
  ::google::protobuf::uint32 field30_;
  ::google::protobuf::uint64 field31_;
  ::google::protobuf::uint64 field32_;
  ::google::protobuf::uint64 field33_;
  ::google::protobuf::uint64 field34_;
  ::google::protobuf::uint64 field35_;
  ::google::protobuf::uint64 field36_;
  ::google::protobuf::uint64 field37_;
  ::google::protobuf::uint64 field38_;
  ::google::protobuf::uint64 field39_;
  ::google::protobuf::uint64 field40_;
  ::google::protobuf::int32 field105_;
  ::google::protobuf::int32 field101_;
  ::google::protobuf::int32 field102_;
  ::google::protobuf::int32 field103_;
  ::google::protobuf::int32 field104_;
  mutable int _cached_size_;
  friend struct protobuf_large_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Large

// uint32 field1 = 1 [(.validate.rules) = {
inline void Large::clear_field1() {
  field1_ = 0u;
}
inline ::google::protobuf::uint32 Large::field1() const {
  // @@protoc_insertion_point(field_get:pgv.Large.field1)
  return field1_;
}
inline void Large::set_field1(::google::protobuf::uint32 value) {
  
  field1_ = value;
  // @@protoc_insertion_point(field_set:pgv.Large.field1)
}

// uint32 field2 = 2 [(.validate.rules) = {
inline void Large::clear_field2() {
  field2_ = 0u;
}
inline ::google::protobuf::uint32 Large::field2() const {
  // @@protoc_insertion_point(field_get:pgv.Large.field2)
  return field2_;
}
inline void Large::set_field2(::google::protobuf::uint32 value) {
  
  field2_ = value;
  // @@protoc_insertion_point(field_set:pgv.Large.field2)
}

// uint32 field3 = 3 [(.validate.rules) = {
inline void Large::clear_field3() {
  field3_ = 0u;
}
inline ::google::protobuf::uint32 Large::field3() const {
  // @@protoc_insertion_point(field_get:pgv.Large.field3)
  return field3_;
}
inline void Large::set_field3(::google::protobuf::uint32 value) {
  
  field3_ = value;
  // @@protoc_insertion_point(field_set:pgv.Large.field3)
}

// uint32 field4 = 4 [(.validate.rules) = {
inline void Large::clear_field4() {
  field4_ = 0u;
}
inline ::google::protobuf::uint32 Large::field4() const {
  // @@protoc_insertion_point(field_get:pgv.Large.field4)
  return field4_;
}
inline void Large::set_field4(::google::protobuf::uint32 value) {
  
  field4_ = value;
  // @@protoc_insertion_point(field_set:pgv.Large.field4)
}

// uint32 field5 = 5 [(.validate.rules) = {
inline void Large::clear_field5() {
  field5_ = 0u;
}
inline ::google::protobuf::uint32 Large::field5() const {
  // @@protoc_insertion_point(field_get:pgv.Large.field5)
  return field5_;
}
inline void Large::set_field5(::google::protobuf::uint32 value) {
  
  field5_ = value;
  // @@protoc_insertion_point(field_set:pgv.Large.field5)
}

// uint32 field6 = 6 [(.validate.rules) = {
inline void Large::clear_field6() {
  field6_ = 0u;
}
inline ::google::protobuf::uint32 Large::field6() const {
  // @@protoc_insertion_point(field_get:pgv.Large.field6)
  return field6_;
}
inline void Large::set_field6(::google::protobuf::uint32 value) {
  
  field6_ = value;
  // @@protoc_insertion_point(field_set:pgv.Large.field6)
}

// uint32 field7 = 7 [(.validate.rules) = {
inline void Large::clear_field7() {
  field7_ = 0u;
}
inline ::google::protobuf::uint32 Large::field7() const {
  // @@protoc_insertion_point(field_get:pgv.Large.field7)
  return field7_;
}
inline void Large::set_field7(::google::protobuf::uint32 value) {
  
  field7_ = value;
  // @@protoc_insertion_point(field_set:pgv.Large.field7)
}

// uint32 field8 = 8 [(.validate.rules) = {
inline void Large::clear_field8() {
  field8_ = 0u;
}
inline ::google::protobuf::uint32 Large::field8() const {
  // @@protoc_insertion_point(field_get:pgv.Large.field8)
  return field8_;
}
inline void Large::set_field8(::google::protobuf::uint32 value) {
  
  field8_ = value;
  // @@protoc_insertion_point(field_set:pgv.Large.field8)
}

// uint32 field9 = 9 [(.validate.rules) = {
inline void Large::clear_field9() {
  field9_ = 0u;
}
inline ::google::protobuf::uint32 Large::field9() const {
  // @@protoc_insertion_point(field_get:pgv.Large.field9)
  return field9_;
}
inline void Large::set_field9(::google::protobuf::uint32 value) {
  
  field9_ = value;
  // @@protoc_insertion_point(field_set:pgv.Large.field9)
}

// uint32 field10 = 10 [(.validate.rules) = {
inline void Large::clear_field10() {
  field10_ = 0u;
}
inline ::google::protobuf::uint32 Large::field10() const {
  // @@protoc_insertion_point(field_get:pgv.Large.field10)
  return field10_;
}
inline void Large::set_field10(::google::protobuf::uint32 value) {
  
  field10_ = value;
  // @@protoc_insertion_point(field_set:pgv.Large.field10)
}

// uint32 field11 = 11 [(.validate.rules) = {
inline void Large::clear_field11() {
  field11_ = 0u;
}
inline ::google::protobuf::uint32 Large::field11() const {
  // @@protoc_insertion_point(field_get:pgv.Large.field11)
  return field11_;
}
inline void Large::set_field11(::google::protobuf::uint32 value) {
  
  field11_ = value;
  // @@protoc_insertion_point(field_set:pgv.Large.field11)
}

// uint32 field12 = 12 [(.validate.rules) = {
inline void Large::clear_field12() {
  field12_ = 0u;
}
inline ::google::protobuf::uint32 Large::field12() const {
  // @@protoc_insertion_point(field_get:pgv.Large.field12)
  return field12_;
}
inline void Large::set_field12(::google::protobuf::uint32 value) {
  
  field12_ = value;
  // @@protoc_insertion_point(field_set:pgv.Large.field12)
}

// uint32 field13 = 13 [(.validate.rules) = {
inline void Large::clear_field13() {
  field13_ = 0u;
}
inline ::google::protobuf::uint32 Large::field13() const {
  // @@protoc_insertion_point(field_get:pgv.Large.field13)
  return field13_;
}
inline void Large::set_field13(::google::protobuf::uint32 value) {
  
  field13_ = value;
  // @@protoc_insertion_point(field_set:pgv.Large.field13)
}

// uint32 field14 = 14 [(.validate.rules) = {
inline void Large::clear_field14() {
  field14_ = 0u;
}
inline ::google::protobuf::uint32 Large::field14() const {
  // @@protoc_insertion_point(field_get:pgv.Large.field14)
  return field14_;
}
inline void Large::set_field14(::google::protobuf::uint32 value) {
  
  field14_ = value;
  // @@protoc_insertion_point(field_set:pgv.Large.field14)
}

// uint32 field15 = 15 [(.validate.rules) = {
inline void Large::clear_field15() {
  field15_ = 0u;
}
inline ::google::protobuf::uint32 Large::field15() const {
  // @@protoc_insertion_point(field_get:pgv.Large.field15)
  return field15_;
}
inline void Large::set_field15(::google::protobuf::uint32 value) {
  
  field15_ = value;
  // @@protoc_insertion_point(field_set:pgv.Large.field15)
}

// uint32 field16 = 16 [(.validate.rules) = {
inline void Large::clear_field16() {
  field16_ = 0u;
}
inline ::google::protobuf::uint32 Large::field16() const {
  // @@protoc_insertion_point(field_get:pgv.Large.field16)
  return field16_;
}
inline void Large::set_field16(::google::protobuf::uint32 value) {
  
  field16_ = value;
  // @@protoc_insertion_point(field_set:pgv.Large.field16)
}

// uint32 field17 = 17 [(.validate.rules) = {
inline void Large::clear_field17() {
  field17_ = 0u;
}
inline ::google::protobuf::uint32 Large::field17() const {
  // @@protoc_insertion_point(field_get:pgv.Large.field17)
  return field17_;
}
inline void Large::set_field17(::google::protobuf::uint32 value) {
  
  field17_ = value;
  // @@protoc_insertion_point(field_set:pgv.Large.field17)
}

// uint32 field18 = 18 [(.validate.rules) = {
inline void Large::clear_field18() {
  field18_ = 0u;
}
inline ::google::protobuf::uint32 Large::field18() const {
  // @@protoc_insertion_point(field_get:pgv.Large.field18)
  return field18_;
}
inline void Large::set_field18(::google::protobuf::uint32 value) {
  
  field18_ = value;
  // @@protoc_insertion_point(field_set:pgv.Large.field18)
}

// uint32 field19 = 19 [(.validate.rules) = {
inline void Large::clear_field19() {
  field19_ = 0u;
}
inline ::google::protobuf::uint32 Large::field19() const {
  // @@protoc_insertion_point(field_get:pgv.Large.field19)
  return field19_;
}
inline void Large::set_field19(::google::protobuf::uint32 value) {
  
  field19_ = value;
  // @@protoc_insertion_point(field_set:pgv.Large.field19)
}

// uint32 field20 = 20 [(.validate.rules) = {
inline void Large::clear_field20() {
  field20_ = 0u;
}
inline ::google::protobuf::uint32 Large::field20() const {
  // @@protoc_insertion_point(field_get:pgv.Large.field20)
  return field20_;
}
inline void Large::set_field20(::google::protobuf::uint32 value) {
  
  field20_ = value;
  // @@protoc_insertion_point(field_set:pgv.Large.field20)
}

// uint32 field21 = 21 [(.validate.rules) = {
inline void Large::clear_field21() {
  field21_ = 0u;
}
inline ::google::protobuf::uint32 Large::field21() const {
  // @@protoc_insertion_point(field_get:pgv.Large.field21)
  return field21_;
}
inline void Large::set_field21(::google::protobuf::uint32 value) {
  
  field21_ = value;
  // @@protoc_insertion_point(field_set:pgv.Large.field21)
}

// uint32 field22 = 22 [(.validate.rules) = {
inline void Large::clear_field22() {
  field22_ = 0u;
}
inline ::google::protobuf::uint32 Large::field22() const {
  // @@protoc_insertion_point(field_get:pgv.Large.field22)
  return field22_;
}
inline void Large::set_field22(::google::protobuf::uint32 value) {
  
  field22_ = value;
  // @@protoc_insertion_point(field_set:pgv.Large.field22)
}

// uint32 field23 = 23 [(.validate.rules) = {
inline void Large::clear_field23() {
  field23_ = 0u;
}
inline ::google::protobuf::uint32 Large::field23() const {
  // @@protoc_insertion_point(field_get:pgv.Large.field23)
  return field23_;
}
inline void Large::set_field23(::google::protobuf::uint32 value) {
  
  field23_ = value;
  // @@protoc_insertion_point(field_set:pgv.Large.field23)
}

// uint32 field24 = 24 [(.validate.rules) = {
inline void Large::clear_field24() {
  field24_ = 0u;
}
inline ::google::protobuf::uint32 Large::field24() const {
  // @@protoc_insertion_point(field_get:pgv.Large.field24)
  return field24_;
}
inline void Large::set_field24(::google::protobuf::uint32 value) {
  
  field24_ = value;
  // @@protoc_insertion_point(field_set:pgv.Large.field24)
}

// uint32 field25 = 25 [(.validate.rules) = {
inline void Large::clear_field25() {
  field25_ = 0u;
}
inline ::google::protobuf::uint32 Large::field25() const {
  // @@protoc_insertion_point(field_get:pgv.Large.field25)
  return field25_;
}
inline void Large::set_field25(::google::protobuf::uint32 value) {
  
  field25_ = value;
  // @@protoc_insertion_point(field_set:pgv.Large.field25)
}

// uint32 field26 = 26 [(.validate.rules) = {
inline void Large::clear_field26() {
  field26_ = 0u;
}
inline ::google::protobuf::uint32 Large::field26() const {
  // @@protoc_insertion_point(field_get:pgv.Large.field26)
  return field26_;
}
inline void Large::set_field26(::google::protobuf::uint32 value) {
  
  field26_ = value;
  // @@protoc_insertion_point(field_set:pgv.Large.field26)
}

// uint32 field27 = 27 [(.validate.rules) = {
inline void Large::clear_field27() {
  field27_ = 0u;
}
inline ::google::protobuf::uint32 Large::field27() const {
  // @@protoc_insertion_point(field_get:pgv.Large.field27)
  return field27_;
}
inline void Large::set_field27(::google::protobuf::uint32 value) {
  
  field27_ = value;
  // @@protoc_insertion_point(field_set:pgv.Large.field27)
}

// uint32 field28 = 28 [(.validate.rules) = {
inline void Large::clear_field28() {
  field28_ = 0u;
}
inline ::google::protobuf::uint32 Large::field28() const {
  // @@protoc_insertion_point(field_get:pgv.Large.field28)
  return field28_;
}
inline void Large::set_field28(::google::protobuf::uint32 value) {
  
  field28_ = value;
  // @@protoc_insertion_point(field_set:pgv.Large.field28)
}

// uint32 field29 = 29 [(.validate.rules) = {
inline void Large::clear_field29() {
  field29_ = 0u;
}
inline ::google::protobuf::uint32 Large::field29() const {
  // @@protoc_insertion_point(field_get:pgv.Large.field29)
  return field29_;
}
inline void Large::set_field29(::google::protobuf::uint32 value) {
  
  field29_ = value;
  // @@protoc_insertion_point(field_set:pgv.Large.field29)
}

// uint32 field30 = 30 [(.validate.rules) = {
inline void Large::clear_field30() {
  field30_ = 0u;
}
inline ::google::protobuf::uint32 Large::field30() const {
  // @@protoc_insertion_point(field_get:pgv.Large.field30)
  return field30_;
}
inline void Large::set_field30(::google::protobuf::uint32 value) {
  
  field30_ = value;
  // @@protoc_insertion_point(field_set:pgv.Large.field30)
}

// uint64 field31 = 31 [(.validate.rules) = {
inline void Large::clear_field31() {
  field31_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Large::field31() const {
  // @@protoc_insertion_point(field_get:pgv.Large.field31)
  return field31_;
}
inline void Large::set_field31(::google::protobuf::uint64 value) {
  
  field31_ = value;
  // @@protoc_insertion_point(field_set:pgv.Large.field31)
}

// uint64 field32 = 32 [(.validate.rules) = {
inline void Large::clear_field32() {
  field32_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Large::field32() const {
  // @@protoc_insertion_point(field_get:pgv.Large.field32)
  return field32_;
}
inline void Large::set_field32(::google::protobuf::uint64 value) {
  
  field32_ = value;
  // @@protoc_insertion_point(field_set:pgv.Large.field32)
}

// uint64 field33 = 33 [(.validate.rules) = {
inline void Large::clear_field33() {
  field33_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Large::field33() const {
  // @@protoc_insertion_point(field_get:pgv.Large.field33)
  return field33_;
}
inline void Large::set_field33(::google::protobuf::uint64 value) {
  
  field33_ = value;
  // @@protoc_insertion_point(field_set:pgv.Large.field33)
}

// uint64 field34 = 34 [(.validate.rules) = {
inline void Large::clear_field34() {
  field34_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Large::field34() const {
  // @@protoc_insertion_point(field_get:pgv.Large.field34)
  return field34_;
}
inline void Large::set_field34(::google::protobuf::uint64 value) {
  
  field34_ = value;
  // @@protoc_insertion_point(field_set:pgv.Large.field34)
}

// uint64 field35 = 35 [(.validate.rules) = {
inline void Large::clear_field35() {
  field35_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Large::field35() const {
  // @@protoc_insertion_point(field_get:pgv.Large.field35)
  return field35_;
}
inline void Large::set_field35(::google::protobuf::uint64 value) {
  
  field35_ = value;
  // @@protoc_insertion_point(field_set:pgv.Large.field35)
}

// uint64 field36 = 36 [(.validate.rules) = {
inline void Large::clear_field36() {
  field36_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Large::field36() const {
  // @@protoc_insertion_point(field_get:pgv.Large.field36)
  return field36_;
}
inline void Large::set_field36(::google::protobuf::uint64 value) {
  
  field36_ = value;
  // @@protoc_insertion_point(field_set:pgv.Large.field36)
}

// uint64 field37 = 37 [(.validate.rules) = {
inline void Large::clear_field37() {
  field37_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Large::field37() const {
  // @@protoc_insertion_point(field_get:pgv.Large.field37)
  return field37_;
}
inline void Large::set_field37(::google::protobuf::uint64 value) {
  
  field37_ = value;
  // @@protoc_insertion_point(field_set:pgv.Large.field37)
}

// uint64 field38 = 38 [(.validate.rules) = {
inline void Large::clear_field38() {
  field38_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Large::field38() const {
  // @@protoc_insertion_point(field_get:pgv.Large.field38)
  return field38_;
}
inline void Large::set_field38(::google::protobuf::uint64 value) {
  
  field38_ = value;
  // @@protoc_insertion_point(field_set:pgv.Large.field38)
}

// uint64 field39 = 39 [(.validate.rules) = {
inline void Large::clear_field39() {
  field39_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Large::field39() const {
  // @@protoc_insertion_point(field_get:pgv.Large.field39)
  return field39_;
}
inline void Large::set_field39(::google::protobuf::uint64 value) {
  
  field39_ = value;
  // @@protoc_insertion_point(field_set:pgv.Large.field39)
}

// uint64 field40 = 40 [(.validate.rules) = {
inline void Large::clear_field40() {
  field40_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Large::field40() const {
  // @@protoc_insertion_point(field_get:pgv.Large.field40)
  return field40_;
}
inline void Large::set_field40(::google::protobuf::uint64 value) {
  
  field40_ = value;
  // @@protoc_insertion_point(field_set:pgv.Large.field40)
}

// .pgv.MessageB field41 = 41;
inline bool Large::has_field41() const {
  return this != internal_default_instance() && field41_ != NULL;
}
inline void Large::clear_field41() {
  if (GetArenaNoVirtual() == NULL && field41_ != NULL) delete field41_;
  field41_ = NULL;
}
inline const ::pgv::MessageB& Large::field41() const {
  const ::pgv::MessageB* p = field41_;
  // @@protoc_insertion_point(field_get:pgv.Large.field41)
  return p != NULL ? *p : *reinterpret_cast<const ::pgv::MessageB*>(
      &::pgv::_MessageB_default_instance_);
}
inline ::pgv::MessageB* Large::mutable_field41() {
  
  if (field41_ == NULL) {
    field41_ = new ::pgv::MessageB;
  }
  // @@protoc_insertion_point(field_mutable:pgv.Large.field41)
  return field41_;
}
inline ::pgv::MessageB* Large::release_field41() {
  // @@protoc_insertion_point(field_release:pgv.Large.field41)
  
  ::pgv::MessageB* temp = field41_;
  field41_ = NULL;
  return temp;
}
inline void Large::set_allocated_field41(::pgv::MessageB* field41) {
  delete field41_;
  field41_ = field41;
  if (field41) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pgv.Large.field41)
}

// .pgv.MessageC field42 = 42;
inline bool Large::has_field42() const {
  return this != internal_default_instance() && field42_ != NULL;
}
inline void Large::clear_field42() {
  if (GetArenaNoVirtual() == NULL && field42_ != NULL) delete field42_;
  field42_ = NULL;
}
inline const ::pgv::MessageC& Large::field42() const {
  const ::pgv::MessageC* p = field42_;
  // @@protoc_insertion_point(field_get:pgv.Large.field42)
  return p != NULL ? *p : *reinterpret_cast<const ::pgv::MessageC*>(
      &::pgv::_MessageC_default_instance_);
}
inline ::pgv::MessageC* Large::mutable_field42() {
  
  if (field42_ == NULL) {
    field42_ = new ::pgv::MessageC;
  }
  // @@protoc_insertion_point(field_mutable:pgv.Large.field42)
  return field42_;
}
inline ::pgv::MessageC* Large::release_field42() {
  // @@protoc_insertion_point(field_release:pgv.Large.field42)
  
  ::pgv::MessageC* temp = field42_;
  field42_ = NULL;
  return temp;
}
inline void Large::set_allocated_field42(::pgv::MessageC* field42) {
  delete field42_;
  field42_ = field42;
  if (field42) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pgv.Large.field42)
}

// .pgv.MessageD field43 = 43;
inline bool Large::has_field43() const {
  return this != internal_default_instance() && field43_ != NULL;
}
inline void Large::clear_field43() {
  if (GetArenaNoVirtual() == NULL && field43_ != NULL) delete field43_;
  field43_ = NULL;
}
inline const ::pgv::MessageD& Large::field43() const {
  const ::pgv::MessageD* p = field43_;
  // @@protoc_insertion_point(field_get:pgv.Large.field43)
  return p != NULL ? *p : *reinterpret_cast<const ::pgv::MessageD*>(
      &::pgv::_MessageD_default_instance_);
}
inline ::pgv::MessageD* Large::mutable_field43() {
  
  if (field43_ == NULL) {
    field43_ = new ::pgv::MessageD;
  }
  // @@protoc_insertion_point(field_mutable:pgv.Large.field43)
  return field43_;
}
inline ::pgv::MessageD* Large::release_field43() {
  // @@protoc_insertion_point(field_release:pgv.Large.field43)
  
  ::pgv::MessageD* temp = field43_;
  field43_ = NULL;
  return temp;
}
inline void Large::set_allocated_field43(::pgv::MessageD* field43) {
  delete field43_;
  field43_ = field43;
  if (field43) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pgv.Large.field43)
}

// .pgv.MessageE field44 = 44;
inline bool Large::has_field44() const {
  return this != internal_default_instance() && field44_ != NULL;
}
inline void Large::clear_field44() {
  if (GetArenaNoVirtual() == NULL && field44_ != NULL) delete field44_;
  field44_ = NULL;
}
inline const ::pgv::MessageE& Large::field44() const {
  const ::pgv::MessageE* p = field44_;
  // @@protoc_insertion_point(field_get:pgv.Large.field44)
  return p != NULL ? *p : *reinterpret_cast<const ::pgv::MessageE*>(
      &::pgv::_MessageE_default_instance_);
}
inline ::pgv::MessageE* Large::mutable_field44() {
  
  if (field44_ == NULL) {
    field44_ = new ::pgv::MessageE;
  }
  // @@protoc_insertion_point(field_mutable:pgv.Large.field44)
  return field44_;
}
inline ::pgv::MessageE* Large::release_field44() {
  // @@protoc_insertion_point(field_release:pgv.Large.field44)
  
  ::pgv::MessageE* temp = field44_;
  field44_ = NULL;
  return temp;
}
inline void Large::set_allocated_field44(::pgv::MessageE* field44) {
  delete field44_;
  field44_ = field44;
  if (field44) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pgv.Large.field44)
}

// .pgv.MessageF field45 = 45;
inline bool Large::has_field45() const {
  return this != internal_default_instance() && field45_ != NULL;
}
inline void Large::clear_field45() {
  if (GetArenaNoVirtual() == NULL && field45_ != NULL) delete field45_;
  field45_ = NULL;
}
inline const ::pgv::MessageF& Large::field45() const {
  const ::pgv::MessageF* p = field45_;
  // @@protoc_insertion_point(field_get:pgv.Large.field45)
  return p != NULL ? *p : *reinterpret_cast<const ::pgv::MessageF*>(
      &::pgv::_MessageF_default_instance_);
}
inline ::pgv::MessageF* Large::mutable_field45() {
  
  if (field45_ == NULL) {
    field45_ = new ::pgv::MessageF;
  }
  // @@protoc_insertion_point(field_mutable:pgv.Large.field45)
  return field45_;
}
inline ::pgv::MessageF* Large::release_field45() {
  // @@protoc_insertion_point(field_release:pgv.Large.field45)
  
  ::pgv::MessageF* temp = field45_;
  field45_ = NULL;
  return temp;
}
inline void Large::set_allocated_field45(::pgv::MessageF* field45) {
  delete field45_;
  field45_ = field45;
  if (field45) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pgv.Large.field45)
}

// .pgv.MessageB field46 = 46;
inline bool Large::has_field46() const {
  return this != internal_default_instance() && field46_ != NULL;
}
inline void Large::clear_field46() {
  if (GetArenaNoVirtual() == NULL && field46_ != NULL) delete field46_;
  field46_ = NULL;
}
inline const ::pgv::MessageB& Large::field46() const {
  const ::pgv::MessageB* p = field46_;
  // @@protoc_insertion_point(field_get:pgv.Large.field46)
  return p != NULL ? *p : *reinterpret_cast<const ::pgv::MessageB*>(
      &::pgv::_MessageB_default_instance_);
}
inline ::pgv::MessageB* Large::mutable_field46() {
  
  if (field46_ == NULL) {
    field46_ = new ::pgv::MessageB;
  }
  // @@protoc_insertion_point(field_mutable:pgv.Large.field46)
  return field46_;
}
inline ::pgv::MessageB* Large::release_field46() {
  // @@protoc_insertion_point(field_release:pgv.Large.field46)
  
  ::pgv::MessageB* temp = field46_;
  field46_ = NULL;
  return temp;
}
inline void Large::set_allocated_field46(::pgv::MessageB* field46) {
  delete field46_;
  field46_ = field46;
  if (field46) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pgv.Large.field46)
}

// .pgv.MessageC field47 = 47;
inline bool Large::has_field47() const {
  return this != internal_default_instance() && field47_ != NULL;
}
inline void Large::clear_field47() {
  if (GetArenaNoVirtual() == NULL && field47_ != NULL) delete field47_;
  field47_ = NULL;
}
inline const ::pgv::MessageC& Large::field47() const {
  const ::pgv::MessageC* p = field47_;
  // @@protoc_insertion_point(field_get:pgv.Large.field47)
  return p != NULL ? *p : *reinterpret_cast<const ::pgv::MessageC*>(
      &::pgv::_MessageC_default_instance_);
}
inline ::pgv::MessageC* Large::mutable_field47() {
  
  if (field47_ == NULL) {
    field47_ = new ::pgv::MessageC;
  }
  // @@protoc_insertion_point(field_mutable:pgv.Large.field47)
  return field47_;
}
inline ::pgv::MessageC* Large::release_field47() {
  // @@protoc_insertion_point(field_release:pgv.Large.field47)
  
  ::pgv::MessageC* temp = field47_;
  field47_ = NULL;
  return temp;
}
inline void Large::set_allocated_field47(::pgv::MessageC* field47) {
  delete field47_;
  field47_ = field47;
  if (field47) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pgv.Large.field47)
}

// .pgv.MessageD field48 = 48;
inline bool Large::has_field48() const {
  return this != internal_default_instance() && field48_ != NULL;
}
inline void Large::clear_field48() {
  if (GetArenaNoVirtual() == NULL && field48_ != NULL) delete field48_;
  field48_ = NULL;
}
inline const ::pgv::MessageD& Large::field48() const {
  const ::pgv::MessageD* p = field48_;
  // @@protoc_insertion_point(field_get:pgv.Large.field48)
  return p != NULL ? *p : *reinterpret_cast<const ::pgv::MessageD*>(
      &::pgv::_MessageD_default_instance_);
}
inline ::pgv::MessageD* Large::mutable_field48() {
  
  if (field48_ == NULL) {
    field48_ = new ::pgv::MessageD;
  }
  // @@protoc_insertion_point(field_mutable:pgv.Large.field48)
  return field48_;
}
inline ::pgv::MessageD* Large::release_field48() {
  // @@protoc_insertion_point(field_release:pgv.Large.field48)
  
  ::pgv::MessageD* temp = field48_;
  field48_ = NULL;
  return temp;
}
inline void Large::set_allocated_field48(::pgv::MessageD* field48) {
  delete field48_;
  field48_ = field48;
  if (field48) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pgv.Large.field48)
}

// .pgv.MessageE field49 = 49;
inline bool Large::has_field49() const {
  return this != internal_default_instance() && field49_ != NULL;
}
inline void Large::clear_field49() {
  if (GetArenaNoVirtual() == NULL && field49_ != NULL) delete field49_;
  field49_ = NULL;
}
inline const ::pgv::MessageE& Large::field49() const {
  const ::pgv::MessageE* p = field49_;
  // @@protoc_insertion_point(field_get:pgv.Large.field49)
  return p != NULL ? *p : *reinterpret_cast<const ::pgv::MessageE*>(
      &::pgv::_MessageE_default_instance_);
}
inline ::pgv::MessageE* Large::mutable_field49() {
  
  if (field49_ == NULL) {
    field49_ = new ::pgv::MessageE;
  }
  // @@protoc_insertion_point(field_mutable:pgv.Large.field49)
  return field49_;
}
inline ::pgv::MessageE* Large::release_field49() {
  // @@protoc_insertion_point(field_release:pgv.Large.field49)
  
  ::pgv::MessageE* temp = field49_;
  field49_ = NULL;
  return temp;
}
inline void Large::set_allocated_field49(::pgv::MessageE* field49) {
  delete field49_;
  field49_ = field49;
  if (field49) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pgv.Large.field49)
}

// .pgv.MessageF field50 = 50;
inline bool Large::has_field50() const {
  return this != internal_default_instance() && field50_ != NULL;
}
inline void Large::clear_field50() {
  if (GetArenaNoVirtual() == NULL && field50_ != NULL) delete field50_;
  field50_ = NULL;
}
inline const ::pgv::MessageF& Large::field50() const {
  const ::pgv::MessageF* p = field50_;
  // @@protoc_insertion_point(field_get:pgv.Large.field50)
  return p != NULL ? *p : *reinterpret_cast<const ::pgv::MessageF*>(
      &::pgv::_MessageF_default_instance_);
}
inline ::pgv::MessageF* Large::mutable_field50() {
  
  if (field50_ == NULL) {
    field50_ = new ::pgv::MessageF;
  }
  // @@protoc_insertion_point(field_mutable:pgv.Large.field50)
  return field50_;
}
inline ::pgv::MessageF* Large::release_field50() {
  // @@protoc_insertion_point(field_release:pgv.Large.field50)
  
  ::pgv::MessageF* temp = field50_;
  field50_ = NULL;
  return temp;
}
inline void Large::set_allocated_field50(::pgv::MessageF* field50) {
  delete field50_;
  field50_ = field50;
  if (field50) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pgv.Large.field50)
}

// bytes field51 = 51 [(.validate.rules) = {
inline void Large::clear_field51() {
  field51_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Large::field51() const {
  // @@protoc_insertion_point(field_get:pgv.Large.field51)
  return field51_.GetNoArena();
}
inline void Large::set_field51(const ::std::string& value) {
  
  field51_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pgv.Large.field51)
}
#if LANG_CXX11
inline void Large::set_field51(::std::string&& value) {
  
  field51_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pgv.Large.field51)
}
#endif
inline void Large::set_field51(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  field51_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pgv.Large.field51)
}
inline void Large::set_field51(const void* value, size_t size) {
  
  field51_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pgv.Large.field51)
}
inline ::std::string* Large::mutable_field51() {
  
  // @@protoc_insertion_point(field_mutable:pgv.Large.field51)
  return field51_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Large::release_field51() {
  // @@protoc_insertion_point(field_release:pgv.Large.field51)
  
  return field51_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Large::set_allocated_field51(::std::string* field51) {
  if (field51 != NULL) {
    
  } else {
    
  }
  field51_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field51);
  // @@protoc_insertion_point(field_set_allocated:pgv.Large.field51)
}

// bytes field52 = 52 [(.validate.rules) = {
inline void Large::clear_field52() {
  field52_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Large::field52() const {
  // @@protoc_insertion_point(field_get:pgv.Large.field52)
  return field52_.GetNoArena();
}
inline void Large::set_field52(const ::std::string& value) {
  
  field52_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pgv.Large.field52)
}
#if LANG_CXX11
inline void Large::set_field52(::std::string&& value) {
  
  field52_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pgv.Large.field52)
}
#endif
inline void Large::set_field52(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  field52_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pgv.Large.field52)
}
inline void Large::set_field52(const void* value, size_t size) {
  
  field52_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pgv.Large.field52)
}
inline ::std::string* Large::mutable_field52() {
  
  // @@protoc_insertion_point(field_mutable:pgv.Large.field52)
  return field52_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Large::release_field52() {
  // @@protoc_insertion_point(field_release:pgv.Large.field52)
  
  return field52_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Large::set_allocated_field52(::std::string* field52) {
  if (field52 != NULL) {
    
  } else {
    
  }
  field52_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field52);
  // @@protoc_insertion_point(field_set_allocated:pgv.Large.field52)
}

// bytes field53 = 53 [(.validate.rules) = {
inline void Large::clear_field53() {
  field53_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Large::field53() const {
  // @@protoc_insertion_point(field_get:pgv.Large.field53)
  return field53_.GetNoArena();
}
inline void Large::set_field53(const ::std::string& value) {
  
  field53_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pgv.Large.field53)
}
#if LANG_CXX11
inline void Large::set_field53(::std::string&& value) {
  
  field53_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pgv.Large.field53)
}
#endif
inline void Large::set_field53(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  field53_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pgv.Large.field53)
}
inline void Large::set_field53(const void* value, size_t size) {
  
  field53_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pgv.Large.field53)
}
inline ::std::string* Large::mutable_field53() {
  
  // @@protoc_insertion_point(field_mutable:pgv.Large.field53)
  return field53_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Large::release_field53() {
  // @@protoc_insertion_point(field_release:pgv.Large.field53)
  
  return field53_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Large::set_allocated_field53(::std::string* field53) {
  if (field53 != NULL) {
    
  } else {
    
  }
  field53_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field53);
  // @@protoc_insertion_point(field_set_allocated:pgv.Large.field53)
}

// bytes field54 = 54 [(.validate.rules) = {
inline void Large::clear_field54() {
  field54_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Large::field54() const {
  // @@protoc_insertion_point(field_get:pgv.Large.field54)
  return field54_.GetNoArena();
}
inline void Large::set_field54(const ::std::string& value) {
  
  field54_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pgv.Large.field54)
}
#if LANG_CXX11
inline void Large::set_field54(::std::string&& value) {
  
  field54_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pgv.Large.field54)
}
#endif
inline void Large::set_field54(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  field54_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pgv.Large.field54)
}
inline void Large::set_field54(const void* value, size_t size) {
  
  field54_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pgv.Large.field54)
}
inline ::std::string* Large::mutable_field54() {
  
  // @@protoc_insertion_point(field_mutable:pgv.Large.field54)
  return field54_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Large::release_field54() {
  // @@protoc_insertion_point(field_release:pgv.Large.field54)
  
  return field54_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Large::set_allocated_field54(::std::string* field54) {
  if (field54 != NULL) {
    
  } else {
    
  }
  field54_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field54);
  // @@protoc_insertion_point(field_set_allocated:pgv.Large.field54)
}

// bytes field55 = 55 [(.validate.rules) = {
inline void Large::clear_field55() {
  field55_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Large::field55() const {
  // @@protoc_insertion_point(field_get:pgv.Large.field55)
  return field55_.GetNoArena();
}
inline void Large::set_field55(const ::std::string& value) {
  
  field55_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pgv.Large.field55)
}
#if LANG_CXX11
inline void Large::set_field55(::std::string&& value) {
  
  field55_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:pgv.Large.field55)
}
#endif
inline void Large::set_field55(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  field55_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pgv.Large.field55)
}
inline void Large::set_field55(const void* value, size_t size) {
  
  field55_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pgv.Large.field55)
}
inline ::std::string* Large::mutable_field55() {
  
  // @@protoc_insertion_point(field_mutable:pgv.Large.field55)
  return field55_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Large::release_field55() {
  // @@protoc_insertion_point(field_release:pgv.Large.field55)
  
  return field55_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Large::set_allocated_field55(::std::string* field55) {
  if (field55 != NULL) {
    
  } else {
    
  }
  field55_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), field55);
  // @@protoc_insertion_point(field_set_allocated:pgv.Large.field55)
}

// .pgv.MessageB field61 = 61;
inline bool Large::has_field61() const {
  return this != internal_default_instance() && field61_ != NULL;
}
inline void Large::clear_field61() {
  if (GetArenaNoVirtual() == NULL && field61_ != NULL) delete field61_;
  field61_ = NULL;
}
inline const ::pgv::MessageB& Large::field61() const {
  const ::pgv::MessageB* p = field61_;
  // @@protoc_insertion_point(field_get:pgv.Large.field61)
  return p != NULL ? *p : *reinterpret_cast<const ::pgv::MessageB*>(
      &::pgv::_MessageB_default_instance_);
}
inline ::pgv::MessageB* Large::mutable_field61() {
  
  if (field61_ == NULL) {
    field61_ = new ::pgv::MessageB;
  }
  // @@protoc_insertion_point(field_mutable:pgv.Large.field61)
  return field61_;
}
inline ::pgv::MessageB* Large::release_field61() {
  // @@protoc_insertion_point(field_release:pgv.Large.field61)
  
  ::pgv::MessageB* temp = field61_;
  field61_ = NULL;
  return temp;
}
inline void Large::set_allocated_field61(::pgv::MessageB* field61) {
  delete field61_;
  field61_ = field61;
  if (field61) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pgv.Large.field61)
}

// .pgv.MessageC field62 = 62;
inline bool Large::has_field62() const {
  return this != internal_default_instance() && field62_ != NULL;
}
inline void Large::clear_field62() {
  if (GetArenaNoVirtual() == NULL && field62_ != NULL) delete field62_;
  field62_ = NULL;
}
inline const ::pgv::MessageC& Large::field62() const {
  const ::pgv::MessageC* p = field62_;
  // @@protoc_insertion_point(field_get:pgv.Large.field62)
  return p != NULL ? *p : *reinterpret_cast<const ::pgv::MessageC*>(
      &::pgv::_MessageC_default_instance_);
}
inline ::pgv::MessageC* Large::mutable_field62() {
  
  if (field62_ == NULL) {
    field62_ = new ::pgv::MessageC;
  }
  // @@protoc_insertion_point(field_mutable:pgv.Large.field62)
  return field62_;
}
inline ::pgv::MessageC* Large::release_field62() {
  // @@protoc_insertion_point(field_release:pgv.Large.field62)
  
  ::pgv::MessageC* temp = field62_;
  field62_ = NULL;
  return temp;
}
inline void Large::set_allocated_field62(::pgv::MessageC* field62) {
  delete field62_;
  field62_ = field62;
  if (field62) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pgv.Large.field62)
}

// .pgv.MessageD field63 = 63;
inline bool Large::has_field63() const {
  return this != internal_default_instance() && field63_ != NULL;
}
inline void Large::clear_field63() {
  if (GetArenaNoVirtual() == NULL && field63_ != NULL) delete field63_;
  field63_ = NULL;
}
inline const ::pgv::MessageD& Large::field63() const {
  const ::pgv::MessageD* p = field63_;
  // @@protoc_insertion_point(field_get:pgv.Large.field63)
  return p != NULL ? *p : *reinterpret_cast<const ::pgv::MessageD*>(
      &::pgv::_MessageD_default_instance_);
}
inline ::pgv::MessageD* Large::mutable_field63() {
  
  if (field63_ == NULL) {
    field63_ = new ::pgv::MessageD;
  }
  // @@protoc_insertion_point(field_mutable:pgv.Large.field63)
  return field63_;
}
inline ::pgv::MessageD* Large::release_field63() {
  // @@protoc_insertion_point(field_release:pgv.Large.field63)
  
  ::pgv::MessageD* temp = field63_;
  field63_ = NULL;
  return temp;
}
inline void Large::set_allocated_field63(::pgv::MessageD* field63) {
  delete field63_;
  field63_ = field63;
  if (field63) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pgv.Large.field63)
}

// .pgv.MessageE field64 = 64;
inline bool Large::has_field64() const {
  return this != internal_default_instance() && field64_ != NULL;
}
inline void Large::clear_field64() {
  if (GetArenaNoVirtual() == NULL && field64_ != NULL) delete field64_;
  field64_ = NULL;
}
inline const ::pgv::MessageE& Large::field64() const {
  const ::pgv::MessageE* p = field64_;
  // @@protoc_insertion_point(field_get:pgv.Large.field64)
  return p != NULL ? *p : *reinterpret_cast<const ::pgv::MessageE*>(
      &::pgv::_MessageE_default_instance_);
}
inline ::pgv::MessageE* Large::mutable_field64() {
  
  if (field64_ == NULL) {
    field64_ = new ::pgv::MessageE;
  }
  // @@protoc_insertion_point(field_mutable:pgv.Large.field64)
  return field64_;
}
inline ::pgv::MessageE* Large::release_field64() {
  // @@protoc_insertion_point(field_release:pgv.Large.field64)
  
  ::pgv::MessageE* temp = field64_;
  field64_ = NULL;
  return temp;
}
inline void Large::set_allocated_field64(::pgv::MessageE* field64) {
  delete field64_;
  field64_ = field64;
  if (field64) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pgv.Large.field64)
}

// .pgv.MessageF field65 = 65;
inline bool Large::has_field65() const {
  return this != internal_default_instance() && field65_ != NULL;
}
inline void Large::clear_field65() {
  if (GetArenaNoVirtual() == NULL && field65_ != NULL) delete field65_;
  field65_ = NULL;
}
inline const ::pgv::MessageF& Large::field65() const {
  const ::pgv::MessageF* p = field65_;
  // @@protoc_insertion_point(field_get:pgv.Large.field65)
  return p != NULL ? *p : *reinterpret_cast<const ::pgv::MessageF*>(
      &::pgv::_MessageF_default_instance_);
}
inline ::pgv::MessageF* Large::mutable_field65() {
  
  if (field65_ == NULL) {
    field65_ = new ::pgv::MessageF;
  }
  // @@protoc_insertion_point(field_mutable:pgv.Large.field65)
  return field65_;
}
inline ::pgv::MessageF* Large::release_field65() {
  // @@protoc_insertion_point(field_release:pgv.Large.field65)
  
  ::pgv::MessageF* temp = field65_;
  field65_ = NULL;
  return temp;
}
inline void Large::set_allocated_field65(::pgv::MessageF* field65) {
  delete field65_;
  field65_ = field65;
  if (field65) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pgv.Large.field65)
}

// .pgv.MessageB field66 = 66;
inline bool Large::has_field66() const {
  return this != internal_default_instance() && field66_ != NULL;
}
inline void Large::clear_field66() {
  if (GetArenaNoVirtual() == NULL && field66_ != NULL) delete field66_;
  field66_ = NULL;
}
inline const ::pgv::MessageB& Large::field66() const {
  const ::pgv::MessageB* p = field66_;
  // @@protoc_insertion_point(field_get:pgv.Large.field66)
  return p != NULL ? *p : *reinterpret_cast<const ::pgv::MessageB*>(
      &::pgv::_MessageB_default_instance_);
}
inline ::pgv::MessageB* Large::mutable_field66() {
  
  if (field66_ == NULL) {
    field66_ = new ::pgv::MessageB;
  }
  // @@protoc_insertion_point(field_mutable:pgv.Large.field66)
  return field66_;
}
inline ::pgv::MessageB* Large::release_field66() {
  // @@protoc_insertion_point(field_release:pgv.Large.field66)
  
  ::pgv::MessageB* temp = field66_;
  field66_ = NULL;
  return temp;
}
inline void Large::set_allocated_field66(::pgv::MessageB* field66) {
  delete field66_;
  field66_ = field66;
  if (field66) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pgv.Large.field66)
}

// .pgv.MessageC field67 = 67;
inline bool Large::has_field67() const {
  return this != internal_default_instance() && field67_ != NULL;
}
inline void Large::clear_field67() {
  if (GetArenaNoVirtual() == NULL && field67_ != NULL) delete field67_;
  field67_ = NULL;
}
inline const ::pgv::MessageC& Large::field67() const {
  const ::pgv::MessageC* p = field67_;
  // @@protoc_insertion_point(field_get:pgv.Large.field67)
  return p != NULL ? *p : *reinterpret_cast<const ::pgv::MessageC*>(
      &::pgv::_MessageC_default_instance_);
}
inline ::pgv::MessageC* Large::mutable_field67() {
  
  if (field67_ == NULL) {
    field67_ = new ::pgv::MessageC;
  }
  // @@protoc_insertion_point(field_mutable:pgv.Large.field67)
  return field67_;
}
inline ::pgv::MessageC* Large::release_field67() {
  // @@protoc_insertion_point(field_release:pgv.Large.field67)
  
  ::pgv::MessageC* temp = field67_;
  field67_ = NULL;
  return temp;
}
inline void Large::set_allocated_field67(::pgv::MessageC* field67) {
  delete field67_;
  field67_ = field67;
  if (field67) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pgv.Large.field67)
}

// .pgv.MessageD field68 = 68;
inline bool Large::has_field68() const {
  return this != internal_default_instance() && field68_ != NULL;
}
inline void Large::clear_field68() {
  if (GetArenaNoVirtual() == NULL && field68_ != NULL) delete field68_;
  field68_ = NULL;
}
inline const ::pgv::MessageD& Large::field68() const {
  const ::pgv::MessageD* p = field68_;
  // @@protoc_insertion_point(field_get:pgv.Large.field68)
  return p != NULL ? *p : *reinterpret_cast<const ::pgv::MessageD*>(
      &::pgv::_MessageD_default_instance_);
}
inline ::pgv::MessageD* Large::mutable_field68() {
  
  if (field68_ == NULL) {
    field68_ = new ::pgv::MessageD;
  }
  // @@protoc_insertion_point(field_mutable:pgv.Large.field68)
  return field68_;
}
inline ::pgv::MessageD* Large::release_field68() {
  // @@protoc_insertion_point(field_release:pgv.Large.field68)
  
  ::pgv::MessageD* temp = field68_;
  field68_ = NULL;
  return temp;
}
inline void Large::set_allocated_field68(::pgv::MessageD* field68) {
  delete field68_;
  field68_ = field68;
  if (field68) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pgv.Large.field68)
}

// .pgv.MessageE field69 = 69;
inline bool Large::has_field69() const {
  return this != internal_default_instance() && field69_ != NULL;
}
inline void Large::clear_field69() {
  if (GetArenaNoVirtual() == NULL && field69_ != NULL) delete field69_;
  field69_ = NULL;
}
inline const ::pgv::MessageE& Large::field69() const {
  const ::pgv::MessageE* p = field69_;
  // @@protoc_insertion_point(field_get:pgv.Large.field69)
  return p != NULL ? *p : *reinterpret_cast<const ::pgv::MessageE*>(
      &::pgv::_MessageE_default_instance_);
}
inline ::pgv::MessageE* Large::mutable_field69() {
  
  if (field69_ == NULL) {
    field69_ = new ::pgv::MessageE;
  }
  // @@protoc_insertion_point(field_mutable:pgv.Large.field69)
  return field69_;
}
inline ::pgv::MessageE* Large::release_field69() {
  // @@protoc_insertion_point(field_release:pgv.Large.field69)
  
  ::pgv::MessageE* temp = field69_;
  field69_ = NULL;
  return temp;
}
inline void Large::set_allocated_field69(::pgv::MessageE* field69) {
  delete field69_;
  field69_ = field69;
  if (field69) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pgv.Large.field69)
}

// .pgv.MessageF field70 = 70;
inline bool Large::has_field70() const {
  return this != internal_default_instance() && field70_ != NULL;
}
inline void Large::clear_field70() {
  if (GetArenaNoVirtual() == NULL && field70_ != NULL) delete field70_;
  field70_ = NULL;
}
inline const ::pgv::MessageF& Large::field70() const {
  const ::pgv::MessageF* p = field70_;
  // @@protoc_insertion_point(field_get:pgv.Large.field70)
  return p != NULL ? *p : *reinterpret_cast<const ::pgv::MessageF*>(
      &::pgv::_MessageF_default_instance_);
}
inline ::pgv::MessageF* Large::mutable_field70() {
  
  if (field70_ == NULL) {
    field70_ = new ::pgv::MessageF;
  }
  // @@protoc_insertion_point(field_mutable:pgv.Large.field70)
  return field70_;
}
inline ::pgv::MessageF* Large::release_field70() {
  // @@protoc_insertion_point(field_release:pgv.Large.field70)
  
  ::pgv::MessageF* temp = field70_;
  field70_ = NULL;
  return temp;
}
inline void Large::set_allocated_field70(::pgv::MessageF* field70) {
  delete field70_;
  field70_ = field70;
  if (field70) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:pgv.Large.field70)
}

// sint32 field101 = 101 [(.validate.rules) = {
inline void Large::clear_field101() {
  field101_ = 0;
}
inline ::google::protobuf::int32 Large::field101() const {
  // @@protoc_insertion_point(field_get:pgv.Large.field101)
  return field101_;
}
inline void Large::set_field101(::google::protobuf::int32 value) {
  
  field101_ = value;
  // @@protoc_insertion_point(field_set:pgv.Large.field101)
}

// sint32 field102 = 102 [(.validate.rules) = {
inline void Large::clear_field102() {
  field102_ = 0;
}
inline ::google::protobuf::int32 Large::field102() const {
  // @@protoc_insertion_point(field_get:pgv.Large.field102)
  return field102_;
}
inline void Large::set_field102(::google::protobuf::int32 value) {
  
  field102_ = value;
  // @@protoc_insertion_point(field_set:pgv.Large.field102)
}

// sint32 field103 = 103 [(.validate.rules) = {
inline void Large::clear_field103() {
  field103_ = 0;
}
inline ::google::protobuf::int32 Large::field103() const {
  // @@protoc_insertion_point(field_get:pgv.Large.field103)
  return field103_;
}
inline void Large::set_field103(::google::protobuf::int32 value) {
  
  field103_ = value;
  // @@protoc_insertion_point(field_set:pgv.Large.field103)
}

// sint32 field104 = 104 [(.validate.rules) = {
inline void Large::clear_field104() {
  field104_ = 0;
}
inline ::google::protobuf::int32 Large::field104() const {
  // @@protoc_insertion_point(field_get:pgv.Large.field104)
  return field104_;
}
inline void Large::set_field104(::google::protobuf::int32 value) {
  
  field104_ = value;
  // @@protoc_insertion_point(field_set:pgv.Large.field104)
}

// sint32 field105 = 105 [(.validate.rules) = {
inline void Large::clear_field105() {
  field105_ = 0;
}
inline ::google::protobuf::int32 Large::field105() const {
  // @@protoc_insertion_point(field_get:pgv.Large.field105)
  return field105_;
}
inline void Large::set_field105(::google::protobuf::int32 value) {
  
  field105_ = value;
  // @@protoc_insertion_point(field_set:pgv.Large.field105)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace pgv

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_large_2eproto__INCLUDED
