#!/usr/bin/env bash
p=$(cd $(dirname $BASH_SOURCE[0]); pwd -P)

showLoading() {
    mypid=$!
    loadingText=$1
    GREEN="\033[0;32m"
    NC="\033[0m"
    echo -ne "$loadingText\r"
    while kill -0 $mypid 2>/dev/null; do
        echo -ne "$loadingText.\r"
        sleep 0.5
        echo -ne "$loadingText..\r"
        sleep 0.5
        echo -ne "$loadingText...\r"
        sleep 0.5
        echo -ne "\r\033[K"
        echo -ne "$loadingText\r"
        sleep 0.5
    done
    echo -e "$loadingText : ${GREEN}FINISHED${NC}"
}

if [ "$2" = "pgv" ] || [ "$2" = "all" ]
then
  $p/res/pgv/compile "$3" & showLoading "Compiling .proto-files with protoc+pgv and generating tests"
fi

if [ "$2" = "vanilla" ] || [ "$2" = "all" ]
then
  $p/res/vanilla/compile "$3" & showLoading "Compiling .proto-files with protoc"
fi

if [ "$4" = "x64" ] || [ "$4" = "arm" ] || [ "$4" = "all" ]
then
  if [ "$3" = "go" ] || [ "$3" = "all" ]
  then
    $p/res/go/compile "$4" & showLoading "Compiling Go"
  fi

  if [ "$3" = "cpp" ] || [ "$3" = "all" ]
  then
    $p/res/cpp/compile "$4" & showLoading "Compiling C++"
  fi
fi

if [ "$1" = "perfy" ] || [ "$1" = "all" ]
then
  if ([ "$4" = "x64" ] && [ "$4" = "arm" ]) || [ "$4" = "all" ]
  then
    GOOS=linux GOARCH=amd64 go build -o $p/out/x64/perfy $p/perfy.go & GOOS=linux GOARCH=arm64 go build -o $p/out/arm/perfy $p/perfy.go & showLoading "Compiling perfy.go"
  elif [ "$4" = "x64" ]
  then
    GOOS=linux GOARCH=amd64 go build -o $p/out/x64/perfy $p/perfy.go & showLoading "Compiling perfy.go"
  elif [ "$4" = "arm" ]
  then
    GOOS=linux GOARCH=arm64 go build -o $p/out/arm/perfy $p/perfy.go & showLoading "Compiling perfy.go"
  fi
fi
